{"createdTime":1754243116377,"shownInTree":["analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].png","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].html","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].png","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].html","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].png","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].html","analytical/analytical.html","analytical/ci-and-si.html","analytical/factors-and-number-of-zeros.html","analytical/fast-calculation.html","analytical/number-system.html","analytical/permutation&computation.html","analytical/probability.html","analytical/speed-distance-time.html","analytical/time-and-work.html","analytical/unit-digit.html","cn/img/1.png","cn/img/1.html","cn/img/2.png","cn/img/2.html","cn/img/3.png","cn/img/3.html","cn/img/4.png","cn/img/4.html","cn/img/5.png","cn/img/5.html","cn/img/6.png","cn/img/6.html","cn/img/7.png","cn/img/7.html","cn/img/8.png","cn/img/8.html","cn/img/9.png","cn/img/9.html","cn/img/10.png","cn/img/10.html","cn/img/11.png","cn/img/11.html","cn/img/12.png","cn/img/12.html","cn/img/csma1.png","cn/img/csma1.html","cn/img/csma2.png","cn/img/csma2.html","cn/img/csma3.png","cn/img/csma3.html","cn/img/csma4.png","cn/img/csma4.html","cn/img/csmacd1.png","cn/img/csmacd1.html","cn/img/csmacd2.png","cn/img/csmacd2.html","cn/img/csmacd3.png","cn/img/csmacd3.html","cn/img/csmacd4.png","cn/img/csmacd4.html","cn/img/layeredexample.png","cn/img/layeredexample.html","cn/img/multipleaccess.png","cn/img/multipleaccess.html","cn/img/osi1.png","cn/img/osi1.html","cn/img/osi2.png","cn/img/osi2.html","cn/img/osi3.png","cn/img/osi3.html","cn/img/osi11.png","cn/img/osi11.html","cn/img/osi12.png","cn/img/osi12.html","cn/img/osi13.png","cn/img/osi13.html","cn/img/osi14.png","cn/img/osi14.html","cn/img/osi15.png","cn/img/osi15.html","cn/img/osi16.png","cn/img/osi16.html","cn/img/osi17.png","cn/img/osi17.html","cn/img/osi18.png","cn/img/osi18.html","cn/img/osi19.png","cn/img/osi19.html","cn/img/osi20.png","cn/img/osi20.html","cn/img/osi21.png","cn/img/osi21.html","cn/img/pasted-image-20250222185456.png","cn/img/pasted-image-20250222185456.html","cn/img/pasted-image-20250223092151.png","cn/img/pasted-image-20250223092151.html","cn/img/pasted-image-20250228090351.png","cn/img/pasted-image-20250228090351.html","cn/img/purealoha1.png","cn/img/purealoha1.html","cn/img/purealoha2.png","cn/img/purealoha2.html","cn/img/screenshot-2025-02-23-091952.png","cn/img/screenshot-2025-02-23-091952.html","cn/img/screenshot-2025-02-23-092436.png","cn/img/screenshot-2025-02-23-092436.html","cn/img/slottedaloha1.png","cn/img/slottedaloha1.html","cn/img/slottedaloha2.png","cn/img/slottedaloha2.html","cn/img/tcpheader.png","cn/img/tcpheader.html","cn/img/tcpheaderflags.png","cn/img/tcpheaderflags.html","cn/img/tcpsegmentflow.png","cn/img/tcpsegmentflow.html","cn/img/topologies.jpg","cn/img/topologies.html","cn/standard-clint-service-protocols/img/emailaddress.png","cn/standard-clint-service-protocols/img/emailaddress.html","cn/standard-clint-service-protocols/img/emailarct.png","cn/standard-clint-service-protocols/img/emailarct.html","cn/standard-clint-service-protocols/img/emaileg1.png","cn/standard-clint-service-protocols/img/emaileg1.html","cn/standard-clint-service-protocols/img/emaileg2.png","cn/standard-clint-service-protocols/img/emaileg2.html","cn/standard-clint-service-protocols/img/emailegcookie.png","cn/standard-clint-service-protocols/img/emailegcookie.html","cn/standard-clint-service-protocols/img/emailmessagestruct.png","cn/standard-clint-service-protocols/img/emailmessagestruct.html","cn/standard-clint-service-protocols/img/emailnonpersistent.png","cn/standard-clint-service-protocols/img/emailnonpersistent.html","cn/standard-clint-service-protocols/img/emailpersistent.png","cn/standard-clint-service-protocols/img/emailpersistent.html","cn/standard-clint-service-protocols/img/emailprotocol.png","cn/standard-clint-service-protocols/img/emailprotocol.html","cn/standard-clint-service-protocols/img/emailuseragent.png","cn/standard-clint-service-protocols/img/emailuseragent.html","cn/standard-clint-service-protocols/img/emailworkingbrowser.png","cn/standard-clint-service-protocols/img/emailworkingbrowser.html","cn/standard-clint-service-protocols/img/ftp.png","cn/standard-clint-service-protocols/img/ftp.html","cn/standard-clint-service-protocols/img/ftpcmd.png","cn/standard-clint-service-protocols/img/ftpcmd.html","cn/standard-clint-service-protocols/img/ftpeg.png","cn/standard-clint-service-protocols/img/ftpeg.html","cn/standard-clint-service-protocols/img/httpeg1.png","cn/standard-clint-service-protocols/img/httpeg1.html","cn/standard-clint-service-protocols/img/httpeg2.png","cn/standard-clint-service-protocols/img/httpeg2.html","cn/standard-clint-service-protocols/img/httpproxy.png","cn/standard-clint-service-protocols/img/httpproxy.html","cn/standard-clint-service-protocols/img/httpstruct.png","cn/standard-clint-service-protocols/img/httpstruct.html","cn/standard-clint-service-protocols/img/mime5.png","cn/standard-clint-service-protocols/img/mime5.html","cn/standard-clint-service-protocols/img/mims1.png","cn/standard-clint-service-protocols/img/mims1.html","cn/standard-clint-service-protocols/img/mims2.png","cn/standard-clint-service-protocols/img/mims2.html","cn/standard-clint-service-protocols/img/mims3.png","cn/standard-clint-service-protocols/img/mims3.html","cn/standard-clint-service-protocols/img/mims4.png","cn/standard-clint-service-protocols/img/mims4.html","cn/standard-clint-service-protocols/img/telnet.png","cn/standard-clint-service-protocols/img/telnet.html","cn/standard-clint-service-protocols/img/telnet_nvt.png","cn/standard-clint-service-protocols/img/telnet_nvt.html","cn/standard-clint-service-protocols/img/webemail.png","cn/standard-clint-service-protocols/img/webemail.html","cn/standard-clint-service-protocols/email.html","cn/standard-clint-service-protocols/ftp.html","cn/standard-clint-service-protocols/httpstructureexp.html","cn/standard-clint-service-protocols/telnet.html","cn/standard-clint-service-protocols/www-http.html","cn/untitled/01-uploaded-chapter-1-introduction.ppt","cn/untitled/2standards-and-protocols.ppt","cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.mp4","cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.html","cn/untitled/20-22-network-layer-design-issues-upload.ppt","cn/untitled/audio-video-compression.ppt","cn/untitled/ch21-upload.ppt","cn/untitled/connecting-lans-upload.ppt","cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].pdf","cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].html","cn/untitled/distance-vector-routing-part-2.mp4","cn/untitled/distance-vector-routing-part-2.html","cn/untitled/frmcoursesyllabusipdownload.pdf","cn/untitled/frmcoursesyllabusipdownload.html","cn/untitled/icmp-upload.pdf","cn/untitled/icmp-upload.html","cn/untitled/lect-5-chapt-2-transmission-media-upload.ppt","cn/untitled/lecture-6-chapter-2-line-coding-upload.pptx","cn/untitled/lecture-16-[autosaved]upload.ppt","cn/untitled/lecture-multiple-access-upload-14.2.2021.ppt","cn/untitled/updated-22a-(process-to-process-delivery-(udp-and-tcp))-121-slides.ppt","cn/untitled/upload-03-analog-and-digital-transmission.ppt","cn/untitled/upload-04-layered-architecture-of-computer-networks-osi-and-tcpip-model-lecture-5.ppt","cn/untitled/upload-26-(smtp-and-ftp)-76-slides.ppt","cn/untitled/upload-ch26-updated.ppt","cn/untitled/zerolecture-ece416.pdf","cn/untitled/zerolecture-ece416.html","cn/csma.html","cn/csmacd.html","cn/datacommunication.html","cn/osi.html","cn/process-to-process.html","cn/purealoha.html","cn/randomaccess.html","cn/slottedaloha.html","cn/tcp.html","cn/tcp-ip.html","cn/topologies.html","cn/udp.html","cn/untitled.html","cn/untitled-1.html","d3,js/untitled.html","eng/narration.html","eng/para-jumbles.html","exercise/exercise.html","exercise/fat.html","exercise/lifestyle.html","java/new-folder/03.-variables-and-data-types-(1).pptx","java/new-folder/04.-operators.pptx","java/new-folder/05.-control-structures.ppt","java/new-folder/07.-array-and-enum.ppt","java/new-folder/09.-arraylist.ppt","java/new-folder/10.-methods-and-constructors.ppt","java/new-folder/11.-this,-final,-super-and-static-keywords.ppt","java/new-folder/12.-abstract-class-and-interface.ppt","java/new-folder/13.-string-handling(string-class).pptx","java/new-folder/assertion.ppt","java/new-folder/exception-handling.pptx","java/new-folder/frmcoursesyllabusipdownload.pdf","java/new-folder/frmcoursesyllabusipdownload.html","java/new-folder/inheritance.pptx","java/new-folder/java-practise-qns.pdf","java/new-folder/java-practise-qns.html","java/new-folder/lect_2.pptx","java/new-folder/polymorphism-in-java.pptx","java/new-folder/zerolect_cse380.pptx","java/arraylength.html","java/arrays.html","java/assertion.html","java/classes.html","java/constructor.html","java/contructorchainingwithsuper.html","java/contructorchainingwiththis.html","java/default-values.html","java/enums.html","java/enumsscope.html","java/exception-and-assertion-mcqs.html","java/exception-handeling.html","java/finalkeyword.html","java/functionpassingvalues.html","java/instanceof.html","java/interfaces.html","java/interfaces-and-lambda.html","java/introduction-to-java.html","java/java-io.html","java/java-syntax.html","java/javaa.html","java/loops.html","java/mcq_string.png","java/mcq_string.html","java/methods.html","java/more-about-static.html","java/operators-and-precedence.html","java/polymorphism.html","java/shortcircuitlogicaloperators.html","java/statickeyword.html","java/stringcompareto().html","java/stringconcat.html","java/stringconstructor.html","java/stringgetchars().html","java/stringmethods.html","java/strings.html","java/stringsplit().html","java/superkeyword.html","java/taking-input.html","java/takinginput_scanner_methods.png","java/takinginput_scanner_methods.html","java/thiskeyword.html","maths/gaphs.pdf","maths/gaphs.html","maths/index.html","maths/mth_unit-iv_mcq.pdf","maths/mth_unit-iv_mcq.html","maths/rosen_discrete_mathematics_and_its_applications_7th_edition.pdf","maths/rosen_discrete_mathematics_and_its_applications_7th_edition.html","maths/trees.pdf","maths/trees.html","maths/untitled.html","maths/wi.pdf","maths/wi.html","index.html"],"attachments":["site-lib/scripts/graph-wasm.wasm","site-lib/fonts/94f2f163d4b698242fef.otf","site-lib/fonts/72505e6a122c6acd5471.woff2","site-lib/fonts/2d5198822ab091ce4305.woff2","site-lib/fonts/c8ba52b05a9ef10f4758.woff2","site-lib/fonts/cb10ffd7684cd9836a05.woff2","site-lib/fonts/b5f0f109bc88052d4000.woff2","site-lib/fonts/cbe0ae49c52c920fd563.woff2","site-lib/fonts/535a6cf662596b3bd6a6.woff2","site-lib/fonts/70cc7ff27245e82ad414.ttf","site-lib/fonts/454577c22304619db035.ttf","site-lib/fonts/52ac8f3034507f1d9e53.ttf","site-lib/fonts/05b618077343fbbd92b7.ttf","site-lib/fonts/4bb6ac751d1c5478ff3a.woff2","site-lib/media/6155340132a851f6089e.svg","site-lib/media/2308ab1944a6bfa5c5b8.svg","site-lib/fonts/mathjax_zero.woff","site-lib/fonts/mathjax_main-regular.woff","site-lib/fonts/mathjax_main-bold.woff","site-lib/fonts/mathjax_math-italic.woff","site-lib/fonts/mathjax_main-italic.woff","site-lib/fonts/mathjax_math-bolditalic.woff","site-lib/fonts/mathjax_size1-regular.woff","site-lib/fonts/mathjax_size2-regular.woff","site-lib/fonts/mathjax_size3-regular.woff","site-lib/fonts/mathjax_size4-regular.woff","site-lib/fonts/mathjax_ams-regular.woff","site-lib/fonts/mathjax_calligraphic-regular.woff","site-lib/fonts/mathjax_calligraphic-bold.woff","site-lib/fonts/mathjax_fraktur-regular.woff","site-lib/fonts/mathjax_fraktur-bold.woff","site-lib/fonts/mathjax_sansserif-regular.woff","site-lib/fonts/mathjax_sansserif-bold.woff","site-lib/fonts/mathjax_sansserif-italic.woff","site-lib/fonts/mathjax_script-regular.woff","site-lib/fonts/mathjax_typewriter-regular.woff","site-lib/fonts/mathjax_vector-regular.woff","site-lib/fonts/mathjax_vector-bold.woff","site-lib/html/file-tree-content.html","site-lib/scripts/webpage.js","site-lib/scripts/graph-wasm.js","site-lib/scripts/graph-render-worker.js","site-lib/media/favicon.png","site-lib/styles/obsidian.css","site-lib/styles/global-variable-styles.css","site-lib/styles/main-styles.css","site-lib/rss.xml","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].png","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].png","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].png","cn/img/1.png","cn/img/2.png","cn/img/3.png","cn/img/4.png","cn/img/5.png","cn/img/6.png","cn/img/7.png","cn/img/8.png","cn/img/9.png","cn/img/10.png","cn/img/11.png","cn/img/12.png","cn/img/csma1.png","cn/img/csma2.png","cn/img/csma3.png","cn/img/csma4.png","cn/img/csmacd1.png","cn/img/csmacd2.png","cn/img/csmacd3.png","cn/img/csmacd4.png","cn/img/layeredexample.png","cn/img/multipleaccess.png","cn/img/osi1.png","cn/img/osi2.png","cn/img/osi3.png","cn/img/osi11.png","cn/img/osi12.png","cn/img/osi13.png","cn/img/osi14.png","cn/img/osi15.png","cn/img/osi16.png","cn/img/osi17.png","cn/img/osi18.png","cn/img/osi19.png","cn/img/osi20.png","cn/img/osi21.png","cn/img/pasted-image-20250222185456.png","cn/img/pasted-image-20250223092151.png","cn/img/pasted-image-20250228090351.png","cn/img/purealoha1.png","cn/img/purealoha2.png","cn/img/screenshot-2025-02-23-091952.png","cn/img/screenshot-2025-02-23-092436.png","cn/img/slottedaloha1.png","cn/img/slottedaloha2.png","cn/img/tcpheader.png","cn/img/tcpheaderflags.png","cn/img/tcpsegmentflow.png","cn/img/topologies.jpg","cn/standard-clint-service-protocols/img/emailaddress.png","cn/standard-clint-service-protocols/img/emailarct.png","cn/standard-clint-service-protocols/img/emaileg1.png","cn/standard-clint-service-protocols/img/emaileg2.png","cn/standard-clint-service-protocols/img/emailegcookie.png","cn/standard-clint-service-protocols/img/emailmessagestruct.png","cn/standard-clint-service-protocols/img/emailnonpersistent.png","cn/standard-clint-service-protocols/img/emailpersistent.png","cn/standard-clint-service-protocols/img/emailprotocol.png","cn/standard-clint-service-protocols/img/emailuseragent.png","cn/standard-clint-service-protocols/img/emailworkingbrowser.png","cn/standard-clint-service-protocols/img/ftp.png","cn/standard-clint-service-protocols/img/ftpcmd.png","cn/standard-clint-service-protocols/img/ftpeg.png","cn/standard-clint-service-protocols/img/httpeg1.png","cn/standard-clint-service-protocols/img/httpeg2.png","cn/standard-clint-service-protocols/img/httpproxy.png","cn/standard-clint-service-protocols/img/httpstruct.png","cn/standard-clint-service-protocols/img/mime5.png","cn/standard-clint-service-protocols/img/mims1.png","cn/standard-clint-service-protocols/img/mims2.png","cn/standard-clint-service-protocols/img/mims3.png","cn/standard-clint-service-protocols/img/mims4.png","cn/standard-clint-service-protocols/img/telnet.png","cn/standard-clint-service-protocols/img/telnet_nvt.png","cn/standard-clint-service-protocols/img/webemail.png","cn/untitled/01-uploaded-chapter-1-introduction.ppt","cn/untitled/2standards-and-protocols.ppt","cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.mp4","cn/untitled/20-22-network-layer-design-issues-upload.ppt","cn/untitled/audio-video-compression.ppt","cn/untitled/ch21-upload.ppt","cn/untitled/connecting-lans-upload.ppt","cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].pdf","cn/untitled/distance-vector-routing-part-2.mp4","cn/untitled/frmcoursesyllabusipdownload.pdf","cn/untitled/icmp-upload.pdf","cn/untitled/lect-5-chapt-2-transmission-media-upload.ppt","cn/untitled/lecture-6-chapter-2-line-coding-upload.pptx","cn/untitled/lecture-16-[autosaved]upload.ppt","cn/untitled/lecture-multiple-access-upload-14.2.2021.ppt","cn/untitled/updated-22a-(process-to-process-delivery-(udp-and-tcp))-121-slides.ppt","cn/untitled/upload-03-analog-and-digital-transmission.ppt","cn/untitled/upload-04-layered-architecture-of-computer-networks-osi-and-tcpip-model-lecture-5.ppt","cn/untitled/upload-26-(smtp-and-ftp)-76-slides.ppt","cn/untitled/upload-ch26-updated.ppt","cn/untitled/zerolecture-ece416.pdf","java/new-folder/03.-variables-and-data-types-(1).pptx","java/new-folder/04.-operators.pptx","java/new-folder/05.-control-structures.ppt","java/new-folder/07.-array-and-enum.ppt","java/new-folder/09.-arraylist.ppt","java/new-folder/10.-methods-and-constructors.ppt","java/new-folder/11.-this,-final,-super-and-static-keywords.ppt","java/new-folder/12.-abstract-class-and-interface.ppt","java/new-folder/13.-string-handling(string-class).pptx","java/new-folder/assertion.ppt","java/new-folder/exception-handling.pptx","java/new-folder/frmcoursesyllabusipdownload.pdf","java/new-folder/inheritance.pptx","java/new-folder/java-practise-qns.pdf","java/new-folder/lect_2.pptx","java/new-folder/polymorphism-in-java.pptx","java/new-folder/zerolect_cse380.pptx","java/mcq_string.png","java/takinginput_scanner_methods.png","maths/gaphs.pdf","maths/mth_unit-iv_mcq.pdf","maths/rosen_discrete_mathematics_and_its_applications_7th_edition.pdf","maths/trees.pdf","maths/wi.pdf"],"allFiles":["exercise/fat.html","analytical/permutation&computation.html","analytical/analytical.html","java/javaa.html","java/functionpassingvalues.html","java/arraylength.html","index.html","cn/untitled-1.html","cn/untitled.html","exercise/lifestyle.html","d3,js/untitled.html","analytical/probability.html","analytical/ci-and-si.html","analytical/speed-distance-time.html","analytical/fast-calculation.html","analytical/time-and-work.html","eng/para-jumbles.html","eng/narration.html","exercise/exercise.html","analytical/factors-and-number-of-zeros.html","analytical/unit-digit.html","analytical/number-system.html","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].png","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].html","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].png","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].html","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].png","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].html","cn/udp.html","cn/topologies.html","cn/tcp.html","cn/standard-clint-service-protocols/www-http.html","cn/standard-clint-service-protocols/ftp.html","cn/randomaccess.html","cn/process-to-process.html","cn/osi.html","cn/datacommunication.html","java/thiskeyword.html","java/superkeyword.html","java/stringmethods.html","java/operators-and-precedence.html","java/enums.html","java/classes.html","cn/slottedaloha.html","cn/purealoha.html","cn/tcp-ip.html","cn/img/osi20.png","cn/img/osi20.html","cn/img/osi19.png","cn/img/osi19.html","cn/img/osi18.png","cn/img/osi18.html","cn/img/osi17.png","cn/img/osi17.html","cn/img/osi16.png","cn/img/osi16.html","cn/img/osi15.png","cn/img/osi15.html","cn/img/osi14.png","cn/img/osi14.html","cn/img/osi13.png","cn/img/osi13.html","cn/img/osi12.png","cn/img/osi12.html","cn/img/osi11.png","cn/img/osi11.html","cn/img/osi21.png","cn/img/osi21.html","cn/img/csma1.png","cn/img/csma1.html","cn/img/topologies.jpg","cn/img/topologies.html","cn/img/slottedaloha2.png","cn/img/slottedaloha2.html","cn/img/slottedaloha1.png","cn/img/slottedaloha1.html","cn/img/screenshot-2025-02-23-092436.png","cn/img/screenshot-2025-02-23-092436.html","cn/img/screenshot-2025-02-23-091952.png","cn/img/screenshot-2025-02-23-091952.html","cn/img/purealoha2.png","cn/img/purealoha2.html","cn/img/purealoha1.png","cn/img/purealoha1.html","cn/img/pasted-image-20250228090351.png","cn/img/pasted-image-20250228090351.html","cn/img/pasted-image-20250223092151.png","cn/img/pasted-image-20250223092151.html","cn/img/pasted-image-20250222185456.png","cn/img/pasted-image-20250222185456.html","cn/img/osi3.png","cn/img/osi3.html","cn/img/osi2.png","cn/img/osi2.html","cn/img/osi1.png","cn/img/osi1.html","cn/img/multipleaccess.png","cn/img/multipleaccess.html","cn/img/layeredexample.png","cn/img/layeredexample.html","cn/img/csmacd4.png","cn/img/csmacd4.html","cn/img/csmacd3.png","cn/img/csmacd3.html","cn/img/csmacd2.png","cn/img/csmacd2.html","cn/img/csmacd1.png","cn/img/csmacd1.html","cn/img/csma4.png","cn/img/csma4.html","cn/img/csma3.png","cn/img/csma3.html","cn/img/csma2.png","cn/img/csma2.html","cn/csma.html","cn/csmacd.html","cn/img/tcpheader.png","cn/img/tcpheader.html","cn/img/tcpheaderflags.png","cn/img/tcpheaderflags.html","cn/img/tcpsegmentflow.png","cn/img/tcpsegmentflow.html","cn/standard-clint-service-protocols/email.html","cn/standard-clint-service-protocols/telnet.html","cn/standard-clint-service-protocols/img/telnet_nvt.png","cn/standard-clint-service-protocols/img/telnet_nvt.html","cn/standard-clint-service-protocols/img/telnet.png","cn/standard-clint-service-protocols/img/telnet.html","cn/standard-clint-service-protocols/img/webemail.png","cn/standard-clint-service-protocols/img/webemail.html","cn/standard-clint-service-protocols/img/mims1.png","cn/standard-clint-service-protocols/img/mims1.html","cn/standard-clint-service-protocols/img/mims2.png","cn/standard-clint-service-protocols/img/mims2.html","cn/standard-clint-service-protocols/img/mims3.png","cn/standard-clint-service-protocols/img/mims3.html","cn/standard-clint-service-protocols/img/mims4.png","cn/standard-clint-service-protocols/img/mims4.html","cn/standard-clint-service-protocols/img/mime5.png","cn/standard-clint-service-protocols/img/mime5.html","cn/standard-clint-service-protocols/img/emaileg1.png","cn/standard-clint-service-protocols/img/emaileg1.html","cn/standard-clint-service-protocols/img/emaileg2.png","cn/standard-clint-service-protocols/img/emaileg2.html","cn/standard-clint-service-protocols/img/emailprotocol.png","cn/standard-clint-service-protocols/img/emailprotocol.html","cn/standard-clint-service-protocols/img/emailaddress.png","cn/standard-clint-service-protocols/img/emailaddress.html","cn/standard-clint-service-protocols/img/emailuseragent.png","cn/standard-clint-service-protocols/img/emailuseragent.html","cn/standard-clint-service-protocols/img/emailmessagestruct.png","cn/standard-clint-service-protocols/img/emailmessagestruct.html","cn/standard-clint-service-protocols/img/emailarct.png","cn/standard-clint-service-protocols/img/emailarct.html","cn/standard-clint-service-protocols/img/ftpcmd.png","cn/standard-clint-service-protocols/img/ftpcmd.html","cn/standard-clint-service-protocols/img/ftpeg.png","cn/standard-clint-service-protocols/img/ftpeg.html","cn/standard-clint-service-protocols/img/ftp.png","cn/standard-clint-service-protocols/img/ftp.html","cn/standard-clint-service-protocols/img/httpproxy.png","cn/standard-clint-service-protocols/img/httpproxy.html","cn/standard-clint-service-protocols/img/emailegcookie.png","cn/standard-clint-service-protocols/img/emailegcookie.html","cn/standard-clint-service-protocols/img/httpeg1.png","cn/standard-clint-service-protocols/img/httpeg1.html","cn/standard-clint-service-protocols/img/httpeg2.png","cn/standard-clint-service-protocols/img/httpeg2.html","cn/standard-clint-service-protocols/httpstructureexp.html","cn/standard-clint-service-protocols/img/httpstruct.png","cn/standard-clint-service-protocols/img/httpstruct.html","cn/standard-clint-service-protocols/img/emailworkingbrowser.png","cn/standard-clint-service-protocols/img/emailworkingbrowser.html","cn/standard-clint-service-protocols/img/emailpersistent.png","cn/standard-clint-service-protocols/img/emailpersistent.html","cn/standard-clint-service-protocols/img/emailnonpersistent.png","cn/standard-clint-service-protocols/img/emailnonpersistent.html","cn/untitled/audio-video-compression.ppt","cn/untitled/upload-26-(smtp-and-ftp)-76-slides.ppt","cn/untitled/upload-ch26-updated.ppt","maths/index.html","java/taking-input.html","java/new-folder/java-practise-qns.pdf","java/new-folder/java-practise-qns.html","java/statickeyword.html","java/finalkeyword.html","java/contructorchainingwithsuper.html","java/contructorchainingwiththis.html","java/enumsscope.html","java/arrays.html","java/stringcompareto().html","java/stringsplit().html","java/stringgetchars().html","java/stringconcat.html","java/stringconstructor.html","java/strings.html","java/instanceof.html","java/interfaces.html","java/constructor.html","java/methods.html","java/loops.html","java/shortcircuitlogicaloperators.html","java/takinginput_scanner_methods.png","java/takinginput_scanner_methods.html","java/more-about-static.html","java/java-syntax.html","java/introduction-to-java.html","java/default-values.html","java/mcq_string.png","java/mcq_string.html","java/interfaces-and-lambda.html","java/polymorphism.html","java/new-folder/11.-this,-final,-super-and-static-keywords.ppt","java/new-folder/inheritance.pptx","java/new-folder/12.-abstract-class-and-interface.ppt","java/assertion.html","java/exception-handeling.html","java/java-io.html","java/exception-and-assertion-mcqs.html","java/new-folder/frmcoursesyllabusipdownload.pdf","java/new-folder/frmcoursesyllabusipdownload.html","maths/untitled.html","java/new-folder/assertion.ppt","java/new-folder/polymorphism-in-java.pptx","java/new-folder/exception-handling.pptx","maths/mth_unit-iv_mcq.pdf","maths/mth_unit-iv_mcq.html","maths/gaphs.pdf","maths/gaphs.html","maths/trees.pdf","maths/trees.html","maths/wi.pdf","maths/wi.html","maths/rosen_discrete_mathematics_and_its_applications_7th_edition.pdf","maths/rosen_discrete_mathematics_and_its_applications_7th_edition.html","cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].pdf","cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].html","cn/img/12.png","cn/img/12.html","cn/img/11.png","cn/img/11.html","cn/img/10.png","cn/img/10.html","cn/img/9.png","cn/img/9.html","cn/img/8.png","cn/img/8.html","cn/img/7.png","cn/img/7.html","cn/img/6.png","cn/img/6.html","cn/img/5.png","cn/img/5.html","cn/untitled/frmcoursesyllabusipdownload.pdf","cn/untitled/frmcoursesyllabusipdownload.html","cn/img/4.png","cn/img/4.html","cn/img/3.png","cn/img/3.html","cn/img/2.png","cn/img/2.html","cn/img/1.png","cn/img/1.html","cn/untitled/lecture-multiple-access-upload-14.2.2021.ppt","cn/untitled/connecting-lans-upload.ppt","cn/untitled/icmp-upload.pdf","cn/untitled/icmp-upload.html","cn/untitled/lecture-16-[autosaved]upload.ppt","cn/untitled/20-22-network-layer-design-issues-upload.ppt","cn/untitled/ch21-upload.ppt","cn/untitled/distance-vector-routing-part-2.mp4","cn/untitled/distance-vector-routing-part-2.html","cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.mp4","cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.html","cn/untitled/updated-22a-(process-to-process-delivery-(udp-and-tcp))-121-slides.ppt","java/new-folder/09.-arraylist.ppt","java/new-folder/10.-methods-and-constructors.ppt","cn/untitled/01-uploaded-chapter-1-introduction.ppt","cn/untitled/2standards-and-protocols.ppt","cn/untitled/zerolecture-ece416.pdf","cn/untitled/zerolecture-ece416.html","cn/untitled/upload-04-layered-architecture-of-computer-networks-osi-and-tcpip-model-lecture-5.ppt","cn/untitled/upload-03-analog-and-digital-transmission.ppt","cn/untitled/lecture-6-chapter-2-line-coding-upload.pptx","cn/untitled/lect-5-chapt-2-transmission-media-upload.ppt","java/new-folder/13.-string-handling(string-class).pptx","java/new-folder/05.-control-structures.ppt","java/new-folder/07.-array-and-enum.ppt","java/new-folder/03.-variables-and-data-types-(1).pptx","java/new-folder/zerolect_cse380.pptx","java/new-folder/04.-operators.pptx","java/new-folder/lect_2.pptx","site-lib/scripts/graph-wasm.wasm","site-lib/fonts/94f2f163d4b698242fef.otf","site-lib/fonts/72505e6a122c6acd5471.woff2","site-lib/fonts/2d5198822ab091ce4305.woff2","site-lib/fonts/c8ba52b05a9ef10f4758.woff2","site-lib/fonts/cb10ffd7684cd9836a05.woff2","site-lib/fonts/b5f0f109bc88052d4000.woff2","site-lib/fonts/cbe0ae49c52c920fd563.woff2","site-lib/fonts/535a6cf662596b3bd6a6.woff2","site-lib/fonts/70cc7ff27245e82ad414.ttf","site-lib/fonts/454577c22304619db035.ttf","site-lib/fonts/52ac8f3034507f1d9e53.ttf","site-lib/fonts/05b618077343fbbd92b7.ttf","site-lib/fonts/4bb6ac751d1c5478ff3a.woff2","site-lib/media/6155340132a851f6089e.svg","site-lib/media/2308ab1944a6bfa5c5b8.svg","site-lib/fonts/mathjax_zero.woff","site-lib/fonts/mathjax_main-regular.woff","site-lib/fonts/mathjax_main-bold.woff","site-lib/fonts/mathjax_math-italic.woff","site-lib/fonts/mathjax_main-italic.woff","site-lib/fonts/mathjax_math-bolditalic.woff","site-lib/fonts/mathjax_size1-regular.woff","site-lib/fonts/mathjax_size2-regular.woff","site-lib/fonts/mathjax_size3-regular.woff","site-lib/fonts/mathjax_size4-regular.woff","site-lib/fonts/mathjax_ams-regular.woff","site-lib/fonts/mathjax_calligraphic-regular.woff","site-lib/fonts/mathjax_calligraphic-bold.woff","site-lib/fonts/mathjax_fraktur-regular.woff","site-lib/fonts/mathjax_fraktur-bold.woff","site-lib/fonts/mathjax_sansserif-regular.woff","site-lib/fonts/mathjax_sansserif-bold.woff","site-lib/fonts/mathjax_sansserif-italic.woff","site-lib/fonts/mathjax_script-regular.woff","site-lib/fonts/mathjax_typewriter-regular.woff","site-lib/fonts/mathjax_vector-regular.woff","site-lib/fonts/mathjax_vector-bold.woff","site-lib/html/file-tree-content.html","site-lib/scripts/webpage.js","site-lib/scripts/graph-wasm.js","site-lib/scripts/graph-render-worker.js","site-lib/media/favicon.png","site-lib/styles/obsidian.css","site-lib/styles/global-variable-styles.css","site-lib/styles/main-styles.css"],"webpages":{"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].html":{"title":"Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 2m44s]","icon":"","description":"<img src=\"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].html","pathToRoot":"../..","attachments":["analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].html"],"createdTime":1749770259593,"modifiedTime":1749770259598,"sourceSize":175427,"sourcePath":"Analytical/img/Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 2m44s].png","exportPath":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].html","showInTree":true,"treeOrder":2,"backlinks":["analytical/number-system.html"],"type":"attachment"},"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].html":{"title":"Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 22m40s]","icon":"","description":"<img src=\"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].html","pathToRoot":"../..","attachments":["analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].html"],"createdTime":1749771235185,"modifiedTime":1749771235186,"sourceSize":227879,"sourcePath":"Analytical/img/Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 22m40s].png","exportPath":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].html","showInTree":true,"treeOrder":3,"backlinks":["analytical/number-system.html"],"type":"attachment"},"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].html":{"title":"Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 25m30s]","icon":"","description":"<img src=\"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].html","pathToRoot":"../..","attachments":["analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].html"],"createdTime":1749773031426,"modifiedTime":1749773031428,"sourceSize":149606,"sourcePath":"Analytical/img/Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 25m30s].png","exportPath":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].html","showInTree":true,"treeOrder":4,"backlinks":["analytical/number-system.html"],"type":"attachment"},"analytical/analytical.html":{"title":"Analytical","icon":"","description":"The following examples use this scenario:\nA completes work in 12 days.\nB completes work in 16 days.\nInitial Calculation:\nTotal Work: LCM(12, 16) = 48 units\nA's Efficiency: units/day\nB's Efficiency: units/day\nQuestion: If A and B work together, how many days will it take?Solution:\nCombined Efficiency (A + B) = 4 + 3 = 7 units/day\nTime Taken = days = days\nQuestion: A works for 4 days, then B joins. How long until completion?Solution:\nWork done by A in 4 days = 4 × 4 = 16 units\nRemaining Work = 48 - 16 = 32 units\nTime for remaining work = days\nTotal Time = 4 + days = days\nQuestion: A and B work together for 5 days, then A leaves. How long until completion?Solution:\nWork done in 5 days = 7 × 5 = 35 units\nRemaining Work = 48 - 35 = 13 units\nTime for B to finish = days = days\nTotal Time = 5 + days\nQuestion: In the previous scenario, how many days will B take to complete the remaining work?Solution:\nRemaining Work = 13 units\nTime for B = days = days\nQuestion: A and B work together, but A leaves 5 days before completion. How long does it take?Method 1: Logical Deduction\nB works alone for the last 5 days (15 units)\nWork done together = 48 - 15 = 33 units\nTime for initial work = days\nTotal time = days\nMethod 2: Shortcut Trick\nA's missed work = 4 × 5 = 20 units\nNew Total Work = 48 + 20 = 68 units\nTime Taken = days\nQuestion: A, B, and C start together. A leaves 5 days before, B leaves 4 days before completion. How long does it take?Solution:\nTotal Work = LCM(12, 16, 24) = 48 units\nEfficiencies: A = 4, B = 3, C = 2 units/day. Combined = 9 units/day\nA's missed work = 5 × 4 = 20 units\nB's missed work = 4 × 3 = 12 units\nNew Total Work = 48 + 20 + 12 = 80 units\nTotal Time = days\nQuestion: A (12 days) and B (16 days) work on alternate days, A starting first. How long will it take?Solution:\nDay 1 (A): 4 units\nDay 2 (B): 3 units\nWork Cycle (2 days): 7 units\n6 full cycles: 42 units, 12 days\nRemaining Work: 6 units\nDay 13 (A): 4 units done, 2 remaining\nDay 14 (B): day\nTotal Time = 12 + 1 + days\nQuestion: A builds in 12 days, B destroys in 16 days. How long until completion?Solution:\nA's Efficiency = +4 units/day\nB's Efficiency = -3 units/day\nNet Efficiency = +1 unit/day\nTime Taken = days For taking LCM: Find the smallest number that will be fully divided by all given individual completion times. See what should be multiplied with each person's time to get the LCM - that number will be the efficiency of that person. Formula: Efficiency = $LCM \\div Individual Time$ Working together: Add all efficiencies Working separately: Use individual efficiency Alternating work: Calculate cycle-wise Time and WorkThe unit digit is the right-most digit of a number. When calculating the unit digit of a product or a number raised to a power, you often only need to consider the unit digits of the numbers involved.To find the unit digit of a product of several numbers, multiply only their unit digits.\nExample: For 278 * 623, multiply the unit digits 8 * 3 = 24. The resulting unit digit is 4.\nTo find the unit digit of a number in the form numberpower, the method depends on the unit digit of the base number.For numbers with a unit digit of 0, 1, 5, or 6, the unit digit of the result will always be the same, regardless of the power.\nExample: The unit digit of 4552145521 is 5.\nThese numbers have a cyclicity of two, meaning their unit digit pattern repeats every two powers. The unit digit depends on whether the power is odd or even.\nExample: For 24243, the base unit digit is 4 and the power is odd, so the resulting unit digit is 4. Example: For 9998, the base unit digit is 9 and the power is even, so the resulting unit digit is 1.\nThese numbers have a cyclicity of four, meaning the unit digit pattern repeats every four powers.To find the unit digit:\nDivide the power by 4 and find the remainder. For large powers, you only need to divide the last two digits of the power by 4 to find the remainder.\nRaise the base's unit digit to the power of the remainder. This will be the new unit digit.\nIf the remainder is 0, use 4 as the power instead of 0. Example: To find the unit digit of 9291: Divide the power 91 by 4. The remainder is 3.\nCalculate 23 = 8. The unit digit is 8. Example: To find the unit digit of 127144: Divide the last two digits of the power (44) by 4. The remainder is 0.\nSince the remainder is 0, use the power 4. Calculate 74.\n74 = 2401. The unit digit is 1. Divisibility rules are shortcuts to determine if a number can be evenly divided by another, and they can also help in finding remainders.The rule is based on the number of last digits.\nDivisibility by 2: The last digit must be divisible by 2.\nDivisibility by 4: The last two digits must be divisible by 4.\nDivisibility by 8: The last three digits must be divisible by 8.\nThis follows a similar pattern to the powers of 2.\nDivisibility by 5: The last digit must be 0 or 5.\nDivisibility by 25: The last two digits must be divisible by 25 (e.g., 00, 25, 50, 75).\nDivisibility by 125: The last three digits must be divisible by 125.\nThese rules are based on the sum of the digits. Divisibility by 3: The sum of all digits must be divisible by 3. Divisibility by 9: The sum of all digits must be divisible by 9. Shortcut for 9: Pair up digits that sum to 9 and cancel them out. If all digits are cancelled, the number is divisible by 9. A number is divisible by 6 if it is divisible by both 2 and 3.This rule uses the alternating sum of digits.\nSum the digits in the odd positions (1st, 3rd, 5th, etc.).\nSum the digits in the even positions (2nd, 4th, 6th, etc.).\nFind the difference between the two sums.\nIf the difference is 0 or a multiple of 11, the number is divisible by 11. Example: For the number 1331: Odd positions sum: 1 + 3 = 4.\nEven positions sum: 3 + 1 = 4.\nDifference: 4 - 4 = 0. The number is divisible by 11. This table summarizes how to find the unit digit of a number raised to a power (numberpower).This table provides quick shortcuts to check if a number is divisible by another number.Unit DigitNumbers can be broadly classified into two main types: real numbers and imaginary numbers. For aptitude tests, the focus is solely on real numbers.<img alt=\"Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 2m44s].png\" src=\"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].png\" target=\"_self\">Any number that can be represented on a number line is a real number. This includes:\nPositive and negative integers\nZero\nFractions (e.g., 1/10)\nDecimals (e.g., 0.5)\nRoot values (e.g., √5), which can be plotted using geometric principles like the Pythagorean theorem.\nNumbers that cannot be represented on a number line are imaginary. An example is iota (i), which is the square root of -1. These are generally not part of the aptitude syllabus.Real numbers can be further divided into rational and irrational numbers.A number is rational if it can be expressed in the p/q form, where q is not equal to zero.\nIntegers: All integers are rational numbers (e.g., 2 can be written as 2/1).\nFractions: These are inherently in p/q form and are rational.\nTerminating Decimals: Decimals that end, like 0.5, are rational because they can be converted to a fraction (0.5 = 5/10).\nNon-Terminating, Repeating Decimals: Decimals that continue infinitely but have a repeating pattern, like 0.333..., are also rational as they can be converted to a fraction (0.333... = 1/3).\nA number is irrational if it cannot be expressed in the p/q form.\nThese are non-terminating and non-repeating decimals.\nExamples include root values like √2, √3, and special numbers like Pi (π) and Euler's number (e).\nA key point is that π is irrational, while 22/7 is a rational approximation of π, not its exact value.\nIs rational number ?\nAnswer is not rational number, is an approximation of Integers can be classified in several ways:\nBy Sign: Positive integers (1, 2, 3,...), negative integers (-1, -2, -3,...), and zero.\nEven and Odd: Even Numbers: Divisible by 2.\nOdd Numbers: Not divisible by 2.\nZero (0) is an even number because it is divisible by 2 (0/2 = 0) and it falls between two odd numbers (-1 and 1). Prime and Composite: Prime Numbers: Have exactly two factors: 1 and the number itself (e.g., 2, 3, 5).\nComposite Numbers: Have more than two factors.\nOne (1) is neither prime nor composite as it only has one factor. Also known as relatively prime numbers, these are a set of two or more numbers whose only common factor is 1 (their Highest Common Factor is 1). The numbers themselves do not have to be prime. For example, 3 and 10 are co-prime.A perfect number is a positive integer that is equal to the sum of all its factors, excluding the number itself.\nExample (6): The factors of 6 are 1, 2, 3, and 6. The sum of its factors excluding itself is 1 + 2 + 3 = 6.\nThe first three perfect numbers to remember for exams are 6, 28, and 496.\n<br><img alt=\"Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 22m40s].png\" src=\"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].png\" target=\"_self\">Terminating decimals, which are decimals that end, can be converted to fractions using a straightforward method. Write the decimal as a fraction by placing it over 1. For example, 0.75 becomes . Multiply both the numerator and the denominator by a power of 10. The number of zeros should match the number of digits after the decimal point. For 0.75, there are two digits after the decimal, so you multiply by 100. Simplify the resulting fraction to its lowest terms. For non-terminating, repeating decimals, there are both a traditional algebraic method and a shortcut method useful for competitive exams.This method uses algebra to find the fractional equivalent. Let's use the example 0.333.... Set the repeating decimal equal to a variable, such as x. Multiply both sides by a power of 10 to shift the decimal point. Since one digit is repeating, we multiply by 10. Subtract the first equation from the second to eliminate the repeating part. Solve for x and simplify the fraction. <br><img alt=\"Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 25m30s].png\" src=\"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].png\" target=\"_self\">The video provides shortcuts for quick conversions, which are divided into two cases.\nCase 1: All digits after the decimal repeat Rule: Place the repeating digit(s) in the numerator. In the denominator, write a '9' for every repeating digit. Example 1: For 0.666... (or 0.6̄), the fraction is , which simplifies to . Example 2: For 0.3434... (or 0.34̄), the fraction is . Case 2: Some digits repeat, and some do not Rule: Numerator: Subtract the non-repeating part from the number formed by all digits after the decimal.\nDenominator: Write a '9' for each repeating digit, followed by a '0' for each non-repeating digit that comes after the decimal point. Example: To convert 0.6777... (or 0.67̄). Numerator: The full number is 67, and the non-repeating part is 6. So, . Denominator: There is one repeating digit ('7'), so one '9'. There is one non-repeating digit after the decimal ('6'), so one '0'. The denominator is 90. Result: The fraction is . The video concludes with a summary of important facts for exams:\nπ is an irrational number, whereas 22/7 is a rational number.\n1 is neither a prime nor a composite number.\nThere are 15 prime numbers between 1 and 50.\nThere are 25 prime numbers between 1 and 100.\nThere are 21 prime numbers between 100 and 200.\nNumber SystemFactors are numbers that can divide another number exactly, without leaving a remainder. For instance, the factors of 24 are 1, 2, 3, 4, 6, 8, 12, and 24.The core technique for solving all factor-related problems is prime factorization, which involves expressing a number as a product of its prime factors raised to a power.\nExample (24): 24 = 8 × 3 = 2³ × 3¹\nExample (2400): 2400 = 24 × 100 = (2³ × 3¹) × (2² × 5²) = 2⁵ × 3¹ × 5²\nUsing prime factorization, you can answer seven common types of questions about factors.1. Total Number of Factors\nMethod: If a number's prime factorization is p₁ᵃ × p₂ᵇ × p₃ᶜ…, the total number of factors is the product of the powers each increased by one: (a+1)(b+1)(c+1)…\nExample (24 = 2³ × 3¹): (3+1)(1+1) = 4 × 2 = 8 factors\nExample (2400 = 2⁵ × 3¹ × 5²): (5+1)(1+1)(2+1) = 6 × 2 × 3 = 36 factors One is added as is 1 for all prime factors. 2. Number of Prime Factors\nMethod: Count the number of unique prime bases in the factorization.\nExample (24 = 2³ × 3¹): There are two prime factors: 2 and 3.\nExample (2400 = 2⁵ × 3¹ × 5²): There are three prime factors: 2, 3, and 5.\n3. Number of Composite Factors\nMethod: Total Factors - Number of Prime Factors - 1. The number 1 is subtracted because it is neither prime nor composite.\nExample (24): 8 (total) - 2 (prime) - 1 = 5 composite factors\nExample (2400): 36 (total) - 3 (prime) - 1 = 32 composite factors\n4. Number of Odd Factors\nMethod: Ignore the factor of 2 and apply the \"Total Number of Factors\" formula to the remaining odd prime factors.\nExample (24 = 2³ × 3¹): Using only 3¹, the number of odd factors is (1+1) = 2.\nExample (2400 = 2⁵ × 3¹ × 5²): Using 3¹ × 5², the number of odd factors is (1+1)(2+1) = 6.\n5. Number of Even Factors\nMethod 1: Total Factors - Odd Factors.\nMethod 2 (Direct): Take the power of 2 as it is (do not add 1) and multiply by the (power+1) of all other prime factors. For a number 2ᵃ × p₂ᵇ…, the formula is a × (b+1)….\nExample (24): The number of even factors is 8 - 3 = 5.\nExample (2400): The number of even factors is 36 - 12 = 24.\n6. Number of Factors that are Perfect Squares\nMethod: For a number N = p₁ᵃ × p₂ᵇ × p₃ᶜ…, take the exponents, divide each by 2 and take the floor, and multiply these to determine the total number of factors that are perfect squares.\nExample (24 = 2³ × 3¹): The total factors that are perfect squares is floor(3/2) floor(1/2) = 10 = 0.\nExample (36 = 2² × 3²): The total factors that are perfect squares is floor(2/2) floor(2/2) = 11 = 1.\n7. Number of Factors that are powers of a single prime\nMethod: For a number N = p₁ᵃ × p₂ᵇ × p₃ᶜ…, take each exponent, subtract one and take the sum.\nExample (24 = 2³ × 3¹): The total number of factors that are powers of a single prime is (3-1) + (1-1) = 2 + 0 = 2.\nExample (36 = 2² × 3²): The total number of factors that are powers of a single prime is (2-1) + (2-1) = 1 + 1 = 2.\nA factorial is the product of all positive integers up to a given number (n!). For example, 5! = 5 × 4 × 3 × 2 × 1. The main type of question related to factorials involves finding the number of trailing zeros in its expanded value.Trailing zeros are created by pairs of 2 and 5 in the prime factorization of a number. Since factors of 2 are more abundant, the number of trailing zeros is determined by the number of factors of 5.\nMethod: To find the number of trailing zeros in n!, continuously divide n by 5 and sum the quotients, ignoring any remainders. Example (56!): 56 ÷ 5 = 11\n11 ÷ 5 = 2\nTotal trailing zeros = 11 + 2 = 13 Example (154!): 154 ÷ 5 = 30\n30 ÷ 5 = 6\n6 ÷ 5 = 1\nTotal trailing zeros = 30 + 6 + 1 = 37 Addition (e.g., 100! + 200!): When adding factorials, the number of trailing zeros is determined by the term with the minimum number of zeros. For 100! (24 zeros) and 200! (49 zeros), the sum will have 24 trailing zeros. Multiplication (e.g., 100! × 200!): When multiplying factorials, the number of trailing zeros is the sum of the zeros from each term. The product of 100! and 200! will have 24 + 49 = 73 trailing zeros.\nFactors and Number of ZerosHere are powerful mathematical shortcuts to help you calculate faster and more efficiently:\nFor 2-digit numbers: Add the digits and place the sum in the middle\nExample: If sum &gt; 9, carry over: Multiply by 100 and divide by 4\nExample: Multiply by 10 and divide by 2\nExample: For numbers like :\nStep 1: Step 2: (first part)\nStep 3: (second part)\nAnswer: 9021 Formula: (First digit × (First digit + 1)) + 25\nExample: Example: Example: Multiply by 2 and divide by 10\nExample: Multiply by 4 and divide by 100\nExample: By 3: Sum of digits divisible by 3\nBy 9: Sum of digits divisible by 9\nBy 11: Alternating sum of digits divisible by 11 10%: Move decimal one place left\n5%: Half of 10%\n25%: Quarter of the number\n75%: Three quarters of the number 15%: 10% + 5%\n20%: Double of 10%\n30%: Triple of 10% Round to nearest 10/100, then adjust\nExample: : Subtract each digit from 9, except last from 10\n, , (remember this base) Sum of first n natural numbers: Example: For : Formula: where numbers are and Round numbers to make calculation easier\nPerform the calculation\nAdjust for the rounding error Numbers that add to 10, 100, 1000 are complements\nUse them to simplify additions and multiplications\nTry these to master the shortcuts: Answers: 1) 737, 2) 9025, 3) 50, 4) 625, 5) 7221Remember: Practice makes perfect! Start with simpler calculations and gradually work up to more complex ones. These shortcuts will significantly improve your calculation speed and accuracy.Fast CalculationKey Concepts Covered: Fundamental Formula: The core relationship in TSD is . Unit Conversion: The video emphasizes the importance of consistent units. It explains how to convert speeds between kilometers per hour () and meters per second (). To convert from m/s to km/hr, multiply by . To convert from km/hr to m/s, multiply by . Proportionality Concept: This is presented as the most critical technique for solving a majority of TSD problems efficiently. Rule 1: Constant Distance When the distance is constant, speed is inversely proportional to time. This means if the ratio of two speeds is , the ratio of the time taken will be . This rule applies to scenarios like traveling from home to the office and back, or covering two equal halves of a journey. Rule 2: Constant Time When the time is constant, distance is directly proportional to speed. If the ratio of two speeds is , the ratio of the distances covered will also be . This rule is useful in problems where two objects start at the same time and travel for the same duration until they meet. The video demonstrates these concepts with several example problems, progressing from easy to difficult levels and showing how identifying the constant variable is key to finding the solution.This question is based on a \"difficult level\" problem discussed in the video, which uses the proportionality concept with constant distance.A man travels a certain distance from his house to his office by bike. If he travels at an average speed of , he arrives minutes late. If he travels at , he arrives minutes early. What is the distance between his house and office?\nAnswer\nThis problem can be solved using the proportionality concept, as the distance between the house and the office is constant. Calculate the Time Difference: The total time difference between the two scenarios is the sum of the late time and the early time: . Determine the Speed Ratio: The ratio of the initial speed to the final speed is , which simplifies to . Find the Time Ratio: Since the distance is constant, speed is inversely proportional to time. Therefore, the ratio of the time taken is the inverse of the speed ratio, which is . Relate Ratios to Actual Time: The difference in the time ratio is unit. This unit corresponds to the actual time difference of minutes. Therefore, . Calculate Actual Travel Time: The time taken at the initial speed () corresponds to units in the ratio. So, the actual time is , or . Alternatively, the time taken at the final speed () corresponds to units, which is . Calculate the Distance: Now, use the formula with one of the scenarios. It is crucial to ensure the units are consistent ( and hours). Using the first scenario: . Using the second scenario: (since ) . The distance between the house and the office is 30 km. <br>The video \"Time Speed &amp; Distance (Part2) Average Speed questions in TSD II Important question of TSD <a href=\".?query=tag:aptitude\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#aptitude\">#aptitude</a>\" by Study Roof, published on December 11, 2024, is an in-depth tutorial focusing on average speed concepts within time, speed, and distance problems, a common topic in aptitude tests like SSC, Bank PO, CAT, and GRE. The video aims to enhance problem-solving skills for both beginners and advanced learners by covering core concepts, formulas, unit conversions, and step-by-step solutions to practice questions.The fundamental formula for average speed is Total Distance / Total Time. The video emphasizes that this is the only true formula for average speed, cautioning against simply averaging speeds (e.g., ).When an object travels to a destination and returns along the same path (meaning the distance is constant), a simplified formula for average speed can be used: , where and are the two speeds. This formula is also referred to as the harmonic mean.If a journey is divided into three equal distances, each covered at a different speed (, , ), the average speed formula becomes: . The video notes that this scenario is less common in exams.When distance is constant, speed is inversely proportional to time (Speed 1/Time). This means if the ratio of speeds is , the ratio of times will be .\nA car goes from A to B at km/hr and returns from B to A at km/hr. What is the average speed of the journey? Answer\nThis is a case of constant distance. Using the formula :\nAverage Speed = km/hr or approximately km/hr. A train is moving at a speed of miles/hr for the first hours and miles/hr for the next hours. What is the average speed of the train? Answer\nThis problem requires using the general \"Total Distance / Total Time\" formula because the distances covered are not necessarily constant, nor are there only two equal distance segments.\nDistance 1 = Speed 1 Time 1 = miles/hr hours = miles.\nDistance 2 = Speed 2 Time 2 = miles/hr hours = miles.\nTotal Distance = miles.\nTotal Time = hours.\nAverage Speed = Total Distance / Total Time = miles/hr. A boy goes to school at a speed of km/hr and returns to the village at km/hr. If he takes hours in total, what is the distance between the school and the village? Answer\nSolution (using Proportional Concept):\nSpeed ratio (going:returning) = .\nTime ratio (going:returning) = (inversely proportional).\nTotal time taken (from ratio) = units.\nGiven total time = hours, so unit hour.\nTime taken to go to school = hours.\nDistance = Speed Time = km/hr hours = km.\nAlternatively, using return journey: Time taken to return = hours. Distance = km/hr hours = km.\nSolution (using Average Speed):\nThis is a constant distance scenario (going to school and returning). Calculate average speed:\nAverage Speed = km/hr.\nTotal Distance (round trip) = Average Speed Total Time = km/hr hours km.\nSince this is the round trip distance, the distance between the school and the village is half of the total distance = km km. The video encourages viewers to practice under timed conditions and provides homework questions for further practice. It also mentions that important unit-wise question videos will be released after this topic.The video introduces a modified formula specifically for problems involving trains, which helps in systematically solving them.The primary formula used is Time = Total Distance / Relative Speed.\nTotal Distance: This is the sum of the length of the train () and the length of the object it is crossing (). Objects with significant length (): These include other trains, platforms, or tunnels. The formula uses .\nPoint objects (): Objects like a pole, a signal, or a standing person are considered to have no length. In this case, the distance is just the length of the train (). Relative Speed: This depends on the direction of movement of the two objects. Same Direction: When the train and another moving object travel in the same direction, their speeds are subtracted: .\nOpposite Directions: When they move towards each other, their speeds are added: .\nIf the object is stationary, its speed is , and the denominator is just the speed of the train. Unit Conversion:\nA key step is to ensure all units are consistent. To convert speed from kilometers per hour (km/hr) to meters per second (m/s), multiply by .\nA train passes a station platform in seconds and a man standing on the platform in seconds. If the train's speed is km/hr, what is the length of the platform? Answer Convert Speed: km/hr × = m/s.\nFind Train's Length: When passing the man, the train covers its own length. Length of Train () = Speed × Time = m/s × s = meters. Find Platform's Length: When passing the platform, the train covers its own length plus the platform's length. Total Distance () = Speed × Time = m/s × s = meters.\nLength of Platform () = Total Distance - = m - m = meters. Shortcut Explained: The extra time taken to cross the platform (s - s = s) is the time required to cover the platform's length alone. Therefore, = Speed × Time Difference = m/s × s = meters.\nAnswer: meters. Two trains, each meters long, are running in opposite directions at the same speed. They cross each other in seconds. What is the speed of each train? Answer Total Distance: m + m = m.\nRelative Speed: Since they move in opposite directions at the same speed (), the relative speed is .\nApply Formula: Time = Distance / Speed -&gt; .\nSolve for : m/s.\nConvert to km/hr: m/s × = km/hr. Answer: km/hr. Two trains (m and m) are on parallel rails. When running in the same direction, the faster train passes the slower one in seconds. In opposite directions, they pass in seconds. Find the speed of the faster train. Answer Total Length: m + m = m.\nSame Direction: = Distance / Time = m/s.\nOpposite Direction: = Distance / Time = m/s.\nSolve Equations: You have two linear equations: and . Adding them gives , so m/s. Math Shortcut: For equations and , the value of is . Here, m/s.\nAnswer: The speed of the faster train is m/s. A standing man observes that one train passes him in seconds and a second train of the same length passes him in seconds. How long will it take for the two trains to cross each other when they are running in opposite directions? Answer Let the length of each train be .\nFind Speeds: and .\nCrossing Time: When moving in opposite directions, Time = .\nTime = .\nTime = seconds. Answer: seconds. A train traveling at km/hr passes a runner in seconds when going in the same direction, and in seconds in the opposite direction. Find the length of the train. Answer Train Speed: km/hr = m/s.\nLet be the train's length and be the runner's speed.\nEquations: Same direction: .\nOpposite direction: .\nThe video leaves this problem for the viewer to solve using the two equations. A car traveling in fog passes a man walking at km/hr in the same direction. The man could see the car for minutes and up to a distance of meters. What is the speed of the car? Answer The m is the relative distance covered in minutes due to the difference in speed.\nConvert Units: Time = min = hr. Distance = m = km.\nRelative Speed: .\nApply Formula: Relative Distance = Relative Speed × Time -&gt; .\nSolve: . Therefore, km/hr. Answer: km/hr. A thief is meters ahead of a policeman. The policeman catches the thief in minutes. If the thief's speed is km/hr, find the distance traveled by the policeman. Answer Distance covered by thief: Distance = Speed × Time. Time = min = hr.\nThief's distance = km/hr × hr = km or meters.\nDistance covered by policeman: The policeman covered the same meters as the thief, plus the initial -meter gap.\nTotal distance = m + m = m or km. Answer: km. A car travels km in hours. The first part of the journey is at km/hr and the rest is at km/hr. Find the distance covered in the first part. Answer Average Speed: km / hr = km/hr.\nAllegation Setup: Compare the two speeds to the average speed to find the ratio of time taken for each part. , which simplifies to a time ratio of . Time for First Part: The first part took of the total time. × hours = hours.\nDistance of First Part: Distance = Speed × Time = km/hr × hr = km. Answer: km. The instructor explains the core concepts using specific notation before moving to practice problems.\nSpeed of the Boat (SB): The speed of the boat in still, unmoving water.\nSpeed of the Stream (SS): The speed of the current or river flow.\nDownstream Speed (SD): The speed when the boat travels in the same direction as the stream. The speeds add up. Formula: . Upstream Speed (SU): The speed when the boat travels against the direction of the stream. The stream's speed is subtracted from the boat's speed. Formula: . Calculating SB and SS from SD and SU: The video offers a shortcut to find the boat and stream speeds if the downstream and upstream speeds are known. Speed of Boat: .\nSpeed of Stream: . The video walks through several types of problems, from basic to advanced.\nA boat can travel at a speed of 13 km/hr in still water. If the speed of the stream is 4 km/hr, find the time taken by the boat to go 68 km downstream. Answer\nSolution: Calculate the downstream speed: km/hr.\nCalculate the time taken: Time = Distance / Speed = 68 km / 17 km/hr.\nAnswer: 4 hours. A boat running downstream covers 16 km in 2 hours. For covering the same distance upstream, it takes 4 hours. What is the speed of the boat in still water? Answer\nSolution: Calculate downstream speed: km/hr.\nCalculate upstream speed: km/hr.\nCalculate the speed of the boat: km/hr.\nAnswer: 6 km/hr. A boat moves 2 km against the current in 1 hour and moves 1 km in the direction of the current in 10 minutes. How long will it take the boat to go 5 km in stationary water? Answer\nSolution:\n4. Calculate upstream speed: km/hr.\n5. Calculate downstream speed: km/hr.\n6. Calculate the speed of the boat in still water: km/hr.\n7. Calculate the required time: .\nAnswer: 1 hour and 15 minutes. The ratio of the speed of a boat in downstream to upstream is 7:4. A boy takes 4 hours to cover a total distance of 88 km upstream. What is the speed of the boat in still water? Answer\nSolution:\n8. Calculate upstream speed: km/hr.\n9. The ratio SU is 4 parts, which equals 22 km/hr. So, .\n10. The ratio SD is 7 parts. So, km/hr (or 77/2 km/hr).\n11. Calculate the speed of the boat: .\nAnswer: 30.25 km/hr. A man can row 4 km/hr in still water. He finds that it takes him twice as long to row up as to row down the river. Find the rate of the stream. Answer\nSolution: The video sets up the equation and leaves the final calculation as an exercise for the viewer. The relationship \"time upstream is twice the time downstream\" implies \"downstream speed is twice the upstream speed\" (). Setup: . With , the equation is .\nAnswer: The video leaves this for the viewer to solve. A man can row a certain distance downstream in 6 hours and return the same distance in 8 hours. If the stream flows at a rate of 4 km/hr, find the speed of the man in still water. Answer\nSolution: Since distance is constant, . The video sets up the equality and leaves the calculation as an exercise. Setup: . With , the equation is .\nAnswer: The video leaves this for the viewer to solve. Find the average speed of a boat in a round trip between two places 25 km apart if the speed of the boat in still water is 10 km/hr and the speed of the river is 5 km/hr. Answer\nSolution: Calculate and .\nFor a journey with constant distance, the average speed formula is .\n.\nAnswer: 7.5 km/hr. The distance of 25 km is not required for this calculation. The ratio of the speed of a motorboat to that of the current is 36:5. The motorboat goes along with the current in 5 hours and 10 minutes. Find the time for it to come back. Answer\nSolution:\n4. From the given ratio , derive the speed ratio . .\n.\nSo, . For a constant distance, the time ratio is the inverse of the speed ratio. So, .\nThe given downstream time is 5 hours 10 minutes, which is 310 minutes. This corresponds to the 31 parts in the time ratio.\nTherefore, .\nThe upstream time is 41 parts, so minutes.\nAnswer: 410 minutes, or 6 hours and 50 minutes. Speed Distance TimeThe core idea is to determine when to multiply and when to add probabilities or possibilities. Multiplication (AND): Use when the work or task is in progress and not yet completed. Each step contributes to the completion of a single overall task. Example: Traveling from Jalandhar to Delhi To reach Ludhiana from Jalandhar, there are ways (train, bus, car).\nTo reach Delhi from Ludhiana, there are ways (train, bus).\nSince the task is not complete after reaching Ludhiana, multiply: total ways. Addition (OR): Use when the work or task is completed, and there's an alternative way to achieve it. This accounts for different paths that complete the same goal independently. Example: Continuing with Traveling from Jalandhar to Delhi Suppose there are direct routes from Jalandhar to Delhi: Direct train: way.\nDirect bus: way. Total ways when including Ludhiana route (from earlier): total ways. Permutation is used when the order of selection matters. For example, arranging items or selecting a president and vice-president where order is important.\nCombination is used when the order of selection does not matter. For example, selecting a committee where roles are not distinct.\nThe combination formula is given by:\nKey properties include: The symmetry property: The permutation formula is:\nAlso, How many 2-digit numbers can be made from digits 1, 2, 3, 4 without repetition? Answer First place: ways\nSecond place: ways (one digit already used) How many 4-digit numbers can be made from 7, 8, 5, 0, 4 without repetition? Answer First place: ways (cannot use )\nSecond place: ways ( now available, but one other digit used)\nThird place: ways\nFourth place: ways How many 3-digit numbers greater than 400 can be made with digits 2, 3, 4, 0, 5, 6 without repetition? Answer First place: ways (only , , to make number &gt; )\nSecond place: ways (one digit used, now available)\nThird place: ways How many 4-digit numbers divisible by 5 can be formed with digits 0, 1, 2, 3, 4, 5, 6 without repetition? Answer\nCase 1 (ends with ): Case 2 (ends with ): Total: Find 3-digit numbers such that at least one digit is 6 with repetition allowed from digits 2, 3, 4, 0, 5, 6. Answer\nTotal 3-digit numbers - Numbers without = In how many ways can letters of word EQUATION be arranged? Answer All letters are distinct In how many ways can letters of word FLINCHED be arranged? Answer letters total, E appears times In how many ways can letters of EQUATION be arranged if it starts with Q? Answer Q fixed in first position, arrange remaining letters In how many ways can letters of EQUATION be arranged if it starts with consonants? Answer consonants (Q, T, N) can start, then arrange remaining letters In how many ways can letters of OPTICAL be arranged so that all vowels are together? Answer Treat vowels (O, I, A) as one unit\nArrange units (including vowel group): Arrange vowels within group: In how many ways can letters of OPTICAL be arranged so that vowels are never together? Answer Total arrangements minus vowels always together In how many ways can letters of INVISIBILITY be arranged so that all I's come together? Answer Treat I's as one unit\nTotal positions: ( other letters + I-group)\nSince all I's are identical, no need to divide by With repetition: Each position has all choices\nWithout repetition: Positions have , , , ... choices\nZero case: First position cannot have in multi-digit numbers Basic arrangement: (where , are frequencies of repeated letters)\nSpecific starting: Fix first position, arrange rest\nTogether condition: Treat group as single unit\nNever together: Total arrangements - Always together arrangements At least one: Total - None\nDivisible by 5: Last digit must be or Even numbers: Last digit must be even\nOdd numbers: Last digit must be odd\nThese questions cover all major concepts tested in competitive exams and form the foundation for solving complex permutation and combination problems.permutation&amp;computation","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Time and Work","level":1,"id":"Time_and_Work_0"},{"heading":"Base Scenario","level":1,"id":"Base_Scenario_0"},{"heading":"Solved Examples","level":1,"id":"Solved_Examples_0"},{"heading":"1. Working Together from the Start","level":2,"id":"1._Working_Together_from_the_Start_0"},{"heading":"2. One Person Joins After a Delay","level":2,"id":"2._One_Person_Joins_After_a_Delay_0"},{"heading":"3. One Person Leaves After Some Time","level":2,"id":"3._One_Person_Leaves_After_Some_Time_0"},{"heading":"4. Calculating Time for Remaining Work","level":2,"id":"4._Calculating_Time_for_Remaining_Work_0"},{"heading":"Advanced Scenarios &amp; Shortcut Tricks","level":1,"id":"Advanced_Scenarios_&_Shortcut_Tricks_0"},{"heading":"5. Leaving a Few Days Before Completion","level":2,"id":"5._Leaving_a_Few_Days_Before_Completion_0"},{"heading":"6. Multiple People Leaving Before Completion","level":2,"id":"6._Multiple_People_Leaving_Before_Completion_0"},{"heading":"7. Alternate Day Working","level":2,"id":"7._Alternate_Day_Working_0"},{"heading":"8. Negative Work","level":2,"id":"8._Negative_Work_0"},{"heading":"The LCM Method - Step by Step","level":2,"id":"The_LCM_Method_-_Step_by_Step_0"},{"heading":"Step 1: Find LCM (Total Work Units)","level":3,"id":"Step_1_Find_LCM_(Total_Work_Units)_0"},{"heading":"Step 2: Calculate Individual Efficiency","level":3,"id":"Step_2_Calculate_Individual_Efficiency_0"},{"heading":"Step 3: Apply Based on Scenario","level":3,"id":"Step_3_Apply_Based_on_Scenario_0"},{"heading":"Unit Digit","level":1,"id":"Unit_Digit_0"},{"heading":"Unit Digit Concept","level":2,"id":"Unit_Digit_Concept_0"},{"heading":"Product Type Questions","level":3,"id":"Product_Type_Questions_0"},{"heading":"Power Type Questions","level":3,"id":"Power_Type_Questions_0"},{"heading":"Numbers ending in 0, 1, 5, or 6","level":3,"id":"Numbers_ending_in_0,_1,_5,_or_6_0"},{"heading":"Numbers ending in 4 or 9","level":3,"id":"Numbers_ending_in_4_or_9_0"},{"heading":"Numbers ending in 2, 3, 7, or 8","level":3,"id":"Numbers_ending_in_2,_3,_7,_or_8_0"},{"heading":"Divisibility Rules","level":2,"id":"Divisibility_Rules_0"},{"heading":"Rules for Powers of 2 (2, 4, 8, 16, etc.)","level":3,"id":"Rules_for_Powers_of_2_(2,_4,_8,_16,_etc.)_0"},{"heading":"Rules for Powers of 5 (5, 25, 125, etc.)","level":3,"id":"Rules_for_Powers_of_5_(5,_25,_125,_etc.)_0"},{"heading":"Rules for 3 and 9","level":3,"id":"Rules_for_3_and_9_0"},{"heading":"Rule for 6","level":3,"id":"Rule_for_6_0"},{"heading":"Rule for 11","level":3,"id":"Rule_for_11_0"},{"heading":"Unit Digit Rules Summary","level":2,"id":"Unit_Digit_Rules_Summary_0"},{"heading":"Divisibility Rules Summary","level":2,"id":"Divisibility_Rules_Summary_0"},{"heading":"Number System","level":1,"id":"Number_System_0"},{"heading":"Classification of Numbers","level":2,"id":"Classification_of_Numbers_0"},{"heading":"Real Numbers","level":5,"id":"Real_Numbers_0"},{"heading":"Imaginary Numbers","level":5,"id":"Imaginary_Numbers_0"},{"heading":"Sub-classification of Real Numbers","level":2,"id":"Sub-classification_of_Real_Numbers_0"},{"heading":"Rational Numbers","level":5,"id":"Rational_Numbers_0"},{"heading":"Irrational Numbers","level":5,"id":"Irrational_Numbers_0"},{"heading":"Integers","level":2,"id":"Integers_0"},{"heading":"Special Number Types","level":2,"id":"Special_Number_Types_0"},{"heading":"Co-prime Numbers","level":5,"id":"Co-prime_Numbers_0"},{"heading":"Perfect Numbers","level":5,"id":"Perfect_Numbers_0"},{"heading":"Conversion of Decimals to Fractions","level":2,"id":"Conversion_of_Decimals_to_Fractions_0"},{"heading":"Converting Terminating Decimals","level":2,"id":"Converting_Terminating_Decimals_0"},{"heading":"Standard Method","level":3,"id":"Standard_Method_0"},{"heading":"Converting Repeating Decimals","level":2,"id":"Converting_Repeating_Decimals_0"},{"heading":"Normal (Algebraic) Method","level":3,"id":"Normal_(Algebraic)_Method_0"},{"heading":"Shortcut Method","level":3,"id":"Shortcut_Method_0"},{"heading":"Key Points to Remember","level":2,"id":"Key_Points_to_Remember_0"},{"heading":"Factors and Number of Zeros","level":1,"id":"Factors_and_Number_of_Zeros_0"},{"heading":"Factors","level":2,"id":"Factors_0"},{"heading":"Types of Factor-Based Questions","level":2,"id":"Types_of_Factor-Based_Questions_0"},{"heading":"Factorials","level":2,"id":"Factorials_0"},{"heading":"Finding Trailing Zeros","level":2,"id":"Finding_Trailing_Zeros_0"},{"heading":"Operations with Trailing Zeros","level":2,"id":"Operations_with_Trailing_Zeros_0"},{"heading":"Fast Calculation","level":1,"id":"Fast_Calculation_0"},{"heading":"Shortcut Tricks for Fast Calculation","level":1,"id":"Shortcut_Tricks_for_Fast_Calculation_0"},{"heading":"Multiplication Shortcuts","level":2,"id":"Multiplication_Shortcuts_0"},{"heading":"Multiplying by 11","level":3,"id":"Multiplying_by_11_0"},{"heading":"Multiplying by 25","level":3,"id":"Multiplying_by_25_0"},{"heading":"Multiplying by 5","level":3,"id":"Multiplying_by_5_0"},{"heading":"Multiplying Numbers Close to 100","level":3,"id":"Multiplying_Numbers_Close_to_100_0"},{"heading":"Squaring Shortcuts","level":2,"id":"Squaring_Shortcuts_0"},{"heading":"Squaring Numbers Ending in 5","level":3,"id":"Squaring_Numbers_Ending_in_5_0"},{"heading":"Squaring 2-digit Numbers Close to 50","level":3,"id":"Squaring_2-digit_Numbers_Close_to_50_0"},{"heading":"Squaring Numbers Close to 100","level":3,"id":"Squaring_Numbers_Close_to_100_0"},{"heading":"Division Shortcuts","level":2,"id":"Division_Shortcuts_0"},{"heading":"Dividing by 5","level":3,"id":"Dividing_by_5_0"},{"heading":"Dividing by 25","level":3,"id":"Dividing_by_25_0"},{"heading":"Divisibility Tests","level":3,"id":"Divisibility_Tests_0"},{"heading":"Percentage Shortcuts","level":2,"id":"Percentage_Shortcuts_0"},{"heading":"Finding Percentages","level":3,"id":"Finding_Percentages_0"},{"heading":"Quick Percentage Calculations","level":3,"id":"Quick_Percentage_Calculations_0"},{"heading":"Addition &amp; Subtraction Tricks","level":2,"id":"Addition_&_Subtraction_Tricks_0"},{"heading":"Adding Large Numbers","level":3,"id":"Adding_Large_Numbers_0"},{"heading":"Subtracting from Powers of 10","level":3,"id":"Subtracting_from_Powers_of_10_0"},{"heading":"Fraction Shortcuts","level":2,"id":"Fraction_Shortcuts_0"},{"heading":"Converting Fractions to Decimals","level":3,"id":"Converting_Fractions_to_Decimals_0"},{"heading":"Common Fraction Equivalents","level":3,"id":"Common_Fraction_Equivalents_0"},{"heading":"Time-Saving Calculation Patterns","level":2,"id":"Time-Saving_Calculation_Patterns_0"},{"heading":"Sum of Consecutive Numbers","level":3,"id":"Sum_of_Consecutive_Numbers_0"},{"heading":"Product of Numbers with Same Ten's Digit","level":3,"id":"Product_of_Numbers_with_Same_Ten's_Digit_0"},{"heading":"Mental Math Tips","level":2,"id":"Mental_Math_Tips_0"},{"heading":"Rounding Strategy","level":3,"id":"Rounding_Strategy_0"},{"heading":"Breaking Down Complex Problems","level":3,"id":"Breaking_Down_Complex_Problems_0"},{"heading":"Using Complementary Numbers","level":3,"id":"Using_Complementary_Numbers_0"},{"heading":"Practice Exercises","level":2,"id":"Practice_Exercises_0"},{"heading":"Speed Distance Time","level":1,"id":"Speed_Distance_Time_0"},{"heading":"Sample Question and Answer","level":2,"id":"Sample_Question_and_Answer_0"},{"heading":"Time, Speed &amp; Distance Tutorial: Average Speed Concepts","level":1,"id":"Time,_Speed_&_Distance_Tutorial_Average_Speed_Concepts_0"},{"heading":"Key Concepts and Formulas","level":2,"id":"Key_Concepts_and_Formulas_0"},{"heading":"Average Speed Formula","level":3,"id":"Average_Speed_Formula_0"},{"heading":"Special Case: Constant Distance","level":3,"id":"Special_Case_Constant_Distance_0"},{"heading":"Three Constant Distances","level":3,"id":"Three_Constant_Distances_0"},{"heading":"Proportional Concept","level":3,"id":"Proportional_Concept_0"},{"heading":"Example Questions and Solutions","level":2,"id":"Example_Questions_and_Solutions_0"},{"heading":"Core Concepts for Train Problems","level":2,"id":"Core_Concepts_for_Train_Problems_0"},{"heading":"Questions and Solutions from the Video","level":2,"id":"Questions_and_Solutions_from_the_Video_0"},{"heading":"Question 1: Train, Platform, and Man","level":3,"id":"Question_1_Train,_Platform,_and_Man_0"},{"heading":"Question 2: Two Trains in Opposite Directions","level":3,"id":"Question_2_Two_Trains_in_Opposite_Directions_0"},{"heading":"Question 3: Faster and Slower Trains","level":3,"id":"Question_3_Faster_and_Slower_Trains_0"},{"heading":"Question 4: Two Trains Crossing a Man","level":3,"id":"Question_4_Two_Trains_Crossing_a_Man_0"},{"heading":"Question 5: Train and Runner","level":3,"id":"Question_5_Train_and_Runner_0"},{"heading":"Question 6: Car in Fog","level":3,"id":"Question_6_Car_in_Fog_0"},{"heading":"Question 7: Police and Thief","level":3,"id":"Question_7_Police_and_Thief_0"},{"heading":"Question 8: Journey in Two Parts","level":3,"id":"Question_8_Journey_in_Two_Parts_0"},{"heading":"Key Concepts and Formulas","level":2,"id":"Key_Concepts_and_Formulas_1"},{"heading":"Solved Problems from the Video","level":2,"id":"Solved_Problems_from_the_Video_0"},{"heading":"permutation&amp;computation","level":1,"id":"permutation&computation_0"},{"heading":"The \"AND/OR\" Concept (Multiplication vs. Addition)","level":2,"id":"The_\"AND/OR\"_Concept_(Multiplication_vs._Addition)_0"},{"heading":"Permutation and Combination Definitions","level":2,"id":"Permutation_and_Combination_Definitions_0"},{"heading":"Formulas and Properties","level":2,"id":"Formulas_and_Properties_0"},{"heading":"Problems on Numbers","level":2,"id":"Problems_on_Numbers_0"},{"heading":"1. Basic Number Formation","level":3,"id":"1._Basic_Number_Formation_0"},{"heading":"2. Numbers with Zero","level":3,"id":"2._Numbers_with_Zero_0"},{"heading":"3. Numbers with Conditions","level":3,"id":"3._Numbers_with_Conditions_0"},{"heading":"4. Divisibility Questions","level":3,"id":"4._Divisibility_Questions_0"},{"heading":"5. At Least One Condition","level":3,"id":"5._At_Least_One_Condition_0"},{"heading":"Problems on Words","level":2,"id":"Problems_on_Words_0"},{"heading":"6. Basic Word Arrangements","level":3,"id":"6._Basic_Word_Arrangements_0"},{"heading":"7. Repeated Letters","level":3,"id":"7._Repeated_Letters_0"},{"heading":"8. Starting with Specific Letters","level":3,"id":"8._Starting_with_Specific_Letters_0"},{"heading":"9. Starting with Consonants","level":3,"id":"9._Starting_with_Consonants_0"},{"heading":"10. Vowels Together","level":3,"id":"10._Vowels_Together_0"},{"heading":"11. Vowels Never Together","level":3,"id":"11._Vowels_Never_Together_0"},{"heading":"12. Specific Letters Together","level":3,"id":"12._Specific_Letters_Together_0"},{"heading":"Key Formulas and Tips","level":2,"id":"Key_Formulas_and_Tips_0"},{"heading":"For Numbers:","level":3,"id":"For_Numbers_0"},{"heading":"For Words:","level":3,"id":"For_Words_0"},{"heading":"Important Shortcuts:","level":3,"id":"Important_Shortcuts_0"}],"links":["?query=tag:aptitude"],"author":"","coverImageURL":".","fullURL":"analytical/analytical.html","pathToRoot":"..","attachments":["analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].html","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].html","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].html"],"createdTime":1750418498453,"modifiedTime":1754106042504,"sourceSize":973,"sourcePath":"Analytical/Analytical.canvas","exportPath":"analytical/analytical.html","showInTree":true,"treeOrder":5,"backlinks":[],"type":"canvas"},"analytical/ci-and-si.html":{"title":"CI and SI","icon":"","description":"The standard formula for the amount (A) in compound interest is:\nWhere:\nA = Amount\nP = Principal\nR = Rate of interest per annum\nT = Time in years\nThe Compound Interest (CI) is then calculated as .Limitations: This formula becomes complicated and time-consuming when the time period (T) is a fraction or decimal, such as years or years and months, as calculating fractional powers is difficult.The video introduces a \"tree method\" as a versatile shortcut based on the core definition of compound interest, which is \"interest on interest\".How to construct the tree (Example: P=₹, R=%, T= years):\nFirst Year: Calculate interest on the principal: % of ₹ = ₹. Second Year: Calculate interest on the principal again: ₹.\nCalculate interest on the first year's interest: % of ₹ = ₹. Third Year: Calculate interest on the principal: ₹.\nCalculate interest on the interest from the previous years' principal payments (two instances of ₹): % of ₹ = ₹ (done twice).\nCalculate interest on the second year's interest-on-interest (₹): % of ₹ = ₹. The complete tree looks like this:Year 1: 100\nYear 2: 100 10\nYear 3: 100 10 10 1\nApplications of the Tree:\nTotal Compound Interest (CI): Sum all the values in the tree. () ₹.\nSimple Interest (SI): Sum only the first column (the interest on the principal). () ₹.\nDifference between CI and SI: Sum all values except the first column. () ₹.\nInterest for a Specific Year: Sum the values for that year's row. (e.g., Third-year interest = ) ₹.\nFractional Time Periods: To find the interest for a period like years and days, take the full interest for the first year. For the second year, calculate the total interest and multiply it by (or ). (e.g., For years and , take the first two years' full interest and add of the third year's total interest)\nThe tree method can be adapted for different compounding periods by adjusting the rate and time.\nHalf-Yearly: The rate is halved (), and the time is doubled (). For a -year period, you would perform two calculation steps (two \"semesters\").\nQuarterly: The rate is divided by four (), and the time is multiplied by four (). For a -month period, you would perform three calculation steps (three \"quarters\").\nThese formulas are particularly useful when the principal, rate, or time is unknown, making the tree method difficult to start.\nFor 2 Years: For 3 Years:\nThe video emphasizes that the 2-year formula is more commonly required in exams.\nThe video covers additional question formats that appear in competitive exams.\nGrowth Problems: If a sum of money doubles in years under CI, it will become four times () in years, eight times () in years, and sixteen times () in years. The time period for each multiplication step remains constant.\nSplitting Principal: If a sum is divided between two individuals (A and B) so that their amounts are equal after different time periods (e.g., years for A, years for B), you can set up their amount formulas to be equal and solve for the initial principal amounts. Formula: The fundamental formula for Simple Interest is: Where: P = Principal (the initial sum of money)\nR = Rate of interest per annum\nT = Time in years Calculation Basis: Simple Interest is always calculated on the original principal amount. Unlike compound interest, you do not earn interest on the accumulated interest.\nConsistency: A key characteristic of SI is that the interest earned remains the same for every year, provided the principal and rate do not change. For example, if the interest for the first year is $100, it will be $100 for the second year, third year, and so on.\nInstructor's Tip: If a problem does not specify whether the interest is simple or compound, you should assume it is Simple Interest.The video covers various problem types, demonstrating solutions using both the standard formula and faster, conceptual shortcuts.\nProblem: The simple interest for the third year on a certain sum is $3000. Find the sum of the interest for the sixth, seventh, and eighth years.\nSolution: Since SI is the same every year, the interest for the , , and years will also be $3000 each. Total Interest = yr) + yr) + yr) = $9000 Problem: A sum amounts to $1008 in 2 years and $1112 in 3 years. Find the principal and the rate of interest.\nSolution (Shortcut Method): Find Yearly Interest: The difference in amount between the and year is the interest for one year.\nInterest for 1 year = $1112 - $1008 = $104\nFind Total Interest: Calculate the total interest for the initial period (2 years).\nInterest for 2 years = Find Principal: Subtract the total interest from the amount after 2 years.\nPrincipal (P) = $1008 - $208 = $800\nFind Rate: Use the SI formula for one year. per annum. Problem: and the other at . The total SI for one year is ?\nSolution (Shortcut Method): Assume the entire sum ().\nSI at = The actual interest is This ( - ) on the amount invested at the higher rate.\nSo, of the first part (P1) = Therefore, the full amount of the first part ( of P1) = ).\nThe remaining amount, invested at , is . Note: For problems with complex rates or time periods (e.g., fractions), the instructor recommends using the standard algebraic equation method to avoid errors. Problem: A sum of money doubles itself in 6 years at simple interest. In how many years will it become four times itself?\nSolution (Conceptual Method): Let the principal (P) be .\nDoubling: The amount becomes . Here, the principal is . This $100 of interest was earned in 6 years.\nQuadrupling: The amount becomes . Here, the principal is still , so the total interest required is .\nCalculation:\nTo earn $100 interest, it takes 6 years.\nTo earn years. For practice\nWhat base value satisfies the equation (422 / 21.1) = 20? Answer\nAnswer not given ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Core Compound Interest Formula and Its Limitations","level":2,"id":"Core_Compound_Interest_Formula_and_Its_Limitations_0"},{"heading":"The \"Compound Interest Tree\" Method","level":2,"id":"The_\"Compound_Interest_Tree\"_Method_0"},{"heading":"Adjusting for Compounding Frequency","level":2,"id":"Adjusting_for_Compounding_Frequency_0"},{"heading":"Direct Formulas for CI-SI Difference","level":2,"id":"Direct_Formulas_for_CI-SI_Difference_0"},{"heading":"Miscellaneous Problem Types","level":2,"id":"Miscellaneous_Problem_Types_0"},{"heading":"Core Concepts of Simple Interest (SI)","level":2,"id":"Core_Concepts_of_Simple_Interest_(SI)_0"},{"heading":"Problem-Solving Techniques &amp; Examples","level":2,"id":"Problem-Solving_Techniques_&_Examples_0"},{"heading":"Interest for a Specific Year","level":3,"id":"Interest_for_a_Specific_Year_0"},{"heading":"Finding Principal or Rate when Amount is Given","level":3,"id":"Finding_Principal_or_Rate_when_Amount_is_Given_0"},{"heading":"Sum Invested in Two Parts","level":3,"id":"Sum_Invested_in_Two_Parts_0"},{"heading":"Money Doubling or Quadrupling","level":3,"id":"Money_Doubling_or_Quadrupling_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"analytical/ci-and-si.html","pathToRoot":"..","attachments":[],"createdTime":1750756088307,"modifiedTime":1750760130444,"sourceSize":8307,"sourcePath":"Analytical/CI and SI.md","exportPath":"analytical/ci-and-si.html","showInTree":true,"treeOrder":6,"backlinks":[],"type":"markdown"},"analytical/factors-and-number-of-zeros.html":{"title":"Factors and Number of Zeros","icon":"","description":"Factors are numbers that can divide another number exactly, without leaving a remainder. For instance, the factors of 24 are 1, 2, 3, 4, 6, 8, 12, and 24.The core technique for solving all factor-related problems is prime factorization, which involves expressing a number as a product of its prime factors raised to a power.\nExample (24): 24 = 8 × 3 = 2³ × 3¹\nExample (2400): 2400 = 24 × 100 = (2³ × 3¹) × (2² × 5²) = 2⁵ × 3¹ × 5²\nUsing prime factorization, you can answer seven common types of questions about factors.1. Total Number of Factors\nMethod: If a number's prime factorization is p₁ᵃ × p₂ᵇ × p₃ᶜ…, the total number of factors is the product of the powers each increased by one: (a+1)(b+1)(c+1)…\nExample (24 = 2³ × 3¹): (3+1)(1+1) = 4 × 2 = 8 factors\nExample (2400 = 2⁵ × 3¹ × 5²): (5+1)(1+1)(2+1) = 6 × 2 × 3 = 36 factors One is added as is 1 for all prime factors. 2. Number of Prime Factors\nMethod: Count the number of unique prime bases in the factorization.\nExample (24 = 2³ × 3¹): There are two prime factors: 2 and 3.\nExample (2400 = 2⁵ × 3¹ × 5²): There are three prime factors: 2, 3, and 5.\n3. Number of Composite Factors\nMethod: Total Factors - Number of Prime Factors - 1. The number 1 is subtracted because it is neither prime nor composite.\nExample (24): 8 (total) - 2 (prime) - 1 = 5 composite factors\nExample (2400): 36 (total) - 3 (prime) - 1 = 32 composite factors\n4. Number of Odd Factors\nMethod: Ignore the factor of 2 and apply the \"Total Number of Factors\" formula to the remaining odd prime factors.\nExample (24 = 2³ × 3¹): Using only 3¹, the number of odd factors is (1+1) = 2.\nExample (2400 = 2⁵ × 3¹ × 5²): Using 3¹ × 5², the number of odd factors is (1+1)(2+1) = 6.\n5. Number of Even Factors\nMethod 1: Total Factors - Odd Factors.\nMethod 2 (Direct): Take the power of 2 as it is (do not add 1) and multiply by the (power+1) of all other prime factors. For a number 2ᵃ × p₂ᵇ…, the formula is a × (b+1)….\nExample (24): The number of even factors is 8 - 3 = 5.\nExample (2400): The number of even factors is 36 - 12 = 24.\n6. Number of Factors that are Perfect Squares\nMethod: For a number N = p₁ᵃ × p₂ᵇ × p₃ᶜ…, take the exponents, divide each by 2 and take the floor, and multiply these to determine the total number of factors that are perfect squares.\nExample (24 = 2³ × 3¹): The total factors that are perfect squares is floor(3/2) floor(1/2) = 10 = 0.\nExample (36 = 2² × 3²): The total factors that are perfect squares is floor(2/2) floor(2/2) = 11 = 1.\n7. Number of Factors that are powers of a single prime\nMethod: For a number N = p₁ᵃ × p₂ᵇ × p₃ᶜ…, take each exponent, subtract one and take the sum.\nExample (24 = 2³ × 3¹): The total number of factors that are powers of a single prime is (3-1) + (1-1) = 2 + 0 = 2.\nExample (36 = 2² × 3²): The total number of factors that are powers of a single prime is (2-1) + (2-1) = 1 + 1 = 2.\nA factorial is the product of all positive integers up to a given number (n!). For example, 5! = 5 × 4 × 3 × 2 × 1. The main type of question related to factorials involves finding the number of trailing zeros in its expanded value.Trailing zeros are created by pairs of 2 and 5 in the prime factorization of a number. Since factors of 2 are more abundant, the number of trailing zeros is determined by the number of factors of 5.\nMethod: To find the number of trailing zeros in n!, continuously divide n by 5 and sum the quotients, ignoring any remainders. Example (56!): 56 ÷ 5 = 11\n11 ÷ 5 = 2\nTotal trailing zeros = 11 + 2 = 13 Example (154!): 154 ÷ 5 = 30\n30 ÷ 5 = 6\n6 ÷ 5 = 1\nTotal trailing zeros = 30 + 6 + 1 = 37 Addition (e.g., 100! + 200!): When adding factorials, the number of trailing zeros is determined by the term with the minimum number of zeros. For 100! (24 zeros) and 200! (49 zeros), the sum will have 24 trailing zeros. Multiplication (e.g., 100! × 200!): When multiplying factorials, the number of trailing zeros is the sum of the zeros from each term. The product of 100! and 200! will have 24 + 49 = 73 trailing zeros.\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Factors","level":2,"id":"Factors_0"},{"heading":"Types of Factor-Based Questions","level":2,"id":"Types_of_Factor-Based_Questions_0"},{"heading":"Factorials","level":2,"id":"Factorials_0"},{"heading":"Finding Trailing Zeros","level":2,"id":"Finding_Trailing_Zeros_0"},{"heading":"Operations with Trailing Zeros","level":2,"id":"Operations_with_Trailing_Zeros_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"analytical/factors-and-number-of-zeros.html","pathToRoot":"..","attachments":[],"createdTime":1749802165235,"modifiedTime":1749802928661,"sourceSize":4594,"sourcePath":"Analytical/Factors and Number of Zeros.md","exportPath":"analytical/factors-and-number-of-zeros.html","showInTree":true,"treeOrder":7,"backlinks":[],"type":"markdown"},"analytical/fast-calculation.html":{"title":"Fast Calculation","icon":"","description":"Here are powerful mathematical shortcuts to help you calculate faster and more efficiently:\nFor 2-digit numbers: Add the digits and place the sum in the middle\nExample: If sum &gt; 9, carry over: Multiply by 100 and divide by 4\nExample: Multiply by 10 and divide by 2\nExample: For numbers like :\nStep 1: Step 2: (first part)\nStep 3: (second part)\nAnswer: 9021 Formula: (First digit × (First digit + 1)) + 25\nExample: Example: Example: Multiply by 2 and divide by 10\nExample: Multiply by 4 and divide by 100\nExample: By 3: Sum of digits divisible by 3\nBy 9: Sum of digits divisible by 9\nBy 11: Alternating sum of digits divisible by 11 10%: Move decimal one place left\n5%: Half of 10%\n25%: Quarter of the number\n75%: Three quarters of the number 15%: 10% + 5%\n20%: Double of 10%\n30%: Triple of 10% Round to nearest 10/100, then adjust\nExample: : Subtract each digit from 9, except last from 10\n, , (remember this base) Sum of first n natural numbers: Example: For : Formula: where numbers are and Round numbers to make calculation easier\nPerform the calculation\nAdjust for the rounding error Numbers that add to 10, 100, 1000 are complements\nUse them to simplify additions and multiplications\nTry these to master the shortcuts: Answers: 1) 737, 2) 9025, 3) 50, 4) 625, 5) 7221Remember: Practice makes perfect! Start with simpler calculations and gradually work up to more complex ones. These shortcuts will significantly improve your calculation speed and accuracy.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Shortcut Tricks for Fast Calculation","level":1,"id":"Shortcut_Tricks_for_Fast_Calculation_0"},{"heading":"Multiplication Shortcuts","level":2,"id":"Multiplication_Shortcuts_0"},{"heading":"Multiplying by 11","level":3,"id":"Multiplying_by_11_0"},{"heading":"Multiplying by 25","level":3,"id":"Multiplying_by_25_0"},{"heading":"Multiplying by 5","level":3,"id":"Multiplying_by_5_0"},{"heading":"Multiplying Numbers Close to 100","level":3,"id":"Multiplying_Numbers_Close_to_100_0"},{"heading":"Squaring Shortcuts","level":2,"id":"Squaring_Shortcuts_0"},{"heading":"Squaring Numbers Ending in 5","level":3,"id":"Squaring_Numbers_Ending_in_5_0"},{"heading":"Squaring 2-digit Numbers Close to 50","level":3,"id":"Squaring_2-digit_Numbers_Close_to_50_0"},{"heading":"Squaring Numbers Close to 100","level":3,"id":"Squaring_Numbers_Close_to_100_0"},{"heading":"Division Shortcuts","level":2,"id":"Division_Shortcuts_0"},{"heading":"Dividing by 5","level":3,"id":"Dividing_by_5_0"},{"heading":"Dividing by 25","level":3,"id":"Dividing_by_25_0"},{"heading":"Divisibility Tests","level":3,"id":"Divisibility_Tests_0"},{"heading":"Percentage Shortcuts","level":2,"id":"Percentage_Shortcuts_0"},{"heading":"Finding Percentages","level":3,"id":"Finding_Percentages_0"},{"heading":"Quick Percentage Calculations","level":3,"id":"Quick_Percentage_Calculations_0"},{"heading":"Addition &amp; Subtraction Tricks","level":2,"id":"Addition_&_Subtraction_Tricks_0"},{"heading":"Adding Large Numbers","level":3,"id":"Adding_Large_Numbers_0"},{"heading":"Subtracting from Powers of 10","level":3,"id":"Subtracting_from_Powers_of_10_0"},{"heading":"Fraction Shortcuts","level":2,"id":"Fraction_Shortcuts_0"},{"heading":"Converting Fractions to Decimals","level":3,"id":"Converting_Fractions_to_Decimals_0"},{"heading":"Common Fraction Equivalents","level":3,"id":"Common_Fraction_Equivalents_0"},{"heading":"Time-Saving Calculation Patterns","level":2,"id":"Time-Saving_Calculation_Patterns_0"},{"heading":"Sum of Consecutive Numbers","level":3,"id":"Sum_of_Consecutive_Numbers_0"},{"heading":"Product of Numbers with Same Ten's Digit","level":3,"id":"Product_of_Numbers_with_Same_Ten's_Digit_0"},{"heading":"Mental Math Tips","level":2,"id":"Mental_Math_Tips_0"},{"heading":"Rounding Strategy","level":3,"id":"Rounding_Strategy_0"},{"heading":"Breaking Down Complex Problems","level":3,"id":"Breaking_Down_Complex_Problems_0"},{"heading":"Using Complementary Numbers","level":3,"id":"Using_Complementary_Numbers_0"},{"heading":"Practice Exercises","level":2,"id":"Practice_Exercises_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"analytical/fast-calculation.html","pathToRoot":"..","attachments":[],"createdTime":1750423945851,"modifiedTime":1750429517324,"sourceSize":3757,"sourcePath":"Analytical/Fast Calculation.md","exportPath":"analytical/fast-calculation.html","showInTree":true,"treeOrder":8,"backlinks":[],"type":"markdown"},"analytical/number-system.html":{"title":"Number System","icon":"","description":"Numbers can be broadly classified into two main types: real numbers and imaginary numbers. For aptitude tests, the focus is solely on real numbers.<img alt=\"Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 2m44s].png\" src=\"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].png\" target=\"_self\">Any number that can be represented on a number line is a real number. This includes:\nPositive and negative integers\nZero\nFractions (e.g., 1/10)\nDecimals (e.g., 0.5)\nRoot values (e.g., √5), which can be plotted using geometric principles like the Pythagorean theorem.\nNumbers that cannot be represented on a number line are imaginary. An example is iota (i), which is the square root of -1. These are generally not part of the aptitude syllabus.Real numbers can be further divided into rational and irrational numbers.A number is rational if it can be expressed in the p/q form, where q is not equal to zero.\nIntegers: All integers are rational numbers (e.g., 2 can be written as 2/1).\nFractions: These are inherently in p/q form and are rational.\nTerminating Decimals: Decimals that end, like 0.5, are rational because they can be converted to a fraction (0.5 = 5/10).\nNon-Terminating, Repeating Decimals: Decimals that continue infinitely but have a repeating pattern, like 0.333..., are also rational as they can be converted to a fraction (0.333... = 1/3).\nA number is irrational if it cannot be expressed in the p/q form.\nThese are non-terminating and non-repeating decimals.\nExamples include root values like √2, √3, and special numbers like Pi (π) and Euler's number (e).\nA key point is that π is irrational, while 22/7 is a rational approximation of π, not its exact value.\nIs rational number ?\nAnswer is not rational number, is an approximation of Integers can be classified in several ways:\nBy Sign: Positive integers (1, 2, 3,...), negative integers (-1, -2, -3,...), and zero.\nEven and Odd: Even Numbers: Divisible by 2.\nOdd Numbers: Not divisible by 2.\nZero (0) is an even number because it is divisible by 2 (0/2 = 0) and it falls between two odd numbers (-1 and 1). Prime and Composite: Prime Numbers: Have exactly two factors: 1 and the number itself (e.g., 2, 3, 5).\nComposite Numbers: Have more than two factors.\nOne (1) is neither prime nor composite as it only has one factor. Also known as relatively prime numbers, these are a set of two or more numbers whose only common factor is 1 (their Highest Common Factor is 1). The numbers themselves do not have to be prime. For example, 3 and 10 are co-prime.A perfect number is a positive integer that is equal to the sum of all its factors, excluding the number itself.\nExample (6): The factors of 6 are 1, 2, 3, and 6. The sum of its factors excluding itself is 1 + 2 + 3 = 6.\nThe first three perfect numbers to remember for exams are 6, 28, and 496.\n<br><img alt=\"Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 22m40s].png\" src=\"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].png\" target=\"_self\">Terminating decimals, which are decimals that end, can be converted to fractions using a straightforward method. Write the decimal as a fraction by placing it over 1. For example, 0.75 becomes . Multiply both the numerator and the denominator by a power of 10. The number of zeros should match the number of digits after the decimal point. For 0.75, there are two digits after the decimal, so you multiply by 100. Simplify the resulting fraction to its lowest terms. For non-terminating, repeating decimals, there are both a traditional algebraic method and a shortcut method useful for competitive exams.This method uses algebra to find the fractional equivalent. Let's use the example 0.333.... Set the repeating decimal equal to a variable, such as x. Multiply both sides by a power of 10 to shift the decimal point. Since one digit is repeating, we multiply by 10. Subtract the first equation from the second to eliminate the repeating part. Solve for x and simplify the fraction. <br><img alt=\"Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 25m30s].png\" src=\"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].png\" target=\"_self\">The video provides shortcuts for quick conversions, which are divided into two cases.\nCase 1: All digits after the decimal repeat Rule: Place the repeating digit(s) in the numerator. In the denominator, write a '9' for every repeating digit. Example 1: For 0.666... (or 0.6̄), the fraction is , which simplifies to . Example 2: For 0.3434... (or 0.34̄), the fraction is . Case 2: Some digits repeat, and some do not Rule: Numerator: Subtract the non-repeating part from the number formed by all digits after the decimal.\nDenominator: Write a '9' for each repeating digit, followed by a '0' for each non-repeating digit that comes after the decimal point. Example: To convert 0.6777... (or 0.67̄). Numerator: The full number is 67, and the non-repeating part is 6. So, . Denominator: There is one repeating digit ('7'), so one '9'. There is one non-repeating digit after the decimal ('6'), so one '0'. The denominator is 90. Result: The fraction is . The video concludes with a summary of important facts for exams:\nπ is an irrational number, whereas 22/7 is a rational number.\n1 is neither a prime nor a composite number.\nThere are 15 prime numbers between 1 and 50.\nThere are 25 prime numbers between 1 and 100.\nThere are 21 prime numbers between 100 and 200.\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Classification of Numbers","level":2,"id":"Classification_of_Numbers_0"},{"heading":"Real Numbers","level":5,"id":"Real_Numbers_0"},{"heading":"Imaginary Numbers","level":5,"id":"Imaginary_Numbers_0"},{"heading":"Sub-classification of Real Numbers","level":2,"id":"Sub-classification_of_Real_Numbers_0"},{"heading":"Rational Numbers","level":5,"id":"Rational_Numbers_0"},{"heading":"Irrational Numbers","level":5,"id":"Irrational_Numbers_0"},{"heading":"Integers","level":2,"id":"Integers_0"},{"heading":"Special Number Types","level":2,"id":"Special_Number_Types_0"},{"heading":"Co-prime Numbers","level":5,"id":"Co-prime_Numbers_0"},{"heading":"Perfect Numbers","level":5,"id":"Perfect_Numbers_0"},{"heading":"Conversion of Decimals to Fractions","level":2,"id":"Conversion_of_Decimals_to_Fractions_0"},{"heading":"Converting Terminating Decimals","level":2,"id":"Converting_Terminating_Decimals_0"},{"heading":"Standard Method","level":3,"id":"Standard_Method_0"},{"heading":"Converting Repeating Decimals","level":2,"id":"Converting_Repeating_Decimals_0"},{"heading":"Normal (Algebraic) Method","level":3,"id":"Normal_(Algebraic)_Method_0"},{"heading":"Shortcut Method","level":3,"id":"Shortcut_Method_0"},{"heading":"Key Points to Remember","level":2,"id":"Key_Points_to_Remember_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"analytical/number-system.html","pathToRoot":"..","attachments":["analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].html","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].html","analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].html"],"createdTime":1749769948199,"modifiedTime":1749773041347,"sourceSize":6670,"sourcePath":"Analytical/Number System.md","exportPath":"analytical/number-system.html","showInTree":true,"treeOrder":9,"backlinks":[],"type":"markdown"},"analytical/permutation&computation.html":{"title":"permutation&computation","icon":"","description":"The core idea is to determine when to multiply and when to add probabilities or possibilities. Multiplication (AND): Use when the work or task is in progress and not yet completed. Each step contributes to the completion of a single overall task. Example: Traveling from Jalandhar to Delhi To reach Ludhiana from Jalandhar, there are ways (train, bus, car).\nTo reach Delhi from Ludhiana, there are ways (train, bus).\nSince the task is not complete after reaching Ludhiana, multiply: total ways. Addition (OR): Use when the work or task is completed, and there's an alternative way to achieve it. This accounts for different paths that complete the same goal independently. Example: Continuing with Traveling from Jalandhar to Delhi Suppose there are direct routes from Jalandhar to Delhi: Direct train: way.\nDirect bus: way. Total ways when including Ludhiana route (from earlier): total ways. Permutation is used when the order of selection matters. For example, arranging items or selecting a president and vice-president where order is important.\nCombination is used when the order of selection does not matter. For example, selecting a committee where roles are not distinct.\nThe combination formula is given by:\nKey properties include: The symmetry property: The permutation formula is:\nAlso, How many 2-digit numbers can be made from digits 1, 2, 3, 4 without repetition? Answer First place: ways\nSecond place: ways (one digit already used) How many 4-digit numbers can be made from 7, 8, 5, 0, 4 without repetition? Answer First place: ways (cannot use )\nSecond place: ways ( now available, but one other digit used)\nThird place: ways\nFourth place: ways How many 3-digit numbers greater than 400 can be made with digits 2, 3, 4, 0, 5, 6 without repetition? Answer First place: ways (only , , to make number &gt; )\nSecond place: ways (one digit used, now available)\nThird place: ways How many 4-digit numbers divisible by 5 can be formed with digits 0, 1, 2, 3, 4, 5, 6 without repetition? Answer\nCase 1 (ends with ): Case 2 (ends with ): Total: Find 3-digit numbers such that at least one digit is 6 with repetition allowed from digits 2, 3, 4, 0, 5, 6. Answer\nTotal 3-digit numbers - Numbers without = In how many ways can letters of word EQUATION be arranged? Answer All letters are distinct In how many ways can letters of word FLINCHED be arranged? Answer letters total, E appears times In how many ways can letters of EQUATION be arranged if it starts with Q? Answer Q fixed in first position, arrange remaining letters In how many ways can letters of EQUATION be arranged if it starts with consonants? Answer consonants (Q, T, N) can start, then arrange remaining letters In how many ways can letters of OPTICAL be arranged so that all vowels are together? Answer Treat vowels (O, I, A) as one unit\nArrange units (including vowel group): Arrange vowels within group: In how many ways can letters of OPTICAL be arranged so that vowels are never together? Answer Total arrangements minus vowels always together In how many ways can letters of INVISIBILITY be arranged so that all I's come together? Answer Treat I's as one unit\nTotal positions: ( other letters + I-group)\nSince all I's are identical, no need to divide by With repetition: Each position has all choices\nWithout repetition: Positions have , , , ... choices\nZero case: First position cannot have in multi-digit numbers Basic arrangement: (where , are frequencies of repeated letters)\nSpecific starting: Fix first position, arrange rest\nTogether condition: Treat group as single unit\nNever together: Total arrangements - Always together arrangements At least one: Total - None\nDivisible by 5: Last digit must be or Even numbers: Last digit must be even\nOdd numbers: Last digit must be odd\nThese questions cover all major concepts tested in competitive exams and form the foundation for solving complex permutation and combination problems.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"permutation&amp;computation","level":1,"id":"permutation&computation_0"},{"heading":"The \"AND/OR\" Concept (Multiplication vs. Addition)","level":2,"id":"The_\"AND/OR\"_Concept_(Multiplication_vs._Addition)_0"},{"heading":"Permutation and Combination Definitions","level":2,"id":"Permutation_and_Combination_Definitions_0"},{"heading":"Formulas and Properties","level":2,"id":"Formulas_and_Properties_0"},{"heading":"Problems on Numbers","level":2,"id":"Problems_on_Numbers_0"},{"heading":"1. Basic Number Formation","level":3,"id":"1._Basic_Number_Formation_0"},{"heading":"2. Numbers with Zero","level":3,"id":"2._Numbers_with_Zero_0"},{"heading":"3. Numbers with Conditions","level":3,"id":"3._Numbers_with_Conditions_0"},{"heading":"4. Divisibility Questions","level":3,"id":"4._Divisibility_Questions_0"},{"heading":"5. At Least One Condition","level":3,"id":"5._At_Least_One_Condition_0"},{"heading":"Problems on Words","level":2,"id":"Problems_on_Words_0"},{"heading":"6. Basic Word Arrangements","level":3,"id":"6._Basic_Word_Arrangements_0"},{"heading":"7. Repeated Letters","level":3,"id":"7._Repeated_Letters_0"},{"heading":"8. Starting with Specific Letters","level":3,"id":"8._Starting_with_Specific_Letters_0"},{"heading":"9. Starting with Consonants","level":3,"id":"9._Starting_with_Consonants_0"},{"heading":"10. Vowels Together","level":3,"id":"10._Vowels_Together_0"},{"heading":"11. Vowels Never Together","level":3,"id":"11._Vowels_Never_Together_0"},{"heading":"12. Specific Letters Together","level":3,"id":"12._Specific_Letters_Together_0"},{"heading":"Key Formulas and Tips","level":2,"id":"Key_Formulas_and_Tips_0"},{"heading":"For Numbers:","level":3,"id":"For_Numbers_0"},{"heading":"For Words:","level":3,"id":"For_Words_0"},{"heading":"Important Shortcuts:","level":3,"id":"Important_Shortcuts_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"analytical/permutation&computation.html","pathToRoot":"..","attachments":[],"createdTime":1751448056446,"modifiedTime":1754124624638,"sourceSize":6082,"sourcePath":"Analytical/permutation&computation.md","exportPath":"analytical/permutation&computation.html","showInTree":true,"treeOrder":10,"backlinks":[],"type":"markdown"},"analytical/probability.html":{"title":"Probability","icon":"","description":"Here are detailed notes from the video \"Probability full concept Coin type &amp; Dice type questions\" by Study Roof, covering key concepts and example problems related to probability for aptitude exams:\nProbability formula: This formula is the foundation for all aptitude probability questions.\nProbability in aptitude is simpler than in advanced math; it revolves mainly around this formula. Coin-based questions\nDice-based questions\n(Cards and miscellaneous questions to be covered in subsequent videos) For coins tossed simultaneously, total outcomes = . 1 coin: outcomes (Head or Tail)\n2 coins: outcomes\n3 coins: outcomes\n4 coins: outcomes Probability of getting two tails when tossing two coins:\nFavorable outcomes = 1 (TT), Total outcomes = 4,\n.\nProbability of exactly one tail in two coins:\nFavorable outcomes = 2 (HT, TH),\n.\nProbability of no tail (both heads) in two coins:\nFavorable outcomes = 1 (HH),\n.\nFor three coins, probability of exactly two heads:\nFavorable outcomes = 3 (HHT, HTH, THH),\nTotal outcomes = 8,\n.\nProbability of at least one head and one tail in three coins:\nFavorable outcomes = 6,\n.\nFor four coins, probability of exactly three tails:\nUse permutation-combination (P &amp; C) to find favorable outcomes = 4,\nTotal outcomes = 16,\n.\nProbability of at least one tail in four coins:\nUse complementary approach: total outcomes = 16,\nOnly one case with zero tails (all heads),\nFavorable outcomes = 15,\n. For dice, total outcomes = . 1 die: 6 outcomes\n2 dice: outcomes\n3 dice: outcomes Probability of getting a double (same number on both dice) when two dice are thrown:\nFavorable outcomes = 6 (1-1, 2-2, ..., 6-6),\nTotal outcomes = 36,\n.\nProbability that two dice do not show the same number: favorable outcomes,\n.\nProbability that the sum of two dice equals 5:\nFavorable outcomes = 4 (1-4, 4-1, 2-3, 3-2),\n.\nProbability that the sum is a multiple of 5 (5 or 10):\nFavorable outcomes = 7,\n.\nProbability that the sum is a multiple of 3 (3, 6, 9, 12):\nFavorable outcomes = 12,\n.\nProbability that the sum is greater than 9:\nFavorable outcomes = 6 (10, 11, 12 sums),\n.\nFor practice Probability that the sum is a prime number (2, 3, 5, 7, 11) for two dice? Answer\nAnswer not given (Given as homework to calculate) Probability that the product of two dice equals a prime number:\nFavorable outcomes = 6 (1\\times\\times\\times\\times\\timesP = \\frac{6}{36} = \\frac{1}{6}$. Total outcomes = .\nProbability that the sum equals 5:\nFavorable outcomes = 6,\n.\nProbability that the sum equals 6:\nFavorable outcomes = 10,\n. Use combinatorics and permutations to find all possible arrangements of dice values that sum to the required number. Use the formula for total outcomes of coin tosses.\nUse for total outcomes of dice throws.\nFor favorable outcomes, use combinatorics (P &amp; C) to count arrangements.\nUse complementary probability (e.g., \"at least one tail\") by subtracting the complement from total outcomes.\nPractice shortcut methods and avoid writing all cases in exams for speed.\nApply PAC (Permutation and Combination) concepts from word problems to probability problems for efficient calculation.\nThis video provides a comprehensive introduction to probability questions involving coins and dice, explaining the basic formula, total outcomes calculation, favorable outcomes counting, and solving various example problems with step-by-step logic and shortcuts aimed at competitive exams like SSC, Bank, RRB, UPSC, and CAT.Here are detailed notes from the YouTube video \"Probability full concept Cards type &amp; Ball/marbles in bag questions\" by Study Roof, covering card-based probability questions and miscellaneous probability problems:\nA standard deck has 52 cards.\nThere are 4 suits: Spades (black, shaped like a leaf), Diamonds (red, diamond-shaped), Hearts (red, heart-shaped), Clubs (black, clover-shaped).\nEach suit has 13 cards: Ace (considered 1 or special), numbers 2 to 10, Jack, Queen, King.\nTotal face cards (Jack, Queen, King) per deck: 12.\nIncluding Ace as an honored card, total honored cards: 16. Black cards: Spades (13) + Clubs (13) = 26.\nRed cards: Hearts (13) + Diamonds (13) = 26.\nFor cards, total outcomes = 52.\nProbability of drawing a black card = 26/52 = 1/2.\nProbability of drawing Ace of Spades or Jack of Diamonds = 2/52 = 1/26.\nProbability of drawing any Ace = 4/52 = 1/13.\nProbability of drawing a card that is either red or a King: Red cards = 26.\nKings = 4.\nBut 2 Kings are red, so total favorable = 26 + 2 = 28.\nProbability = 28/52 = 7/13. Probability of drawing a card that is neither club nor queen: Clubs = 13.\nQueens = 4 (one queen is a club, so exclude it from extra count).\nCards to exclude = 13 + 3 = 16.\nFavorable = 52 - 16 = 36.\nProbability = 36/52 = 9/13. Bags contain balls of different colors (red, green, white, blue, yellow, black).\nBalls are drawn randomly, sometimes with replacement, sometimes without. Bag with 4 red, 5 green, 6 white balls: Probability of drawing neither red nor white (i.e., green) = 5/15 = 1/3. Bag with 2 red, 4 blue, 3 yellow, 5 green caps: Probability that none of the 3 picked caps is green: Total caps = 14.\nNon-green caps = 9.\nFavorable ways = combinations of 3 from 9 = 9C3.\nTotal ways = 14C3.\nProbability = 9C3 / 14C3 = 3/13. Bag with 4 red, 4 blue, 3 green marbles: Probability that all 3 picked marbles are either all red or all green: Red all = 4C3 = 4.\nGreen all = 3C3 = 1.\nTotal ways = 11C3 = 165.\nProbability = (4 + 1) / 165 = 5/165 = 1/33. Two bags: Bag 1: 6 red, 7 white balls.\nBag 2: 5 red, 3 white balls.\nOne ball drawn from each bag.\nProbability that one ball is red and the other is white: Two bags: Bag 1: 3 red, 8 black balls.\nBag 2: 5 red, 7 black balls.\nOne ball drawn from either bag (only one ball total).\nProbability of drawing a red ball: Bag with 4 white, 4 red, 2 green balls: Two balls drawn.\nProbability at least one ball is red: Total balls = 10.\nProbability no red ball = combinations of 2 from 6 non-red balls / combinations of 2 from 10 balls = 6C2 / 10C2 = 15/45 = 1/3.\nSo probability at least one red = 1 - 1/3 = 2/3. Bag with 5 red, 7 white balls: Four balls drawn one by one without replacement.\nProbability balls are drawn alternately in different colors (red, white, red, white or white, red, white, red): Calculated by multiplying probabilities for each draw considering reduced balls.\nFinal probability = 14/99. For card-based questions, knowledge of the deck structure is essential.\nUse the probability formula carefully, especially with \"or\" and \"neither/nor\" conditions.\nFor miscellaneous problems, identify total events and favorable events clearly.\nUse combinations (nCr) for problems involving multiple draws without replacement.\nFor multiple bags, consider whether balls are drawn from each bag or randomly from one of the bags.\nPractice shortcut methods for faster calculation.\nAlways simplify fractions for final answers.\nUse diagrams or keep a reference image of cards for quick recall during problem solving. The video is designed for SSC, Bank, RRB, UPSC, CAT, and campus placement exam preparation.\nEmphasizes speed and accuracy in solving probability questions.\nCovers basic to advanced level problems with step-by-step solutions.\nEncourages practice and understanding of common mistakes.\nThese notes summarize the key concepts, examples, and problem-solving strategies from the video to help understand and master probability questions related to cards and balls in bags.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Probability Full Concept - Part 1: Coin and Dice Based Questions","level":1,"id":"Probability_Full_Concept_-_Part_1_Coin_and_Dice_Based_Questions_0"},{"heading":"Basic Concept of Probability","level":2,"id":"Basic_Concept_of_Probability_0"},{"heading":"Types of Probability Questions","level":2,"id":"Types_of_Probability_Questions_0"},{"heading":"Coin-Based Probability Questions","level":2,"id":"Coin-Based_Probability_Questions_0"},{"heading":"Total Outcomes for Coin Toss","level":3,"id":"Total_Outcomes_for_Coin_Toss_0"},{"heading":"Examples:","level":3,"id":"Examples_0"},{"heading":"Dice-Based Probability Questions","level":2,"id":"Dice-Based_Probability_Questions_0"},{"heading":"Total Outcomes for Dice Throws","level":3,"id":"Total_Outcomes_for_Dice_Throws_0"},{"heading":"Examples:","level":3,"id":"Examples_1"},{"heading":"Three Dice Examples","level":2,"id":"Three_Dice_Examples_0"},{"heading":"Method to find favorable outcomes:","level":3,"id":"Method_to_find_favorable_outcomes_0"},{"heading":"Tips and Tricks","level":2,"id":"Tips_and_Tricks_0"},{"heading":"Summary","level":2,"id":"Summary_0"},{"heading":"Probability Full Concept - Part 2: Cards and Balls in Bags","level":1,"id":"Probability_Full_Concept_-_Part_2_Cards_and_Balls_in_Bags_0"},{"heading":"Card-Based Probability Questions","level":2,"id":"Card-Based_Probability_Questions_0"},{"heading":"Deck Composition:","level":3,"id":"Deck_Composition_0"},{"heading":"Color Distribution:","level":3,"id":"Color_Distribution_0"},{"heading":"Probability Formula:","level":3,"id":"Probability_Formula_0"},{"heading":"Sample Questions:","level":3,"id":"Sample_Questions_0"},{"heading":"Miscellaneous Probability Questions (Balls in Bags)","level":2,"id":"Miscellaneous_Probability_Questions_(Balls_in_Bags)_0"},{"heading":"Basic Setup:","level":3,"id":"Basic_Setup_0"},{"heading":"Sample Questions and Solutions:","level":3,"id":"Sample_Questions_and_Solutions_0"},{"heading":"Important Tips","level":2,"id":"Important_Tips_0"},{"heading":"Exam Relevance","level":2,"id":"Exam_Relevance_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"analytical/probability.html","pathToRoot":"..","attachments":[],"createdTime":1751020633153,"modifiedTime":1751021674118,"sourceSize":10351,"sourcePath":"Analytical/Probability.md","exportPath":"analytical/probability.html","showInTree":true,"treeOrder":11,"backlinks":[],"type":"markdown"},"analytical/speed-distance-time.html":{"title":"Speed Distance Time","icon":"","description":"Key Concepts Covered: Fundamental Formula: The core relationship in TSD is . Unit Conversion: The video emphasizes the importance of consistent units. It explains how to convert speeds between kilometers per hour () and meters per second (). To convert from m/s to km/hr, multiply by . To convert from km/hr to m/s, multiply by . Proportionality Concept: This is presented as the most critical technique for solving a majority of TSD problems efficiently. Rule 1: Constant Distance When the distance is constant, speed is inversely proportional to time. This means if the ratio of two speeds is , the ratio of the time taken will be . This rule applies to scenarios like traveling from home to the office and back, or covering two equal halves of a journey. Rule 2: Constant Time When the time is constant, distance is directly proportional to speed. If the ratio of two speeds is , the ratio of the distances covered will also be . This rule is useful in problems where two objects start at the same time and travel for the same duration until they meet. The video demonstrates these concepts with several example problems, progressing from easy to difficult levels and showing how identifying the constant variable is key to finding the solution.This question is based on a \"difficult level\" problem discussed in the video, which uses the proportionality concept with constant distance.A man travels a certain distance from his house to his office by bike. If he travels at an average speed of , he arrives minutes late. If he travels at , he arrives minutes early. What is the distance between his house and office?\nAnswer\nThis problem can be solved using the proportionality concept, as the distance between the house and the office is constant. Calculate the Time Difference: The total time difference between the two scenarios is the sum of the late time and the early time: . Determine the Speed Ratio: The ratio of the initial speed to the final speed is , which simplifies to . Find the Time Ratio: Since the distance is constant, speed is inversely proportional to time. Therefore, the ratio of the time taken is the inverse of the speed ratio, which is . Relate Ratios to Actual Time: The difference in the time ratio is unit. This unit corresponds to the actual time difference of minutes. Therefore, . Calculate Actual Travel Time: The time taken at the initial speed () corresponds to units in the ratio. So, the actual time is , or . Alternatively, the time taken at the final speed () corresponds to units, which is . Calculate the Distance: Now, use the formula with one of the scenarios. It is crucial to ensure the units are consistent ( and hours). Using the first scenario: . Using the second scenario: (since ) . The distance between the house and the office is 30 km. The video \"Time Speed &amp; Distance (Part2) Average Speed questions in TSD II Important question of TSD <a href=\".?query=tag:aptitude\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#aptitude\">#aptitude</a>\" by Study Roof, published on December 11, 2024, is an in-depth tutorial focusing on average speed concepts within time, speed, and distance problems, a common topic in aptitude tests like SSC, Bank PO, CAT, and GRE. The video aims to enhance problem-solving skills for both beginners and advanced learners by covering core concepts, formulas, unit conversions, and step-by-step solutions to practice questions.The fundamental formula for average speed is Total Distance / Total Time. The video emphasizes that this is the only true formula for average speed, cautioning against simply averaging speeds (e.g., ).When an object travels to a destination and returns along the same path (meaning the distance is constant), a simplified formula for average speed can be used: , where and are the two speeds. This formula is also referred to as the harmonic mean.If a journey is divided into three equal distances, each covered at a different speed (, , ), the average speed formula becomes: . The video notes that this scenario is less common in exams.When distance is constant, speed is inversely proportional to time (Speed 1/Time). This means if the ratio of speeds is , the ratio of times will be .\nA car goes from A to B at km/hr and returns from B to A at km/hr. What is the average speed of the journey? Answer\nThis is a case of constant distance. Using the formula :\nAverage Speed = km/hr or approximately km/hr. A train is moving at a speed of miles/hr for the first hours and miles/hr for the next hours. What is the average speed of the train? Answer\nThis problem requires using the general \"Total Distance / Total Time\" formula because the distances covered are not necessarily constant, nor are there only two equal distance segments.\nDistance 1 = Speed 1 Time 1 = miles/hr hours = miles.\nDistance 2 = Speed 2 Time 2 = miles/hr hours = miles.\nTotal Distance = miles.\nTotal Time = hours.\nAverage Speed = Total Distance / Total Time = miles/hr. A boy goes to school at a speed of km/hr and returns to the village at km/hr. If he takes hours in total, what is the distance between the school and the village? Answer\nSolution (using Proportional Concept):\nSpeed ratio (going:returning) = .\nTime ratio (going:returning) = (inversely proportional).\nTotal time taken (from ratio) = units.\nGiven total time = hours, so unit hour.\nTime taken to go to school = hours.\nDistance = Speed Time = km/hr hours = km.\nAlternatively, using return journey: Time taken to return = hours. Distance = km/hr hours = km.\nSolution (using Average Speed):\nThis is a constant distance scenario (going to school and returning). Calculate average speed:\nAverage Speed = km/hr.\nTotal Distance (round trip) = Average Speed Total Time = km/hr hours km.\nSince this is the round trip distance, the distance between the school and the village is half of the total distance = km km. The video encourages viewers to practice under timed conditions and provides homework questions for further practice. It also mentions that important unit-wise question videos will be released after this topic.The video introduces a modified formula specifically for problems involving trains, which helps in systematically solving them.The primary formula used is Time = Total Distance / Relative Speed.\nTotal Distance: This is the sum of the length of the train () and the length of the object it is crossing (). Objects with significant length (): These include other trains, platforms, or tunnels. The formula uses .\nPoint objects (): Objects like a pole, a signal, or a standing person are considered to have no length. In this case, the distance is just the length of the train (). Relative Speed: This depends on the direction of movement of the two objects. Same Direction: When the train and another moving object travel in the same direction, their speeds are subtracted: .\nOpposite Directions: When they move towards each other, their speeds are added: .\nIf the object is stationary, its speed is , and the denominator is just the speed of the train. Unit Conversion:\nA key step is to ensure all units are consistent. To convert speed from kilometers per hour (km/hr) to meters per second (m/s), multiply by .\nA train passes a station platform in seconds and a man standing on the platform in seconds. If the train's speed is km/hr, what is the length of the platform? Answer Convert Speed: km/hr × = m/s.\nFind Train's Length: When passing the man, the train covers its own length. Length of Train () = Speed × Time = m/s × s = meters. Find Platform's Length: When passing the platform, the train covers its own length plus the platform's length. Total Distance () = Speed × Time = m/s × s = meters.\nLength of Platform () = Total Distance - = m - m = meters. Shortcut Explained: The extra time taken to cross the platform (s - s = s) is the time required to cover the platform's length alone. Therefore, = Speed × Time Difference = m/s × s = meters.\nAnswer: meters. Two trains, each meters long, are running in opposite directions at the same speed. They cross each other in seconds. What is the speed of each train? Answer Total Distance: m + m = m.\nRelative Speed: Since they move in opposite directions at the same speed (), the relative speed is .\nApply Formula: Time = Distance / Speed -&gt; .\nSolve for : m/s.\nConvert to km/hr: m/s × = km/hr. Answer: km/hr. Two trains (m and m) are on parallel rails. When running in the same direction, the faster train passes the slower one in seconds. In opposite directions, they pass in seconds. Find the speed of the faster train. Answer Total Length: m + m = m.\nSame Direction: = Distance / Time = m/s.\nOpposite Direction: = Distance / Time = m/s.\nSolve Equations: You have two linear equations: and . Adding them gives , so m/s. Math Shortcut: For equations and , the value of is . Here, m/s.\nAnswer: The speed of the faster train is m/s. A standing man observes that one train passes him in seconds and a second train of the same length passes him in seconds. How long will it take for the two trains to cross each other when they are running in opposite directions? Answer Let the length of each train be .\nFind Speeds: and .\nCrossing Time: When moving in opposite directions, Time = .\nTime = .\nTime = seconds. Answer: seconds. A train traveling at km/hr passes a runner in seconds when going in the same direction, and in seconds in the opposite direction. Find the length of the train. Answer Train Speed: km/hr = m/s.\nLet be the train's length and be the runner's speed.\nEquations: Same direction: .\nOpposite direction: .\nThe video leaves this problem for the viewer to solve using the two equations. A car traveling in fog passes a man walking at km/hr in the same direction. The man could see the car for minutes and up to a distance of meters. What is the speed of the car? Answer The m is the relative distance covered in minutes due to the difference in speed.\nConvert Units: Time = min = hr. Distance = m = km.\nRelative Speed: .\nApply Formula: Relative Distance = Relative Speed × Time -&gt; .\nSolve: . Therefore, km/hr. Answer: km/hr. A thief is meters ahead of a policeman. The policeman catches the thief in minutes. If the thief's speed is km/hr, find the distance traveled by the policeman. Answer Distance covered by thief: Distance = Speed × Time. Time = min = hr.\nThief's distance = km/hr × hr = km or meters.\nDistance covered by policeman: The policeman covered the same meters as the thief, plus the initial -meter gap.\nTotal distance = m + m = m or km. Answer: km. A car travels km in hours. The first part of the journey is at km/hr and the rest is at km/hr. Find the distance covered in the first part. Answer Average Speed: km / hr = km/hr.\nAllegation Setup: Compare the two speeds to the average speed to find the ratio of time taken for each part. , which simplifies to a time ratio of . Time for First Part: The first part took of the total time. × hours = hours.\nDistance of First Part: Distance = Speed × Time = km/hr × hr = km. Answer: km. The instructor explains the core concepts using specific notation before moving to practice problems.\nSpeed of the Boat (SB): The speed of the boat in still, unmoving water.\nSpeed of the Stream (SS): The speed of the current or river flow.\nDownstream Speed (SD): The speed when the boat travels in the same direction as the stream. The speeds add up. Formula: . Upstream Speed (SU): The speed when the boat travels against the direction of the stream. The stream's speed is subtracted from the boat's speed. Formula: . Calculating SB and SS from SD and SU: The video offers a shortcut to find the boat and stream speeds if the downstream and upstream speeds are known. Speed of Boat: .\nSpeed of Stream: . The video walks through several types of problems, from basic to advanced.\nA boat can travel at a speed of 13 km/hr in still water. If the speed of the stream is 4 km/hr, find the time taken by the boat to go 68 km downstream. Answer\nSolution: Calculate the downstream speed: km/hr.\nCalculate the time taken: Time = Distance / Speed = 68 km / 17 km/hr.\nAnswer: 4 hours. A boat running downstream covers 16 km in 2 hours. For covering the same distance upstream, it takes 4 hours. What is the speed of the boat in still water? Answer\nSolution: Calculate downstream speed: km/hr.\nCalculate upstream speed: km/hr.\nCalculate the speed of the boat: km/hr.\nAnswer: 6 km/hr. A boat moves 2 km against the current in 1 hour and moves 1 km in the direction of the current in 10 minutes. How long will it take the boat to go 5 km in stationary water? Answer\nSolution:\n4. Calculate upstream speed: km/hr.\n5. Calculate downstream speed: km/hr.\n6. Calculate the speed of the boat in still water: km/hr.\n7. Calculate the required time: .\nAnswer: 1 hour and 15 minutes. The ratio of the speed of a boat in downstream to upstream is 7:4. A boy takes 4 hours to cover a total distance of 88 km upstream. What is the speed of the boat in still water? Answer\nSolution:\n8. Calculate upstream speed: km/hr.\n9. The ratio SU is 4 parts, which equals 22 km/hr. So, .\n10. The ratio SD is 7 parts. So, km/hr (or 77/2 km/hr).\n11. Calculate the speed of the boat: .\nAnswer: 30.25 km/hr. A man can row 4 km/hr in still water. He finds that it takes him twice as long to row up as to row down the river. Find the rate of the stream. Answer\nSolution: The video sets up the equation and leaves the final calculation as an exercise for the viewer. The relationship \"time upstream is twice the time downstream\" implies \"downstream speed is twice the upstream speed\" (). Setup: . With , the equation is .\nAnswer: The video leaves this for the viewer to solve. A man can row a certain distance downstream in 6 hours and return the same distance in 8 hours. If the stream flows at a rate of 4 km/hr, find the speed of the man in still water. Answer\nSolution: Since distance is constant, . The video sets up the equality and leaves the calculation as an exercise. Setup: . With , the equation is .\nAnswer: The video leaves this for the viewer to solve. Find the average speed of a boat in a round trip between two places 25 km apart if the speed of the boat in still water is 10 km/hr and the speed of the river is 5 km/hr. Answer\nSolution: Calculate and .\nFor a journey with constant distance, the average speed formula is .\n.\nAnswer: 7.5 km/hr. The distance of 25 km is not required for this calculation. The ratio of the speed of a motorboat to that of the current is 36:5. The motorboat goes along with the current in 5 hours and 10 minutes. Find the time for it to come back. Answer\nSolution:\n4. From the given ratio , derive the speed ratio . .\n.\nSo, . For a constant distance, the time ratio is the inverse of the speed ratio. So, .\nThe given downstream time is 5 hours 10 minutes, which is 310 minutes. This corresponds to the 31 parts in the time ratio.\nTherefore, .\nThe upstream time is 41 parts, so minutes.\nAnswer: 410 minutes, or 6 hours and 50 minutes. ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Sample Question and Answer","level":2,"id":"Sample_Question_and_Answer_0"},{"heading":"Time, Speed &amp; Distance Tutorial: Average Speed Concepts","level":1,"id":"Time,_Speed_&_Distance_Tutorial_Average_Speed_Concepts_0"},{"heading":"Key Concepts and Formulas","level":2,"id":"Key_Concepts_and_Formulas_0"},{"heading":"Average Speed Formula","level":3,"id":"Average_Speed_Formula_0"},{"heading":"Special Case: Constant Distance","level":3,"id":"Special_Case_Constant_Distance_0"},{"heading":"Three Constant Distances","level":3,"id":"Three_Constant_Distances_0"},{"heading":"Proportional Concept","level":3,"id":"Proportional_Concept_0"},{"heading":"Example Questions and Solutions","level":2,"id":"Example_Questions_and_Solutions_0"},{"heading":"Core Concepts for Train Problems","level":2,"id":"Core_Concepts_for_Train_Problems_0"},{"heading":"Questions and Solutions from the Video","level":2,"id":"Questions_and_Solutions_from_the_Video_0"},{"heading":"Question 1: Train, Platform, and Man","level":3,"id":"Question_1_Train,_Platform,_and_Man_0"},{"heading":"Question 2: Two Trains in Opposite Directions","level":3,"id":"Question_2_Two_Trains_in_Opposite_Directions_0"},{"heading":"Question 3: Faster and Slower Trains","level":3,"id":"Question_3_Faster_and_Slower_Trains_0"},{"heading":"Question 4: Two Trains Crossing a Man","level":3,"id":"Question_4_Two_Trains_Crossing_a_Man_0"},{"heading":"Question 5: Train and Runner","level":3,"id":"Question_5_Train_and_Runner_0"},{"heading":"Question 6: Car in Fog","level":3,"id":"Question_6_Car_in_Fog_0"},{"heading":"Question 7: Police and Thief","level":3,"id":"Question_7_Police_and_Thief_0"},{"heading":"Question 8: Journey in Two Parts","level":3,"id":"Question_8_Journey_in_Two_Parts_0"},{"heading":"Key Concepts and Formulas","level":2,"id":"Key_Concepts_and_Formulas_1"},{"heading":"Solved Problems from the Video","level":2,"id":"Solved_Problems_from_the_Video_0"}],"links":["?query=tag:aptitude"],"author":"","coverImageURL":"","fullURL":"analytical/speed-distance-time.html","pathToRoot":"..","attachments":[],"createdTime":1750670429952,"modifiedTime":1750672025145,"sourceSize":21048,"sourcePath":"Analytical/Speed Distance Time.md","exportPath":"analytical/speed-distance-time.html","showInTree":true,"treeOrder":12,"backlinks":[],"type":"markdown"},"analytical/time-and-work.html":{"title":"Time and Work","icon":"","description":"The following examples use this scenario:\nA completes work in 12 days.\nB completes work in 16 days.\nInitial Calculation:\nTotal Work: LCM(12, 16) = 48 units\nA's Efficiency: units/day\nB's Efficiency: units/day\nQuestion: If A and B work together, how many days will it take?Solution:\nCombined Efficiency (A + B) = 4 + 3 = 7 units/day\nTime Taken = days = days\nQuestion: A works for 4 days, then B joins. How long until completion?Solution:\nWork done by A in 4 days = 4 × 4 = 16 units\nRemaining Work = 48 - 16 = 32 units\nTime for remaining work = days\nTotal Time = 4 + days = days\nQuestion: A and B work together for 5 days, then A leaves. How long until completion?Solution:\nWork done in 5 days = 7 × 5 = 35 units\nRemaining Work = 48 - 35 = 13 units\nTime for B to finish = days = days\nTotal Time = 5 + days\nQuestion: In the previous scenario, how many days will B take to complete the remaining work?Solution:\nRemaining Work = 13 units\nTime for B = days = days\nQuestion: A and B work together, but A leaves 5 days before completion. How long does it take?Method 1: Logical Deduction\nB works alone for the last 5 days (15 units)\nWork done together = 48 - 15 = 33 units\nTime for initial work = days\nTotal time = days\nMethod 2: Shortcut Trick\nA's missed work = 4 × 5 = 20 units\nNew Total Work = 48 + 20 = 68 units\nTime Taken = days\nQuestion: A, B, and C start together. A leaves 5 days before, B leaves 4 days before completion. How long does it take?Solution:\nTotal Work = LCM(12, 16, 24) = 48 units\nEfficiencies: A = 4, B = 3, C = 2 units/day. Combined = 9 units/day\nA's missed work = 5 × 4 = 20 units\nB's missed work = 4 × 3 = 12 units\nNew Total Work = 48 + 20 + 12 = 80 units\nTotal Time = days\nQuestion: A (12 days) and B (16 days) work on alternate days, A starting first. How long will it take?Solution:\nDay 1 (A): 4 units\nDay 2 (B): 3 units\nWork Cycle (2 days): 7 units\n6 full cycles: 42 units, 12 days\nRemaining Work: 6 units\nDay 13 (A): 4 units done, 2 remaining\nDay 14 (B): day\nTotal Time = 12 + 1 + days\nQuestion: A builds in 12 days, B destroys in 16 days. How long until completion?Solution:\nA's Efficiency = +4 units/day\nB's Efficiency = -3 units/day\nNet Efficiency = +1 unit/day\nTime Taken = days For taking LCM: Find the smallest number that will be fully divided by all given individual completion times. See what should be multiplied with each person's time to get the LCM - that number will be the efficiency of that person. Formula: Efficiency = $LCM \\div Individual Time$ Working together: Add all efficiencies Working separately: Use individual efficiency Alternating work: Calculate cycle-wise ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Base Scenario","level":1,"id":"Base_Scenario_0"},{"heading":"Solved Examples","level":1,"id":"Solved_Examples_0"},{"heading":"1. Working Together from the Start","level":2,"id":"1._Working_Together_from_the_Start_0"},{"heading":"2. One Person Joins After a Delay","level":2,"id":"2._One_Person_Joins_After_a_Delay_0"},{"heading":"3. One Person Leaves After Some Time","level":2,"id":"3._One_Person_Leaves_After_Some_Time_0"},{"heading":"4. Calculating Time for Remaining Work","level":2,"id":"4._Calculating_Time_for_Remaining_Work_0"},{"heading":"Advanced Scenarios &amp; Shortcut Tricks","level":1,"id":"Advanced_Scenarios_&_Shortcut_Tricks_0"},{"heading":"5. Leaving a Few Days Before Completion","level":2,"id":"5._Leaving_a_Few_Days_Before_Completion_0"},{"heading":"6. Multiple People Leaving Before Completion","level":2,"id":"6._Multiple_People_Leaving_Before_Completion_0"},{"heading":"7. Alternate Day Working","level":2,"id":"7._Alternate_Day_Working_0"},{"heading":"8. Negative Work","level":2,"id":"8._Negative_Work_0"},{"heading":"The LCM Method - Step by Step","level":2,"id":"The_LCM_Method_-_Step_by_Step_0"},{"heading":"Step 1: Find LCM (Total Work Units)","level":3,"id":"Step_1_Find_LCM_(Total_Work_Units)_0"},{"heading":"Step 2: Calculate Individual Efficiency","level":3,"id":"Step_2_Calculate_Individual_Efficiency_0"},{"heading":"Step 3: Apply Based on Scenario","level":3,"id":"Step_3_Apply_Based_on_Scenario_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"analytical/time-and-work.html","pathToRoot":"..","attachments":[],"createdTime":1750410115882,"modifiedTime":1750423942593,"sourceSize":4037,"sourcePath":"Analytical/Time and Work.md","exportPath":"analytical/time-and-work.html","showInTree":true,"treeOrder":13,"backlinks":[],"type":"markdown"},"analytical/unit-digit.html":{"title":"Unit Digit","icon":"","description":"The unit digit is the right-most digit of a number. When calculating the unit digit of a product or a number raised to a power, you often only need to consider the unit digits of the numbers involved.To find the unit digit of a product of several numbers, multiply only their unit digits.\nExample: For 278 * 623, multiply the unit digits 8 * 3 = 24. The resulting unit digit is 4.\nTo find the unit digit of a number in the form numberpower, the method depends on the unit digit of the base number.For numbers with a unit digit of 0, 1, 5, or 6, the unit digit of the result will always be the same, regardless of the power.\nExample: The unit digit of 4552145521 is 5.\nThese numbers have a cyclicity of two, meaning their unit digit pattern repeats every two powers. The unit digit depends on whether the power is odd or even.\nExample: For 24243, the base unit digit is 4 and the power is odd, so the resulting unit digit is 4. Example: For 9998, the base unit digit is 9 and the power is even, so the resulting unit digit is 1.\nThese numbers have a cyclicity of four, meaning the unit digit pattern repeats every four powers.To find the unit digit:\nDivide the power by 4 and find the remainder. For large powers, you only need to divide the last two digits of the power by 4 to find the remainder.\nRaise the base's unit digit to the power of the remainder. This will be the new unit digit.\nIf the remainder is 0, use 4 as the power instead of 0. Example: To find the unit digit of 9291: Divide the power 91 by 4. The remainder is 3.\nCalculate 23 = 8. The unit digit is 8. Example: To find the unit digit of 127144: Divide the last two digits of the power (44) by 4. The remainder is 0.\nSince the remainder is 0, use the power 4. Calculate 74.\n74 = 2401. The unit digit is 1. Divisibility rules are shortcuts to determine if a number can be evenly divided by another, and they can also help in finding remainders.The rule is based on the number of last digits.\nDivisibility by 2: The last digit must be divisible by 2.\nDivisibility by 4: The last two digits must be divisible by 4.\nDivisibility by 8: The last three digits must be divisible by 8.\nThis follows a similar pattern to the powers of 2.\nDivisibility by 5: The last digit must be 0 or 5.\nDivisibility by 25: The last two digits must be divisible by 25 (e.g., 00, 25, 50, 75).\nDivisibility by 125: The last three digits must be divisible by 125.\nThese rules are based on the sum of the digits. Divisibility by 3: The sum of all digits must be divisible by 3. Divisibility by 9: The sum of all digits must be divisible by 9. Shortcut for 9: Pair up digits that sum to 9 and cancel them out. If all digits are cancelled, the number is divisible by 9. A number is divisible by 6 if it is divisible by both 2 and 3.This rule uses the alternating sum of digits.\nSum the digits in the odd positions (1st, 3rd, 5th, etc.).\nSum the digits in the even positions (2nd, 4th, 6th, etc.).\nFind the difference between the two sums.\nIf the difference is 0 or a multiple of 11, the number is divisible by 11. Example: For the number 1331: Odd positions sum: 1 + 3 = 4.\nEven positions sum: 3 + 1 = 4.\nDifference: 4 - 4 = 0. The number is divisible by 11. This table summarizes how to find the unit digit of a number raised to a power (numberpower).This table provides quick shortcuts to check if a number is divisible by another number.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Unit Digit Concept","level":2,"id":"Unit_Digit_Concept_0"},{"heading":"Product Type Questions","level":3,"id":"Product_Type_Questions_0"},{"heading":"Power Type Questions","level":3,"id":"Power_Type_Questions_0"},{"heading":"Numbers ending in 0, 1, 5, or 6","level":3,"id":"Numbers_ending_in_0,_1,_5,_or_6_0"},{"heading":"Numbers ending in 4 or 9","level":3,"id":"Numbers_ending_in_4_or_9_0"},{"heading":"Numbers ending in 2, 3, 7, or 8","level":3,"id":"Numbers_ending_in_2,_3,_7,_or_8_0"},{"heading":"Divisibility Rules","level":2,"id":"Divisibility_Rules_0"},{"heading":"Rules for Powers of 2 (2, 4, 8, 16, etc.)","level":3,"id":"Rules_for_Powers_of_2_(2,_4,_8,_16,_etc.)_0"},{"heading":"Rules for Powers of 5 (5, 25, 125, etc.)","level":3,"id":"Rules_for_Powers_of_5_(5,_25,_125,_etc.)_0"},{"heading":"Rules for 3 and 9","level":3,"id":"Rules_for_3_and_9_0"},{"heading":"Rule for 6","level":3,"id":"Rule_for_6_0"},{"heading":"Rule for 11","level":3,"id":"Rule_for_11_0"},{"heading":"Unit Digit Rules Summary","level":2,"id":"Unit_Digit_Rules_Summary_0"},{"heading":"Divisibility Rules Summary","level":2,"id":"Divisibility_Rules_Summary_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"analytical/unit-digit.html","pathToRoot":"..","attachments":[],"createdTime":1749773083093,"modifiedTime":1749800288197,"sourceSize":7119,"sourcePath":"Analytical/Unit Digit.md","exportPath":"analytical/unit-digit.html","showInTree":true,"treeOrder":14,"backlinks":[],"type":"markdown"},"cn/img/1.html":{"title":"1","icon":"","description":"<img src=\"cn/img/1.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/1.png","fullURL":"cn/img/1.html","pathToRoot":"../..","attachments":["cn/img/1.html"],"createdTime":1746089047544,"modifiedTime":1746089047551,"sourceSize":117649,"sourcePath":"CN/img/1.png","exportPath":"cn/img/1.html","showInTree":true,"treeOrder":17,"backlinks":["cn/process-to-process.html"],"type":"attachment"},"cn/img/2.html":{"title":"2","icon":"","description":"<img src=\"cn/img/2.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/2.png","fullURL":"cn/img/2.html","pathToRoot":"../..","attachments":["cn/img/2.html"],"createdTime":1746089047553,"modifiedTime":1746089047554,"sourceSize":80108,"sourcePath":"CN/img/2.png","exportPath":"cn/img/2.html","showInTree":true,"treeOrder":18,"backlinks":["cn/process-to-process.html"],"type":"attachment"},"cn/img/3.html":{"title":"3","icon":"","description":"<img src=\"cn/img/3.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/3.png","fullURL":"cn/img/3.html","pathToRoot":"../..","attachments":["cn/img/3.html"],"createdTime":1746089047557,"modifiedTime":1746089047557,"sourceSize":54839,"sourcePath":"CN/img/3.png","exportPath":"cn/img/3.html","showInTree":true,"treeOrder":19,"backlinks":["cn/process-to-process.html"],"type":"attachment"},"cn/img/4.html":{"title":"4","icon":"","description":"<img src=\"cn/img/4.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/4.png","fullURL":"cn/img/4.html","pathToRoot":"../..","attachments":["cn/img/4.html"],"createdTime":1746089047558,"modifiedTime":1746089047559,"sourceSize":49846,"sourcePath":"CN/img/4.png","exportPath":"cn/img/4.html","showInTree":true,"treeOrder":20,"backlinks":["cn/process-to-process.html"],"type":"attachment"},"cn/img/5.html":{"title":"5","icon":"","description":"<img src=\"cn/img/5.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/5.png","fullURL":"cn/img/5.html","pathToRoot":"../..","attachments":["cn/img/5.html"],"createdTime":1746089763544,"modifiedTime":1746089763576,"sourceSize":62145,"sourcePath":"CN/img/5.png","exportPath":"cn/img/5.html","showInTree":true,"treeOrder":21,"backlinks":["cn/process-to-process.html"],"type":"attachment"},"cn/img/6.html":{"title":"6","icon":"","description":"<img src=\"cn/img/6.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/6.png","fullURL":"cn/img/6.html","pathToRoot":"../..","attachments":["cn/img/6.html"],"createdTime":1746096880867,"modifiedTime":1746096880904,"sourceSize":66354,"sourcePath":"CN/img/6.png","exportPath":"cn/img/6.html","showInTree":true,"treeOrder":22,"backlinks":["cn/process-to-process.html"],"type":"attachment"},"cn/img/7.html":{"title":"7","icon":"","description":"<img src=\"cn/img/7.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/7.png","fullURL":"cn/img/7.html","pathToRoot":"../..","attachments":["cn/img/7.html"],"createdTime":1746169949243,"modifiedTime":1746169949379,"sourceSize":50027,"sourcePath":"CN/img/7.png","exportPath":"cn/img/7.html","showInTree":true,"treeOrder":23,"backlinks":["cn/process-to-process.html"],"type":"attachment"},"cn/img/8.html":{"title":"8","icon":"","description":"<img src=\"cn/img/8.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/8.png","fullURL":"cn/img/8.html","pathToRoot":"../..","attachments":["cn/img/8.html"],"createdTime":1746169990551,"modifiedTime":1746169990573,"sourceSize":25118,"sourcePath":"CN/img/8.png","exportPath":"cn/img/8.html","showInTree":true,"treeOrder":24,"backlinks":["cn/process-to-process.html"],"type":"attachment"},"cn/img/9.html":{"title":"9","icon":"","description":"<img src=\"cn/img/9.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/9.png","fullURL":"cn/img/9.html","pathToRoot":"../..","attachments":["cn/img/9.html"],"createdTime":1746170195997,"modifiedTime":1746170196609,"sourceSize":82948,"sourcePath":"CN/img/9.png","exportPath":"cn/img/9.html","showInTree":true,"treeOrder":25,"backlinks":["cn/process-to-process.html","cn/udp.html"],"type":"attachment"},"cn/img/10.html":{"title":"10","icon":"","description":"<img src=\"cn/img/10.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/10.png","fullURL":"cn/img/10.html","pathToRoot":"../..","attachments":["cn/img/10.html"],"createdTime":1746170463905,"modifiedTime":1746170463940,"sourceSize":47541,"sourcePath":"CN/img/10.png","exportPath":"cn/img/10.html","showInTree":true,"treeOrder":26,"backlinks":["cn/udp.html"],"type":"attachment"},"cn/img/11.html":{"title":"11","icon":"","description":"<img src=\"cn/img/11.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/11.png","fullURL":"cn/img/11.html","pathToRoot":"../..","attachments":["cn/img/11.html"],"createdTime":1746180645376,"modifiedTime":1746180645392,"sourceSize":43335,"sourcePath":"CN/img/11.png","exportPath":"cn/img/11.html","showInTree":true,"treeOrder":27,"backlinks":["cn/tcp.html"],"type":"attachment"},"cn/img/12.html":{"title":"12","icon":"","description":"<img src=\"cn/img/12.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/12.png","fullURL":"cn/img/12.html","pathToRoot":"../..","attachments":["cn/img/12.html"],"createdTime":1746180916255,"modifiedTime":1746180916288,"sourceSize":74721,"sourcePath":"CN/img/12.png","exportPath":"cn/img/12.html","showInTree":true,"treeOrder":28,"backlinks":["cn/tcp.html"],"type":"attachment"},"cn/img/csma1.html":{"title":"CSMA1","icon":"","description":"<img src=\"cn/img/csma1.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/csma1.png","fullURL":"cn/img/csma1.html","pathToRoot":"../..","attachments":["cn/img/csma1.html"],"createdTime":1748855510081,"modifiedTime":1748855510084,"sourceSize":148533,"sourcePath":"CN/img/CSMA1.png","exportPath":"cn/img/csma1.html","showInTree":true,"treeOrder":29,"backlinks":["cn/csma.html"],"type":"attachment"},"cn/img/csma2.html":{"title":"CSMA2","icon":"","description":"<img src=\"cn/img/csma2.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/csma2.png","fullURL":"cn/img/csma2.html","pathToRoot":"../..","attachments":["cn/img/csma2.html"],"createdTime":1748855507660,"modifiedTime":1748855507664,"sourceSize":84682,"sourcePath":"CN/img/CSMA2.png","exportPath":"cn/img/csma2.html","showInTree":true,"treeOrder":30,"backlinks":["cn/csma.html"],"type":"attachment"},"cn/img/csma3.html":{"title":"CSMA3","icon":"","description":"<img src=\"cn/img/csma3.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/csma3.png","fullURL":"cn/img/csma3.html","pathToRoot":"../..","attachments":["cn/img/csma3.html"],"createdTime":1748855507670,"modifiedTime":1748855507674,"sourceSize":74308,"sourcePath":"CN/img/CSMA3.png","exportPath":"cn/img/csma3.html","showInTree":true,"treeOrder":31,"backlinks":["cn/csma.html"],"type":"attachment"},"cn/img/csma4.html":{"title":"CSMA4","icon":"","description":"<img src=\"cn/img/csma4.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/csma4.png","fullURL":"cn/img/csma4.html","pathToRoot":"../..","attachments":["cn/img/csma4.html"],"createdTime":1748855507680,"modifiedTime":1748855507695,"sourceSize":84810,"sourcePath":"CN/img/CSMA4.png","exportPath":"cn/img/csma4.html","showInTree":true,"treeOrder":32,"backlinks":["cn/csma.html"],"type":"attachment"},"cn/img/csmacd1.html":{"title":"CSMACD1","icon":"","description":"<img src=\"cn/img/csmacd1.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/csmacd1.png","fullURL":"cn/img/csmacd1.html","pathToRoot":"../..","attachments":["cn/img/csmacd1.html"],"createdTime":1748855507923,"modifiedTime":1748855507926,"sourceSize":129579,"sourcePath":"CN/img/CSMACD1.png","exportPath":"cn/img/csmacd1.html","showInTree":true,"treeOrder":33,"backlinks":["cn/csmacd.html"],"type":"attachment"},"cn/img/csmacd2.html":{"title":"CSMACD2","icon":"","description":"<img src=\"cn/img/csmacd2.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/csmacd2.png","fullURL":"cn/img/csmacd2.html","pathToRoot":"../..","attachments":["cn/img/csmacd2.html"],"createdTime":1748855508046,"modifiedTime":1748855508047,"sourceSize":33293,"sourcePath":"CN/img/CSMACD2.png","exportPath":"cn/img/csmacd2.html","showInTree":true,"treeOrder":34,"backlinks":["cn/csmacd.html"],"type":"attachment"},"cn/img/csmacd3.html":{"title":"CSMACD3","icon":"","description":"<img src=\"cn/img/csmacd3.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/csmacd3.png","fullURL":"cn/img/csmacd3.html","pathToRoot":"../..","attachments":["cn/img/csmacd3.html"],"createdTime":1748855508203,"modifiedTime":1748855508207,"sourceSize":72008,"sourcePath":"CN/img/CSMACD3.png","exportPath":"cn/img/csmacd3.html","showInTree":true,"treeOrder":35,"backlinks":["cn/csmacd.html"],"type":"attachment"},"cn/img/csmacd4.html":{"title":"CSMACD4","icon":"","description":"<img src=\"cn/img/csmacd4.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/csmacd4.png","fullURL":"cn/img/csmacd4.html","pathToRoot":"../..","attachments":["cn/img/csmacd4.html"],"createdTime":1748855508468,"modifiedTime":1748855508471,"sourceSize":52475,"sourcePath":"CN/img/CSMACD4.png","exportPath":"cn/img/csmacd4.html","showInTree":true,"treeOrder":36,"backlinks":["cn/csmacd.html"],"type":"attachment"},"cn/img/layeredexample.html":{"title":"Layeredexample","icon":"","description":"<img src=\"cn/img/layeredexample.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/layeredexample.png","fullURL":"cn/img/layeredexample.html","pathToRoot":"../..","attachments":["cn/img/layeredexample.html"],"createdTime":1748855508479,"modifiedTime":1748855508480,"sourceSize":126275,"sourcePath":"CN/img/Layeredexample.png","exportPath":"cn/img/layeredexample.html","showInTree":true,"treeOrder":37,"backlinks":[],"type":"attachment"},"cn/img/multipleaccess.html":{"title":"MultipleAccess","icon":"","description":"<img src=\"cn/img/multipleaccess.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/multipleaccess.png","fullURL":"cn/img/multipleaccess.html","pathToRoot":"../..","attachments":["cn/img/multipleaccess.html"],"createdTime":1748855508488,"modifiedTime":1748855508490,"sourceSize":86379,"sourcePath":"CN/img/MultipleAccess.png","exportPath":"cn/img/multipleaccess.html","showInTree":true,"treeOrder":38,"backlinks":[],"type":"attachment"},"cn/img/osi1.html":{"title":"OSI1","icon":"","description":"<img src=\"cn/img/osi1.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi1.png","fullURL":"cn/img/osi1.html","pathToRoot":"../..","attachments":["cn/img/osi1.html"],"createdTime":1748855508546,"modifiedTime":1748855508638,"sourceSize":104644,"sourcePath":"CN/img/OSI1.png","exportPath":"cn/img/osi1.html","showInTree":true,"treeOrder":39,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/osi2.html":{"title":"OSI2","icon":"","description":"<img src=\"cn/img/osi2.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi2.png","fullURL":"cn/img/osi2.html","pathToRoot":"../..","attachments":["cn/img/osi2.html"],"createdTime":1748855508647,"modifiedTime":1748855508721,"sourceSize":1009592,"sourcePath":"CN/img/OSI2.png","exportPath":"cn/img/osi2.html","showInTree":true,"treeOrder":40,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/osi3.html":{"title":"OSI3","icon":"","description":"<img src=\"cn/img/osi3.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi3.png","fullURL":"cn/img/osi3.html","pathToRoot":"../..","attachments":["cn/img/osi3.html"],"createdTime":1748855508795,"modifiedTime":1748855508833,"sourceSize":101244,"sourcePath":"CN/img/OSI3.png","exportPath":"cn/img/osi3.html","showInTree":true,"treeOrder":41,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/osi11.html":{"title":"OSI11","icon":"","description":"<img src=\"cn/img/osi11.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi11.png","fullURL":"cn/img/osi11.html","pathToRoot":"../..","attachments":["cn/img/osi11.html"],"createdTime":1748855898203,"modifiedTime":1748855898207,"sourceSize":61318,"sourcePath":"CN/img/OSI11.png","exportPath":"cn/img/osi11.html","showInTree":true,"treeOrder":42,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/osi12.html":{"title":"OSI12","icon":"","description":"<img src=\"cn/img/osi12.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi12.png","fullURL":"cn/img/osi12.html","pathToRoot":"../..","attachments":["cn/img/osi12.html"],"createdTime":1748855898662,"modifiedTime":1748855898771,"sourceSize":55342,"sourcePath":"CN/img/OSI12.png","exportPath":"cn/img/osi12.html","showInTree":true,"treeOrder":43,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/osi13.html":{"title":"OSI13","icon":"","description":"<img src=\"cn/img/osi13.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi13.png","fullURL":"cn/img/osi13.html","pathToRoot":"../..","attachments":["cn/img/osi13.html"],"createdTime":1748855898861,"modifiedTime":1748855898873,"sourceSize":137971,"sourcePath":"CN/img/OSI13.png","exportPath":"cn/img/osi13.html","showInTree":true,"treeOrder":44,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/osi14.html":{"title":"OSI14","icon":"","description":"<img src=\"cn/img/osi14.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi14.png","fullURL":"cn/img/osi14.html","pathToRoot":"../..","attachments":["cn/img/osi14.html"],"createdTime":1748855899386,"modifiedTime":1748855899391,"sourceSize":58460,"sourcePath":"CN/img/OSI14.png","exportPath":"cn/img/osi14.html","showInTree":true,"treeOrder":45,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/osi15.html":{"title":"OSI15","icon":"","description":"<img src=\"cn/img/osi15.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi15.png","fullURL":"cn/img/osi15.html","pathToRoot":"../..","attachments":["cn/img/osi15.html"],"createdTime":1748855899475,"modifiedTime":1748855899515,"sourceSize":119572,"sourcePath":"CN/img/OSI15.png","exportPath":"cn/img/osi15.html","showInTree":true,"treeOrder":46,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/osi16.html":{"title":"OSI16","icon":"","description":"<img src=\"cn/img/osi16.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi16.png","fullURL":"cn/img/osi16.html","pathToRoot":"../..","attachments":["cn/img/osi16.html"],"createdTime":1748855899948,"modifiedTime":1748855900020,"sourceSize":120656,"sourcePath":"CN/img/OSI16.png","exportPath":"cn/img/osi16.html","showInTree":true,"treeOrder":47,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/osi17.html":{"title":"OSI17","icon":"","description":"<img src=\"cn/img/osi17.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi17.png","fullURL":"cn/img/osi17.html","pathToRoot":"../..","attachments":["cn/img/osi17.html"],"createdTime":1748855900147,"modifiedTime":1748855900251,"sourceSize":65748,"sourcePath":"CN/img/OSI17.png","exportPath":"cn/img/osi17.html","showInTree":true,"treeOrder":48,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/osi18.html":{"title":"OSI18","icon":"","description":"<img src=\"cn/img/osi18.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi18.png","fullURL":"cn/img/osi18.html","pathToRoot":"../..","attachments":["cn/img/osi18.html"],"createdTime":1748855900927,"modifiedTime":1748855900928,"sourceSize":71607,"sourcePath":"CN/img/OSI18.png","exportPath":"cn/img/osi18.html","showInTree":true,"treeOrder":49,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/osi19.html":{"title":"OSI19","icon":"","description":"<img src=\"cn/img/osi19.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi19.png","fullURL":"cn/img/osi19.html","pathToRoot":"../..","attachments":["cn/img/osi19.html"],"createdTime":1748855900968,"modifiedTime":1748855900977,"sourceSize":55919,"sourcePath":"CN/img/OSI19.png","exportPath":"cn/img/osi19.html","showInTree":true,"treeOrder":50,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/osi20.html":{"title":"OSI20","icon":"","description":"<img src=\"cn/img/osi20.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi20.png","fullURL":"cn/img/osi20.html","pathToRoot":"../..","attachments":["cn/img/osi20.html"],"createdTime":1748855901073,"modifiedTime":1748855901186,"sourceSize":98000,"sourcePath":"CN/img/OSI20.png","exportPath":"cn/img/osi20.html","showInTree":true,"treeOrder":51,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/osi21.html":{"title":"OSI21","icon":"","description":"<img src=\"cn/img/osi21.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/osi21.png","fullURL":"cn/img/osi21.html","pathToRoot":"../..","attachments":["cn/img/osi21.html"],"createdTime":1748855898081,"modifiedTime":1748855898091,"sourceSize":155560,"sourcePath":"CN/img/OSI21.png","exportPath":"cn/img/osi21.html","showInTree":true,"treeOrder":52,"backlinks":["cn/osi.html"],"type":"attachment"},"cn/img/pasted-image-20250222185456.html":{"title":"Pasted image 20250222185456","icon":"","description":"<img src=\"cn/img/pasted-image-20250222185456.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/img/pasted-image-20250222185456.html","pathToRoot":"../..","attachments":["cn/img/pasted-image-20250222185456.html"],"createdTime":1748855508840,"modifiedTime":1748855508842,"sourceSize":26301,"sourcePath":"CN/img/Pasted image 20250222185456.png","exportPath":"cn/img/pasted-image-20250222185456.html","showInTree":true,"treeOrder":53,"backlinks":[],"type":"attachment"},"cn/img/pasted-image-20250223092151.html":{"title":"Pasted image 20250223092151","icon":"","description":"<img src=\"cn/img/pasted-image-20250223092151.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/img/pasted-image-20250223092151.html","pathToRoot":"../..","attachments":["cn/img/pasted-image-20250223092151.html"],"createdTime":1748855508977,"modifiedTime":1748855509026,"sourceSize":52216,"sourcePath":"CN/img/Pasted image 20250223092151.png","exportPath":"cn/img/pasted-image-20250223092151.html","showInTree":true,"treeOrder":54,"backlinks":[],"type":"attachment"},"cn/img/pasted-image-20250228090351.html":{"title":"Pasted image 20250228090351","icon":"","description":"<img src=\"cn/img/pasted-image-20250228090351.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/img/pasted-image-20250228090351.html","pathToRoot":"../..","attachments":["cn/img/pasted-image-20250228090351.html"],"createdTime":1748855509087,"modifiedTime":1748855509094,"sourceSize":369940,"sourcePath":"CN/img/Pasted image 20250228090351.png","exportPath":"cn/img/pasted-image-20250228090351.html","showInTree":true,"treeOrder":55,"backlinks":[],"type":"attachment"},"cn/img/purealoha1.html":{"title":"PureALOHA1","icon":"","description":"<img src=\"cn/img/purealoha1.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/purealoha1.png","fullURL":"cn/img/purealoha1.html","pathToRoot":"../..","attachments":["cn/img/purealoha1.html"],"createdTime":1748855509657,"modifiedTime":1748855509659,"sourceSize":111650,"sourcePath":"CN/img/PureALOHA1.png","exportPath":"cn/img/purealoha1.html","showInTree":true,"treeOrder":56,"backlinks":["cn/purealoha.html"],"type":"attachment"},"cn/img/purealoha2.html":{"title":"PureALOHA2","icon":"","description":"<img src=\"cn/img/purealoha2.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/purealoha2.png","fullURL":"cn/img/purealoha2.html","pathToRoot":"../..","attachments":["cn/img/purealoha2.html"],"createdTime":1748855509673,"modifiedTime":1748855509675,"sourceSize":119391,"sourcePath":"CN/img/PureALOHA2.png","exportPath":"cn/img/purealoha2.html","showInTree":true,"treeOrder":57,"backlinks":["cn/purealoha.html"],"type":"attachment"},"cn/img/screenshot-2025-02-23-091952.html":{"title":"Screenshot 2025-02-23 091952","icon":"","description":"<img src=\"cn/img/screenshot-2025-02-23-091952.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/img/screenshot-2025-02-23-091952.html","pathToRoot":"../..","attachments":["cn/img/screenshot-2025-02-23-091952.html"],"createdTime":1748855509688,"modifiedTime":1748855509691,"sourceSize":52216,"sourcePath":"CN/img/Screenshot 2025-02-23 091952.png","exportPath":"cn/img/screenshot-2025-02-23-091952.html","showInTree":true,"treeOrder":58,"backlinks":[],"type":"attachment"},"cn/img/screenshot-2025-02-23-092436.html":{"title":"Screenshot 2025-02-23 092436","icon":"","description":"<img src=\"cn/img/screenshot-2025-02-23-092436.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/img/screenshot-2025-02-23-092436.html","pathToRoot":"../..","attachments":["cn/img/screenshot-2025-02-23-092436.html"],"createdTime":1748855509921,"modifiedTime":1748855509924,"sourceSize":327141,"sourcePath":"CN/img/Screenshot 2025-02-23 092436.png","exportPath":"cn/img/screenshot-2025-02-23-092436.html","showInTree":true,"treeOrder":59,"backlinks":[],"type":"attachment"},"cn/img/slottedaloha1.html":{"title":"SlottedALOHA1","icon":"","description":"<img src=\"cn/img/slottedaloha1.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/slottedaloha1.png","fullURL":"cn/img/slottedaloha1.html","pathToRoot":"../..","attachments":["cn/img/slottedaloha1.html"],"createdTime":1748855509936,"modifiedTime":1748855509939,"sourceSize":116724,"sourcePath":"CN/img/SlottedALOHA1.png","exportPath":"cn/img/slottedaloha1.html","showInTree":true,"treeOrder":60,"backlinks":["cn/slottedaloha.html"],"type":"attachment"},"cn/img/slottedaloha2.html":{"title":"SlottedALOHA2","icon":"","description":"<img src=\"cn/img/slottedaloha2.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/slottedaloha2.png","fullURL":"cn/img/slottedaloha2.html","pathToRoot":"../..","attachments":["cn/img/slottedaloha2.html"],"createdTime":1748855509949,"modifiedTime":1748855509951,"sourceSize":51209,"sourcePath":"CN/img/SlottedALOHA2.png","exportPath":"cn/img/slottedaloha2.html","showInTree":true,"treeOrder":61,"backlinks":["cn/slottedaloha.html"],"type":"attachment"},"cn/img/tcpheader.html":{"title":"TCPHeader","icon":"","description":"<img src=\"cn/img/tcpheader.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/tcpheader.png","fullURL":"cn/img/tcpheader.html","pathToRoot":"../..","attachments":["cn/img/tcpheader.html"],"createdTime":1748795978487,"modifiedTime":1748795978488,"sourceSize":68690,"sourcePath":"CN/img/TCPHeader.png","exportPath":"cn/img/tcpheader.html","showInTree":true,"treeOrder":62,"backlinks":["cn/tcp.html"],"type":"attachment"},"cn/img/tcpheaderflags.html":{"title":"TCPHeaderFlags","icon":"","description":"<img src=\"cn/img/tcpheaderflags.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/tcpheaderflags.png","fullURL":"cn/img/tcpheaderflags.html","pathToRoot":"../..","attachments":["cn/img/tcpheaderflags.html"],"createdTime":1748795933313,"modifiedTime":1748795933315,"sourceSize":79402,"sourcePath":"CN/img/TCPHeaderFlags.png","exportPath":"cn/img/tcpheaderflags.html","showInTree":true,"treeOrder":63,"backlinks":["cn/tcp.html"],"type":"attachment"},"cn/img/tcpsegmentflow.html":{"title":"TCPsegmentflow","icon":"","description":"<img src=\"cn/img/tcpsegmentflow.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/tcpsegmentflow.png","fullURL":"cn/img/tcpsegmentflow.html","pathToRoot":"../..","attachments":["cn/img/tcpsegmentflow.html"],"createdTime":1748794548336,"modifiedTime":1748794548338,"sourceSize":104878,"sourcePath":"CN/img/TCPsegmentflow.png","exportPath":"cn/img/tcpsegmentflow.html","showInTree":true,"treeOrder":64,"backlinks":["cn/tcp.html"],"type":"attachment"},"cn/img/topologies.html":{"title":"Topologies","icon":"","description":"<img src=\"cn/img/topologies.jpg\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"cn/img/topologies.jpg","fullURL":"cn/img/topologies.html","pathToRoot":"../..","attachments":["cn/img/topologies.html"],"createdTime":1748855510007,"modifiedTime":1748855510008,"sourceSize":295888,"sourcePath":"CN/img/Topologies.jpg","exportPath":"cn/img/topologies.html","showInTree":true,"treeOrder":65,"backlinks":["cn/topologies.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/emailaddress.html":{"title":"Emailaddress","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/emailaddress.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/emailaddress.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/emailaddress.html"],"createdTime":1748759921408,"modifiedTime":1748759921410,"sourceSize":24764,"sourcePath":"CN/Standard Clint Service Protocols/img/Emailaddress.png","exportPath":"cn/standard-clint-service-protocols/img/emailaddress.html","showInTree":true,"treeOrder":68,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/emailarct.html":{"title":"EmailArct","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/emailarct.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/emailarct.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/emailarct.html"],"createdTime":1748759718923,"modifiedTime":1748759718925,"sourceSize":123780,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailArct.png","exportPath":"cn/standard-clint-service-protocols/img/emailarct.html","showInTree":true,"treeOrder":69,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/emaileg1.html":{"title":"EmailEg1","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/emaileg1.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/emaileg1.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/emaileg1.html"],"createdTime":1748760514501,"modifiedTime":1748760514502,"sourceSize":62550,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailEg1.png","exportPath":"cn/standard-clint-service-protocols/img/emaileg1.html","showInTree":true,"treeOrder":70,"backlinks":[],"type":"attachment"},"cn/standard-clint-service-protocols/img/emaileg2.html":{"title":"EmailEg2","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/emaileg2.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/emaileg2.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/emaileg2.html"],"createdTime":1748760440346,"modifiedTime":1748760440348,"sourceSize":75694,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailEg2.png","exportPath":"cn/standard-clint-service-protocols/img/emaileg2.html","showInTree":true,"treeOrder":71,"backlinks":[],"type":"attachment"},"cn/standard-clint-service-protocols/img/emailegcookie.html":{"title":"EmailEgcookie","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/emailegcookie.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/emailegcookie.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/emailegcookie.html"],"createdTime":1748753849050,"modifiedTime":1748753849052,"sourceSize":76775,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailEgcookie.png","exportPath":"cn/standard-clint-service-protocols/img/emailegcookie.html","showInTree":true,"treeOrder":72,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/emailmessagestruct.html":{"title":"EmailMessageStruct","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/emailmessagestruct.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/emailmessagestruct.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/emailmessagestruct.html"],"createdTime":1748759742602,"modifiedTime":1748759742603,"sourceSize":192065,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailMessageStruct.png","exportPath":"cn/standard-clint-service-protocols/img/emailmessagestruct.html","showInTree":true,"treeOrder":73,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/emailnonpersistent.html":{"title":"EmailNONPersistent","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/emailnonpersistent.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/emailnonpersistent.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/emailnonpersistent.html"],"createdTime":1748749722009,"modifiedTime":1748749722010,"sourceSize":128179,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailNONPersistent.png","exportPath":"cn/standard-clint-service-protocols/img/emailnonpersistent.html","showInTree":true,"treeOrder":74,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/emailpersistent.html":{"title":"EmailPersistent","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/emailpersistent.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/emailpersistent.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/emailpersistent.html"],"createdTime":1748749789259,"modifiedTime":1748749789260,"sourceSize":134418,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailPersistent.png","exportPath":"cn/standard-clint-service-protocols/img/emailpersistent.html","showInTree":true,"treeOrder":75,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/emailprotocol.html":{"title":"EmailProtocol","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/emailprotocol.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/emailprotocol.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/emailprotocol.html"],"createdTime":1748759951899,"modifiedTime":1748759951900,"sourceSize":70711,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailProtocol.png","exportPath":"cn/standard-clint-service-protocols/img/emailprotocol.html","showInTree":true,"treeOrder":76,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/emailuseragent.html":{"title":"EmailUserAgent","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/emailuseragent.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/emailuseragent.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/emailuseragent.html"],"createdTime":1748759810978,"modifiedTime":1748759810979,"sourceSize":13368,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailUserAgent.png","exportPath":"cn/standard-clint-service-protocols/img/emailuseragent.html","showInTree":true,"treeOrder":77,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/emailworkingbrowser.html":{"title":"EmailWorkingBrowser","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/emailworkingbrowser.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/emailworkingbrowser.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/emailworkingbrowser.html"],"createdTime":1748751511082,"modifiedTime":1748751511083,"sourceSize":44893,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailWorkingBrowser.png","exportPath":"cn/standard-clint-service-protocols/img/emailworkingbrowser.html","showInTree":true,"treeOrder":78,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/ftp.html":{"title":"FTP","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/ftp.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/ftp.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/ftp.html"],"createdTime":1748757456109,"modifiedTime":1748757456110,"sourceSize":70634,"sourcePath":"CN/Standard Clint Service Protocols/img/FTP.png","exportPath":"cn/standard-clint-service-protocols/img/ftp.html","showInTree":true,"treeOrder":79,"backlinks":["cn/standard-clint-service-protocols/ftp.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/ftpcmd.html":{"title":"FTPcmd","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/ftpcmd.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/ftpcmd.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/ftpcmd.html"],"createdTime":1748758855550,"modifiedTime":1748758855552,"sourceSize":467299,"sourcePath":"CN/Standard Clint Service Protocols/img/FTPcmd.png","exportPath":"cn/standard-clint-service-protocols/img/ftpcmd.html","showInTree":true,"treeOrder":80,"backlinks":["cn/standard-clint-service-protocols/ftp.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/ftpeg.html":{"title":"FTPEg","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/ftpeg.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/ftpeg.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/ftpeg.html"],"createdTime":1748758808425,"modifiedTime":1748758808426,"sourceSize":87240,"sourcePath":"CN/Standard Clint Service Protocols/img/FTPEg.png","exportPath":"cn/standard-clint-service-protocols/img/ftpeg.html","showInTree":true,"treeOrder":81,"backlinks":["cn/standard-clint-service-protocols/ftp.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/httpeg1.html":{"title":"HTTPEg1","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/httpeg1.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/httpeg1.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/httpeg1.html"],"createdTime":1748753400465,"modifiedTime":1748753400466,"sourceSize":91198,"sourcePath":"CN/Standard Clint Service Protocols/img/HTTPEg1.png","exportPath":"cn/standard-clint-service-protocols/img/httpeg1.html","showInTree":true,"treeOrder":82,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/httpeg2.html":{"title":"HTTPEg2","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/httpeg2.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/httpeg2.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/httpeg2.html"],"createdTime":1748753181968,"modifiedTime":1748753181969,"sourceSize":85121,"sourcePath":"CN/Standard Clint Service Protocols/img/HTTPEg2.png","exportPath":"cn/standard-clint-service-protocols/img/httpeg2.html","showInTree":true,"treeOrder":83,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/httpproxy.html":{"title":"HTTPProxy","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/httpproxy.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/httpproxy.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/httpproxy.html"],"createdTime":1748753978003,"modifiedTime":1748753978004,"sourceSize":58813,"sourcePath":"CN/Standard Clint Service Protocols/img/HTTPProxy.png","exportPath":"cn/standard-clint-service-protocols/img/httpproxy.html","showInTree":true,"treeOrder":84,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/httpstruct.html":{"title":"HTTPstruct","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/httpstruct.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/httpstruct.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/httpstruct.html"],"createdTime":1748752134892,"modifiedTime":1748752134894,"sourceSize":108080,"sourcePath":"CN/Standard Clint Service Protocols/img/HTTPstruct.png","exportPath":"cn/standard-clint-service-protocols/img/httpstruct.html","showInTree":true,"treeOrder":85,"backlinks":["cn/standard-clint-service-protocols/httpstructureexp.html","cn/standard-clint-service-protocols/www-http.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/mime5.html":{"title":"MIME5","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/mime5.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/mime5.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/mime5.html"],"createdTime":1748760540595,"modifiedTime":1748760540598,"sourceSize":39081,"sourcePath":"CN/Standard Clint Service Protocols/img/MIME5.png","exportPath":"cn/standard-clint-service-protocols/img/mime5.html","showInTree":true,"treeOrder":86,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/mims1.html":{"title":"MIMS1","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/mims1.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/mims1.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/mims1.html"],"createdTime":1748761097753,"modifiedTime":1748761097753,"sourceSize":84030,"sourcePath":"CN/Standard Clint Service Protocols/img/MIMS1.png","exportPath":"cn/standard-clint-service-protocols/img/mims1.html","showInTree":true,"treeOrder":87,"backlinks":[],"type":"attachment"},"cn/standard-clint-service-protocols/img/mims2.html":{"title":"MIMS2","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/mims2.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/mims2.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/mims2.html"],"createdTime":1748761093015,"modifiedTime":1748761093016,"sourceSize":335759,"sourcePath":"CN/Standard Clint Service Protocols/img/MIMS2.png","exportPath":"cn/standard-clint-service-protocols/img/mims2.html","showInTree":true,"treeOrder":88,"backlinks":[],"type":"attachment"},"cn/standard-clint-service-protocols/img/mims3.html":{"title":"MIMS3","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/mims3.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/mims3.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/mims3.html"],"createdTime":1748761087448,"modifiedTime":1748761087449,"sourceSize":108165,"sourcePath":"CN/Standard Clint Service Protocols/img/MIMS3.png","exportPath":"cn/standard-clint-service-protocols/img/mims3.html","showInTree":true,"treeOrder":89,"backlinks":[],"type":"attachment"},"cn/standard-clint-service-protocols/img/mims4.html":{"title":"MIMS4","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/mims4.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/mims4.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/mims4.html"],"createdTime":1748761081203,"modifiedTime":1748761081203,"sourceSize":46212,"sourcePath":"CN/Standard Clint Service Protocols/img/MIMS4.png","exportPath":"cn/standard-clint-service-protocols/img/mims4.html","showInTree":true,"treeOrder":90,"backlinks":[],"type":"attachment"},"cn/standard-clint-service-protocols/img/telnet.html":{"title":"Telnet","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/telnet.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/telnet.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/telnet.html"],"createdTime":1748765274948,"modifiedTime":1748765274950,"sourceSize":88985,"sourcePath":"CN/Standard Clint Service Protocols/img/Telnet.png","exportPath":"cn/standard-clint-service-protocols/img/telnet.html","showInTree":true,"treeOrder":91,"backlinks":["cn/standard-clint-service-protocols/telnet.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/telnet_nvt.html":{"title":"Telnet_NVT","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/telnet_nvt.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/telnet_nvt.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/telnet_nvt.html"],"createdTime":1748765335427,"modifiedTime":1748765335431,"sourceSize":70573,"sourcePath":"CN/Standard Clint Service Protocols/img/Telnet_NVT.png","exportPath":"cn/standard-clint-service-protocols/img/telnet_nvt.html","showInTree":true,"treeOrder":92,"backlinks":["cn/standard-clint-service-protocols/telnet.html"],"type":"attachment"},"cn/standard-clint-service-protocols/img/webemail.html":{"title":"WebEmail","icon":"","description":"<img src=\"cn/standard-clint-service-protocols/img/webemail.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/img/webemail.html","pathToRoot":"../../..","attachments":["cn/standard-clint-service-protocols/img/webemail.html"],"createdTime":1748761164216,"modifiedTime":1748761164217,"sourceSize":162793,"sourcePath":"CN/Standard Clint Service Protocols/img/WebEmail.png","exportPath":"cn/standard-clint-service-protocols/img/webemail.html","showInTree":true,"treeOrder":93,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment"},"cn/standard-clint-service-protocols/email.html":{"title":"Email","icon":"","description":"<img alt=\"EmailArct.png\" src=\"cn/standard-clint-service-protocols/img/emailarct.png\" target=\"_self\">Email systems use an intermediary approach with specialized servers rather than direct client-to-server communication. The typical email architecture involves three main components:\nUser Agent (UA): Software that composes, reads, replies to, and forwards messages while handling mailboxes.\nMessage Transfer Agent (MTA): Responsible for transferring messages between mail servers.\nMessage Access Agent (MAA): Handles retrieval of messages from mail servers.<br>\n<img alt=\"EmailUserAgent.png\" src=\"cn/standard-clint-service-protocols/img/emailuseragent.png\" target=\"_self\">\nThe email system periodically checks the mailboxes.\nIf a user has mail, it inform the user with a notice.\nIf the user is ready to read the mail, a list displayed in which each line contains a summary of the information about a particular message in the mailbox.\nA User Agent is responsible for composing the email message to be sent out. Most user agents provide a template on the screen to be filled in by the user. Some even have a built-in editor that can do spell checking, grammar checking, and other tasks one expects from a sophisticated word processor. A user can, of course, use his or her favorite text editor or word processor to create the message and import it, or cut and paste, into the user agent.The second duty of the user agent is to read the incoming messages. When a user invokes a user agent, it first checks the mail in the incoming mailbox. Most user agents show a one-line summary of each retrieved mail which contains the following fields:\nA number field,\nA flag field that shows if the mail is new, already read but not replied to, read and replied, and so on.\nThe size of the message,\nThe sender,\nThe subject field if the subject line in the message is not empty.\nAfter reading a message, a user can use the user agent to reply to a message. Normally, a user agent allows the user to reply to the original sender or to reply to all recipients of the message. The reply message normally contains the original message (for quick reference) and the new message.Forwarding means to send the message to a third party. A user agent allows the receiver to forward the message, with or without extra comments, to a third party. Replying is defined as sending a message to the sender or recipients of the copy.A user agent creates two mailboxes:\nInbox\nOutbox\nEach box is a file with a special format that can be handled by the user agent. The inbox keeps all the received emails until they are deleted by the user. The outbox keeps all the sent emails until the user deletes them.\nCommand-driven\nGUI based\nCommand-Driven User Agents:Command-driven user agents belong to the early days of electronic mail. They are still present as the underlying user agents in servers. A command-driven user agent normally accepts a one-character command from the keyboard to perform its task. For example, a user can type the character \"r\" at the command prompt to reply to the sender of the message, or \"R\" to reply to the sender and all recipients.Some examples of command-driven user agents are Mail, Pine, and Elm. GUI-Based User Agents:Modern user agents are GUI-based. They contain graphical user interface (GUI) components that allow the user to interact with the software using both the keyboard and the mouse. They have graphical components such as icons, menu bars, and windows that make services easily accessible.Some examples of GUI-based user agents are Eudora, Microsoft’s Outlook, and Netscape.<br><img alt=\"EmailMessageStruct.png\" src=\"cn/standard-clint-service-protocols/img/emailmessagestruct.png\" target=\"_self\">An email consists of two main parts:Envelope: Contains delivery information including sender and recipient addresses, similar to postal mail envelopes.Message: Contains the header and body.\nHeader includes fields like From, To, Date, and Subject.\nBody contains the actual message content.\n<br><img alt=\"EmailProtocol.png\" src=\"cn/standard-clint-service-protocols/img/emailprotocol.png\" target=\"_self\">SMTP handles the transfer of email between servers and uses port 25. Key SMTP commands include:Common SMTP responsesPOP3 is used for retrieving email from mail servers. It operates in two modes:\nDelete mode: Mail is removed from server after retrieval (used on permanent computers).\nKeep mode: Mail remains on server after retrieval (used when accessing from temporary locations).\nPOP3 uses TCP port 110 and requires username/password authentication.IMAP4 is more advanced than POP3, offering additional features:\nCheck email headers before downloading full messages.\nSearch email content before downloading.\nPartial message downloads (useful for limited bandwidth).\nCreate, delete, and rename mailboxes on the server.\nOrganize emails in hierarchical folder structures.\n<br><img alt=\"MIME5.png\" src=\"cn/standard-clint-service-protocols/img/mime5.png\" target=\"_self\">\nPurpose: Works with SMTP to support transmission of: Non-ASCII text\nBinary data\nMultimedia (images, audio, video) Function: Converts complex data to a 7-bit ASCII-compatible format for transmission.\nNot a mail protocol itself; it extends SMTP.\nAt the receiver's end, it converts data back to its original form. MIME-Version: Specifies MIME version, e.g., MIME-Version: 1.1. Content-Type: Describes the type of data.\nFormat: Content-Type: type/subtype; parameters\nExamples: text/plain\nimage/jpeg\napplication/postscript Content-Transfer-Encoding: Specifies the encoding used to convert the data into 7-bit ASCII: 7bit – default ASCII\n8bit – non-ASCII, limited use\nbinary – unrestricted but risky over SMTP\nbase64 – best for binary files\nquoted-printable – best for mostly ASCII with some special characters Content-Id: Provides a unique identifier, useful in multipart messages. Content-Description: Describes the content (e.g., image, audio). <br><img alt=\"WebEmail.png\" src=\"cn/standard-clint-service-protocols/img/webemail.png\" target=\"_self\">Modern email systems often use HTTP instead of traditional protocols. In web-based email:\nEmail transfer from browser to mail server uses HTTP.\nTransfer between mail servers still uses SMTP.\nMessage retrieval uses HTTP instead of POP3/IMAP4.\nUsers access email through web browsers using login forms.\nProcess flow:\nUser sends email via HTTP to web server.\nWeb server transfers to mail server via SMTP.\nReceiving server delivers via SMTP to destination mail server.\nRecipient accesses email through HTTP web interface.\n<br><img alt=\"Emailaddress.png\" src=\"cn/standard-clint-service-protocols/img/emailaddress.png\" target=\"_self\">Email addresses follow the format: localpart@domain\nLocal part: Identifies the specific mailbox.\nDomain: Identifies the mail server location.\nTraditional email protocols have security limitations:\nPasswords sent in plaintext.\nData transferred without encryption.\nVulnerable to interception.\nSecure alternatives include:\nSSL-FTP for secure file transfer.\nS/MIME and PGP for email encryption.\nSSH for secure remote access.\nModern email clients provide comprehensive functionality:\nComposing: Creating new messages with formatting options.\nReading: Displaying received messages.\nReplying: Responding to received messages.\nForwarding: Sending messages to other recipients.\nMailbox management: Organizing messages in folders.\nEmail remains one of the most widely used internet applications, with services like Hotmail and Yahoo providing web-based access to millions of users worldwide. To illustrate the three mail transfer phases, we will review the steps described above, using the information presented in Figure 26.16. The figure separates messages related to the envelope, header, and body within the data transfer section. It's important to note that the steps in this figure are repeated twice in each email transfer: once from the email sender to the local mail server and once from the local mail server to the remote mail server. The local mail server, after receiving the entire email message, may spool it and send it to the remote mail server at a later time.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/1dd57ced-7e80-4995-94ab-6fa8d3270a0a/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h20m10s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/1dd57ced-7e80-4995-94ab-6fa8d3270a0a/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h20m10s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/cd5b0590-942e-4971-8cec-acc14f611a53/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h18m45s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/cd5b0590-942e-4971-8cec-acc14f611a53/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h18m45s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/0e49fb55-820d-4d43-b0cb-a06f6ec8a9bb/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h18m05s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/0e49fb55-820d-4d43-b0cb-a06f6ec8a9bb/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h18m05s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/e6d24959-2b44-4d20-a305-81ec5474c9d7/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h17m35s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/e6d24959-2b44-4d20-a305-81ec5474c9d7/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h17m35s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/5f528bbc-bde2-4a5b-9bc8-838e4a131523/UPLOAD-ch26-UPDATED.pdf\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/5f528bbc-bde2-4a5b-9bc8-838e4a131523/UPLOAD-ch26-UPDATED.pdf</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=APVCgkqWcQ4\" target=\"_self\">https://www.youtube.com/watch?v=APVCgkqWcQ4</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Email Architecture","level":2,"id":"Email_Architecture_0"},{"heading":"User Agent Functions","level":3,"id":"User_Agent_Functions_0"},{"heading":"Composing Messages:","level":4,"id":"Composing_Messages_0"},{"heading":"Reading Messages:","level":4,"id":"Reading_Messages_0"},{"heading":"Replying to Messages:","level":4,"id":"Replying_to_Messages_0"},{"heading":"Forwarding Messages:","level":4,"id":"Forwarding_Messages_0"},{"heading":"Handling Mailboxes:","level":4,"id":"Handling_Mailboxes_0"},{"heading":"User Agent Types","level":3,"id":"User_Agent_Types_0"},{"heading":"Email Message Structure","level":3,"id":"Email_Message_Structure_0"},{"heading":"Email Protocols","level":3,"id":"Email_Protocols_0"},{"heading":"SMTP (Simple Mail Transfer Protocol)","level":4,"id":"SMTP_(Simple_Mail_Transfer_Protocol)_0"},{"heading":"POP3 (Post Office Protocol version 3)","level":4,"id":"POP3_(Post_Office_Protocol_version_3)_0"},{"heading":"IMAP4 (Internet Mail Access Protocol version 4)","level":4,"id":"IMAP4_(Internet_Mail_Access_Protocol_version_4)_0"},{"heading":"MIME (Multipurpose Internet Mail Extensions)","level":4,"id":"MIME_(Multipurpose_Internet_Mail_Extensions)_0"},{"heading":"MIME (Multipurpose Internet Mail Extensions):","level":5,"id":"MIME_(Multipurpose_Internet_Mail_Extensions)_1"},{"heading":"MIME Headers (Five Key Fields):","level":5,"id":"MIME_Headers_(Five_Key_Fields)_0"},{"heading":"Common MIME Types and Subtypes (Table 26.1 Overview):","level":5,"id":"Common_MIME_Types_and_Subtypes_(Table_26.1_Overview)_0"},{"heading":"Content-Transfer-Encoding Types (Table 26.2 Overview):","level":5,"id":"Content-Transfer-Encoding_Types_(Table_26.2_Overview)_0"},{"heading":"Web-Based Email","level":3,"id":"Web-Based_Email_0"},{"heading":"Email Addressing","level":3,"id":"Email_Addressing_0"},{"heading":"Security Considerations","level":3,"id":"Security_Considerations_0"},{"heading":"Email Client Features","level":3,"id":"Email_Client_Features_0"},{"heading":"Example","level":3,"id":"Example_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/email.html","pathToRoot":"../..","attachments":["cn/standard-clint-service-protocols/img/emailarct.html","cn/standard-clint-service-protocols/img/emailuseragent.html","cn/standard-clint-service-protocols/img/emailmessagestruct.html","cn/standard-clint-service-protocols/img/emailprotocol.html","cn/standard-clint-service-protocols/img/mime5.html","cn/standard-clint-service-protocols/img/mims4.html","cn/standard-clint-service-protocols/img/mims1.html","cn/standard-clint-service-protocols/img/mims3.html","cn/standard-clint-service-protocols/img/mims2.html","cn/standard-clint-service-protocols/img/webemail.html","cn/standard-clint-service-protocols/img/emailaddress.html","cn/standard-clint-service-protocols/img/emaileg1.html","cn/standard-clint-service-protocols/img/emaileg2.html"],"createdTime":1748761399569,"modifiedTime":1748770205220,"sourceSize":16125,"sourcePath":"CN/Standard Clint Service Protocols/Email.md","exportPath":"cn/standard-clint-service-protocols/email.html","showInTree":true,"treeOrder":94,"backlinks":[],"type":"markdown"},"cn/standard-clint-service-protocols/ftp.html":{"title":"FTP","icon":"","description":"<a class=\"internal-link\" data-href=\"UDP.md\" href=\"cn/udp.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"TCP.md\" href=\"cn/tcp.html\" target=\"_self\" rel=\"noopener nofollow\"></a>## File Transfer Protocol (FTP)<br>\n<img alt=\"FTP.png\" src=\"cn/standard-clint-service-protocols/img/ftp.png\" target=\"_self\">File Transfer Protocol (FTP) is a standard network protocol designed for transferring files between computers over TCP/IP connections. As part of the TCP/IP suite, FTP operates at the application layer and enables users to upload, download, delete, rename, move, and copy files on a server.FTP operates using a client-server architecture with two distinct communication channels:Control Connection (Port 21): Used to transmit commands and responses, following a simple command-response communication. This connection remains open during the entire FTP session.Data Connection (Port 20): Handles the actual file transfer and uses more complex rules due to the variety of data being transferred. This connection opens and closes for each file transfer activity.\nThe client, not the server, issues a passive open using an ephemeral port.\nUsing the PORT command the client sends thisport number to the server.\nThe server receives the port number and issues an active open using the well-known port 20 and the received ephemeral port number.\n<br><img alt=\"FTPEg.png\" src=\"cn/standard-clint-service-protocols/img/ftpeg.png\" target=\"_self\">Figure 26.11 shows an example of using FTP for retrieving a file. The figure shows only one file to be transferred. The control connection remains open all the time, but the data connection is opened and closed repeatedly. We assume the file is transferred in six sections. After all records have been transferred, the server control process announces that the file transfer is done. Since the client control process has no file to retrieve, it issues the QUIT command, which causes the service connection to be closed.<br><img alt=\"FTPcmd.png\" src=\"cn/standard-clint-service-protocols/img/ftpcmd.png\" target=\"_self\">The following shows an actual FTP session that lists the directories.Two Connection Architecture: FTP differs from other protocols by establishing two separate connections, which achieves greater efficiency in handling both control commands and data transfer.System Compatibility: FTP overcomes issues arising from different file naming conventions, text and data representations, and directory structures.Transfer Modes: FTP sessions work in active or passive modes:\nActive mode: Server creates a data connection back to the client.\nPassive mode: Client initiates all connections, working well across firewalls.\nFTP supports numerous commands for file operations:FTP has significant security vulnerabilities because it was designed without modern security considerations.Plaintext Transmission: Both passwords and data are transmitted in plaintext, making them vulnerable to interception.Common Attack Vectors:\nPacket capture/sniffing: All transmissions are readable by anyone on the network.\nBrute force attacks: Systematic password guessing.\nPort stealing: Hackers can access through guessed ports.\nAnonymous vulnerability: Some servers allow access without credentials.\nTo address security issues, several solutions are available:SSL-FTP: Adding a Secure Socket Layer (SSL) between the FTP and TCP layers creates SSL-FTP, enhancing security by encrypting both commands and data.Other Secure Alternatives:\nSFTP (SSH File Transfer Protocol): Uses SSH for secure file transfer.\nFTPS: FTP over SSL/TLS.\nHTTPS: HTTP with SSL/TLS encryption.\nCloud storage services: Dropbox, Google Cloud Storage, Microsoft OneDrive.\nTo mitigate FTP security risks:\nAvoid standard FTP for sensitive data.\nUse secure alternatives like FTPS or SFTP.\nKeep protocols updated.\nUse correct security configurations.\nInstall SSL certificates.\nImplement two-factor authentication.\nWhile FTP is still used for file transfers behind the scenes in applications like banking services and web browsers, organizations handling sensitive or federally regulated data should avoid standard FTP due to its inherent security weaknesses. The protocol remains popular for large file transfers but should be replaced with secure alternatives in security-conscious environments.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/7c9a28af-4322-40e6-8e42-a339afc385d2/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h27m14s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/7c9a28af-4322-40e6-8e42-a339afc385d2/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h27m14s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/2a514162-4aa9-4ebe-b475-35be0d62a922/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h25m50s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/2a514162-4aa9-4ebe-b475-35be0d62a922/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h25m50s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/57017c05-e458-4454-819c-963c7ff257e7/UPLOAD-ch26-UPDATED.pdf\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/57017c05-e458-4454-819c-963c7ff257e7/UPLOAD-ch26-UPDATED.pdf</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=APVCgkqWcQ4\" target=\"_self\">https://www.youtube.com/watch?v=APVCgkqWcQ4</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ieeexplore.ieee.org/document/9921099/\" target=\"_self\">https://ieeexplore.ieee.org/document/9921099/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.techtarget.com/searchnetworking/definition/File-Transfer-Protocol-FTP\" target=\"_self\">https://www.techtarget.com/searchnetworking/definition/File-Transfer-Protocol-FTP</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.cerberusftp.com/blog/how-secure-is-ftp-how-you-can-mitigate-the-risks-of-using-file-transfer-protocol/\" target=\"_self\">https://www.cerberusftp.com/blog/how-secure-is-ftp-how-you-can-mitigate-the-risks-of-using-file-transfer-protocol/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.solarwinds.com/serv-u/tutorials/ftp-commands-for-linux-unix\" target=\"_self\">https://www.solarwinds.com/serv-u/tutorials/ftp-commands-for-linux-unix</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.integrate.io/blog/5-tips-on-avoiding-ftp-security-issues/\" target=\"_self\">https://www.integrate.io/blog/5-tips-on-avoiding-ftp-security-issues/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dl.acm.org/doi/10.1145/197177.197182\" target=\"_self\">https://dl.acm.org/doi/10.1145/197177.197182</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.semanticscholar.org/paper/9c716b7b0c69477651eef5839b81f06bbc200f17\" target=\"_self\">https://www.semanticscholar.org/paper/9c716b7b0c69477651eef5839b81f06bbc200f17</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ieeexplore.ieee.org/document/6868868/\" target=\"_self\">https://ieeexplore.ieee.org/document/6868868/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.semanticscholar.org/paper/1aed7e0d450134ef83fb932401c09daeb12c7ae7\" target=\"_self\">https://www.semanticscholar.org/paper/1aed7e0d450134ef83fb932401c09daeb12c7ae7</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"http://link.springer.com/10.1007/978-3-642-22185-9_11\" target=\"_self\">http://link.springer.com/10.1007/978-3-642-22185-9_11</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.semanticscholar.org/paper/d5cc64bd33521f2bcd018576061ce5642dc17963\" target=\"_self\">https://www.semanticscholar.org/paper/d5cc64bd33521f2bcd018576061ce5642dc17963</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.semanticscholar.org/paper/0fb68996db0da2413b16b3ccce218d2984cf116b\" target=\"_self\">https://www.semanticscholar.org/paper/0fb68996db0da2413b16b3ccce218d2984cf116b</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.fortinet.com/resources/cyberglossary/file-transfer-protocol-ftp-meaning\" target=\"_self\">https://www.fortinet.com/resources/cyberglossary/file-transfer-protocol-ftp-meaning</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://httpd.apache.org/mod_ftp/ftp/ftp_intro.html\" target=\"_self\">https://httpd.apache.org/mod_ftp/ftp/ftp_intro.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.hostinger.com/in/tutorials/what-is-ftp\" target=\"_self\">https://www.hostinger.com/in/tutorials/what-is-ftp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://builtin.com/software-engineering-perspectives/file-transfer-protocol\" target=\"_self\">https://builtin.com/software-engineering-perspectives/file-transfer-protocol</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"http://www.ijert.org/view-pdf/13745/study-and-analysis-of-aodv-and-dsdv-routing-protocols-over-zigbee-network-for-different-topologies-under-ftp-traffic-pattern\" target=\"_self\">http://www.ijert.org/view-pdf/13745/study-and-analysis-of-aodv-and-dsdv-routing-protocols-over-zigbee-network-for-different-topologies-under-ftp-traffic-pattern</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/25.1.231\" target=\"_self\">https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/25.1.231</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://en.wikipedia.org/wiki/File_Transfer_Protocol\" target=\"_self\">https://en.wikipedia.org/wiki/File_Transfer_Protocol</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/php/php_ref_ftp.asp\" target=\"_self\">https://www.w3schools.com/php/php_ref_ftp.asp</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"How FTP Works","level":3,"id":"How_FTP_Works_0"},{"heading":"Creation of a Data Connection","level":4,"id":"Creation_of_a_Data_Connection_0"},{"heading":"Key Features","level":3,"id":"Key_Features_0"},{"heading":"FTP Commands","level":3,"id":"FTP_Commands_0"},{"heading":"Responses In FTP","level":3,"id":"Responses_In_FTP_0"},{"heading":"Security Concerns","level":3,"id":"Security_Concerns_0"},{"heading":"Secure Alternatives","level":3,"id":"Secure_Alternatives_0"},{"heading":"Best Practices","level":3,"id":"Best_Practices_0"},{"heading":"Current Usage","level":3,"id":"Current_Usage_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":["cn/udp.html","cn/tcp.html"],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/ftp.html","pathToRoot":"../..","attachments":["cn/standard-clint-service-protocols/img/ftp.html","cn/standard-clint-service-protocols/img/ftpeg.html","cn/standard-clint-service-protocols/img/ftpcmd.html"],"createdTime":1748761299809,"modifiedTime":1749740409438,"sourceSize":11827,"sourcePath":"CN/Standard Clint Service Protocols/FTP.md","exportPath":"cn/standard-clint-service-protocols/ftp.html","showInTree":true,"treeOrder":95,"backlinks":[],"type":"markdown"},"cn/standard-clint-service-protocols/httpstructureexp.html":{"title":"HTTPstructureexp","icon":"","description":"<img alt=\"HTTPstruct.png\" src=\"cn/standard-clint-service-protocols/img/httpstruct.png\" target=\"_self\">This image illustrates the detailed structure of HTTP request and response messages, showing the exact format and components that make up these fundamental web communication protocols.The diagram demonstrates that both HTTP request and response messages follow a similar four-part structure, with specific formatting requirements for each component.Request Line: Contains three essential elements:\nMethod: The HTTP method (GET, POST, PUT, etc.)\nURL: The target resource location\nVersion: The HTTP protocol version being used\nHeader Lines: Multiple header fields that provide additional information about the request:\nEach header follows the format: Header name: Value\nHeaders are separated by spaces and terminated with carriage return and line feed.\nBlank Line: A mandatory empty line that separates headers from the message body.Body: Optional section containing a variable number of lines, present only in certain message types like POST requests.Status Line: The opening line containing:\nVersion: HTTP protocol version\nStatus Code: Numerical code indicating request outcome (200, 404, 500, etc.)\nPhrase: Human-readable description of the status\nHeader Lines: Similar to request headers, providing metadata about the response:\nFollow the same Header name: Value format\nInclude information like content type, length, server details\nBlank Line: Required separator between headers and bodyBody: Contains the actual response content when applicableThe legend shows critical formatting elements:\nsp: Space characters for proper field separation\ncr: Carriage Return (ASCII 13)\nlf: Line Feed (ASCII 10)\nThese control characters ensure proper message parsing and are essential for HTTP protocol compliance. The combination of cr+lf creates the standard line ending sequence used in HTTP messages.The diagram emphasizes that both message types share the same fundamental structure, making HTTP parsing consistent regardless of whether handling requests or responses. The color coding helps distinguish between different message components - yellow for header names, gray for formatting elements, and blue for variable-length body content.This standardized format enables reliable communication between web clients and servers, forming the foundation of all web interactions.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"HTTP Message Structure Overview","level":2,"id":"HTTP_Message_Structure_Overview_0"},{"heading":"Request Message Structure","level":2,"id":"Request_Message_Structure_0"},{"heading":"Response Message Structure","level":2,"id":"Response_Message_Structure_0"},{"heading":"Formatting Requirements","level":2,"id":"Formatting_Requirements_0"},{"heading":"Key Design Features","level":2,"id":"Key_Design_Features_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/httpstructureexp.html","pathToRoot":"../..","attachments":["cn/standard-clint-service-protocols/img/httpstruct.html"],"createdTime":1748752245385,"modifiedTime":1748752465382,"sourceSize":2561,"sourcePath":"CN/Standard Clint Service Protocols/HTTPstructureexp.md","exportPath":"cn/standard-clint-service-protocols/httpstructureexp.html","showInTree":true,"treeOrder":96,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"markdown"},"cn/standard-clint-service-protocols/telnet.html":{"title":"Telnet","icon":"","description":"Telnet is one of the earliest and most fundamental protocols used for remote communication over networks. Let me provide you with a comprehensive overview of this important networking protocol.Telnet (Terminal Network) is a client-server application protocol that provides access to virtual terminals of remote systems. It was developed in 1969, making it even older than the modern Internet, and was standardized as one of the first Internet standards by the Internet Engineering Task Force (IETF).Key Definition: Telnet enables bidirectional, text-based communication between two machines, allowing a user to remotely access and control a computer as if they were sitting directly at its terminal.<img alt=\"Telnet.png\" src=\"cn/standard-clint-service-protocols/img/telnet.png\" target=\"_self\">Telnet operates on a client-server model:\nClient: Initiates the connection (your local computer)\nServer: Accepts and responds to client requests (remote computer)\nProtocol: Uses TCP for reliable communication\nDefault Port: Port 23 (though port 2323 is also used)\n<br><img alt=\"Telnet_NVT.png\" src=\"cn/standard-clint-service-protocols/img/telnet_nvt.png\" target=\"_self\">\nOne of Telnet's key innovations is the Network Virtual Terminal (NVT) concept.Local Computer → NVT Format → Network → NVT Format → Remote ComputerThe NVT acts as a translator, converting data between the client and server's respective formats. This allows for compatibility between different systems.Telnet supports several operating modes, including:\nNetwork mode: Data is transmitted verbatim as received.\nTransparent mode: Used to connect to programs that don't use Telnet's control characters.\nAlternate mode: Offers features like full-screen operation and character echoing.\nTelnet supports several commands to manage connection settings and operations. Common commands include:Data is transmitted between the client and server using ASCII characters. Telnet includes special control characters for functions like:\nBackspace: Deletes the preceding character.\nCarriage Return: Moves the cursor to the beginning of the line.\nLine Feed: Moves the cursor to the next line.\nTelnet provides basic error handling capabilities, allowing for the detection and reporting of connection problems. Error codes can be used to diagnose and resolve issues.Telnet has been historically used for:\nRemote Administration: Accessing and managing servers from a different location.\nSoftware Testing: Remotely testing software applications.\nSimple Network Access: Allowing users to connect to network resources.\nTelnet transmits data in plain text, making it vulnerable to interception and eavesdropping. It is highly recommended to use more secure alternatives like SSH (Secure Shell) whenever possible.Due to the security concerns associated with Telnet, it has largely been superseded by more secure alternatives such as:\nSSH (Secure Shell): Provides encrypted communication channels.\nRDP (Remote Desktop Protocol): Enables graphical remote access.\nVPN (Virtual Private Network): Creates a secure connection over a public network.\nWhile Telnet remains a historically significant protocol, its inherent security vulnerabilities make it unsuitable for most modern applications. Utilizing more secure alternatives is crucial for protecting sensitive data and maintaining network integrity.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Understanding Telnet (Terminal Network Protocol)","level":1,"id":"Understanding_Telnet_(Terminal_Network_Protocol)_0"},{"heading":"What is Telnet?","level":2,"id":"What_is_Telnet?_0"},{"heading":"How Telnet Works","level":2,"id":"How_Telnet_Works_0"},{"heading":"Basic Architecture","level":3,"id":"Basic_Architecture_0"},{"heading":"Network Virtual Terminal (NVT)","level":3,"id":"Network_Virtual_Terminal_(NVT)_0"},{"heading":"Operating Modes","level":3,"id":"Operating_Modes_0"},{"heading":"Telnet Commands","level":3,"id":"Telnet_Commands_0"},{"heading":"Data Transmission","level":3,"id":"Data_Transmission_0"},{"heading":"Error Handling","level":3,"id":"Error_Handling_0"},{"heading":"Example Usage Scenarios","level":2,"id":"Example_Usage_Scenarios_0"},{"heading":"Security Considerations","level":2,"id":"Security_Considerations_0"},{"heading":"Modern Alternatives","level":2,"id":"Modern_Alternatives_0"},{"heading":"Conclusion","level":2,"id":"Conclusion_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/telnet.html","pathToRoot":"../..","attachments":["cn/standard-clint-service-protocols/img/telnet.html","cn/standard-clint-service-protocols/img/telnet_nvt.html"],"createdTime":1748765143016,"modifiedTime":1748765474273,"sourceSize":4088,"sourcePath":"CN/Standard Clint Service Protocols/Telnet.md","exportPath":"cn/standard-clint-service-protocols/telnet.html","showInTree":true,"treeOrder":97,"backlinks":[],"type":"markdown"},"cn/standard-clint-service-protocols/www-http.html":{"title":"WWW HTTP","icon":"","description":"<a class=\"internal-link\" data-href=\"HTTPstructureexp.md\" href=\"cn/standard-clint-service-protocols/httpstructureexp.html\" target=\"_self\" rel=\"noopener nofollow\"></a>## World Wide Web (WWW)The World Wide Web was introduced by Tim Berners-Lee in 1989 at CERN as a global information system linked through web pages. Initially developed for managing scientific resources, it has evolved into a distributed client-server system where users access information through web browsers.The WWW follows a distributed client-server model where each site holds one or more documents (web pages) that can contain links to other pages within the same site or at different sites. The architecture consists of:\nClient (Browser): Uses a browser program to fetch web documents.\nServer: Stores web pages and responds to client requests.\nWeb Pages: Documents that may contain links to other resources.\n<br><img alt=\"EmailWorkingBrowser.png\" src=\"cn/standard-clint-service-protocols/img/emailworkingbrowser.png\" target=\"_self\">\nController: Receives user input (keyboard/mouse) and manages access to documents.\nClient Protocol: Facilitates communication with the server (HTTP, FTP, etc.).\nInterpreters: Render and display web pages on screen (HTML, Java, JavaScript). Stores web pages and responds to client requests.\nUses caching and multi-threading to handle multiple requests simultaneously.\nRelies on Uniform Resource Locators (URLs) for addressing pages.\nA URL is a standard for specifying information on the Internet, consisting of four elements:Example URL: http://www.mhhe.com/compsci/forouzan/HTTP is the foundational protocol for accessing information on the World Wide Web, operating as a connection-oriented and reliable protocol over TCP on port 80.HTTP Characteristics:\nHTTP establishes a single TCP connection between client and server, unlike FTP which uses separate control and data connections.\nSimilar to SMTP in message structure but provides immediate delivery of web resources. Nonpersistent Connections: Create a separate TCP connection for each request-response cycle. For webpages with multiple elements, a new connection must be opened for each element, introducing overhead.\n<br><img alt=\"EmailNONPersistent.png\" src=\"cn/standard-clint-service-protocols/img/emailnonpersistent.png\" target=\"_self\">\nThe image shows an example of a nonpersistent connection. The client needs to access a file that contains one link to an image. The text file and image are located on the same server. Here we need two connections. For each connection, TCP requires at least three handshake messages to establish the connection, but the request can be sent with the third one. After the connection is established, the object can be transferred. After receiving an object, another three handshake messages are needed to terminate the connection.\nPersistent Connections: HTTP 1.1 introduced persistent connections by default, where the server keeps the connection open for further requests, reducing time and resources needed for connection establishment. Saves time and resources by avoiding repeated connection setups.\nReduces the need for multiple sets of buffers and variables at each site.\nLowers round-trip delays for connection management. <br><img alt=\"EmailPersistent.png\" src=\"cn/standard-clint-service-protocols/img/emailpersistent.png\" target=\"_self\">\nThe image shows the same scenario as in Example 26.3, but using a persistent connection. Only one connection establishment and connection termination is used, but the request for the image is sent separately.HTTP is inherently insecure, lacking built-in mechanisms for confidentiality, integrity, or authentication. To enhance security, HTTP over SSL (Secure Socket Layer) is used, commonly known as HTTPS.\nInherently insecure.\nTo enhance security HTTPS is used. Which ensures:\nConfidentiality: Encrypting data to protect from eavesdropping.\nAuthentication: Verifying identities of server and client.\nData Integrity: Protecting data from being altered during transmission.\nHTTP uses two types of messages with the same format:\nRequest line (method, URL, HTTP version)\nHeaders\nOptional body Status line (HTTP version, status code, status phrase)\nHeaders\nOptional body\nHTTP supports proxy servers, which are computers that keep copies of responses to recent requests. When a client sends a request to a proxy server:\nThe proxy server checks its cache.\nIf the response is stored, it's sent directly to the client.\nIf not cached, the proxy server requests the resource from the origin server and forwards it to the client.\nThe proxy server stores a copy for future requests.\nThis process improves performance and reduces bandwidth usage.<br><img alt=\"HTTPProxy.png\" src=\"cn/standard-clint-service-protocols/img/httpproxy.png\" target=\"_self\">\nshows an example of a use of a proxy server in a local network, such as the network on a campus or in a company. The proxy server is installed in the local network. When an HTTP request is created by any of the clients (browsers), the request is first directed to the proxy server If the proxy server already has the corresponding web page, it sends the response to the client. Otherwise, the proxy server acts as a client and sends the request to the web server in the Internet. When the response is returned, the proxy server makes a copy and stores it in its cache before sending it to the requesting client.Web Page Types:\nStatic Web Pages: These pages contain fixed content that remains the same for all users.\nDynamic Web Pages: These pages generate content on the server based on user requests or data.\n<br><img alt=\"HTTPstruct.png\" src=\"cn/standard-clint-service-protocols/img/httpstruct.png\" target=\"_self\"><br><a data-href=\"HTTPstructureexp\" href=\"cn/standard-clint-service-protocols/httpstructureexp.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">HTTPstructureexp</a><br><img alt=\"HTTPEg2.png\" src=\"cn/standard-clint-service-protocols/img/httpeg2.png\" target=\"_self\">This example demonstrates how a document is retrieved over HTTP (see Figure 26.6).The RequestThe process begins with a request. We use the GET method to retrieve an image located at the path /usr/bin/image26. The request line itself consists of three parts: the HTTP method (GET), the URL ( /usr/bin/image26), and the HTTP version (26.1). The request header includes two lines indicating that the client is capable of accepting images in either GIF or JPEG format. Notably, this request does not include a body.The ResponseThe server responds with a message composed of a status line and a header. The header contains several lines defining key information: the date, the server type, the content encoding (which follows MIME standards, explained further in the context of electronic mail), and the length of the document. Following the header is the body of the image document itself.<br><img alt=\"HTTPEg1.png\" src=\"cn/standard-clint-service-protocols/img/httpeg1.png\" target=\"_self\">This example demonstrates how a client uses the PUT method to send a web page to a server for posting.Request StructureThe request follows this general format:\nRequest Line: The request line specifies the HTTP method (PUT), the URL to be targeted, and the HTTP version (26.1).\nHeaders: A series of header lines provide additional information about the request.\nRequest Body: The request body contains the actual web page content intended for posting to the server.\nResponse StructureThe server's response to the PUT request consists of:\nStatus Line: Indicates the success or failure of the operation.\nHeaders: Provides information about the response.\nResponse Body: In this case, the response body includes the newly created document (a CGI document), as illustrated in Figure 26.7\n<br><img alt=\"EmailEgcookie.png\" src=\"cn/standard-clint-service-protocols/img/emailegcookie.png\" target=\"_self\">Figure 26.8 illustrates a scenario demonstrating how cookies can be beneficial for an electronic store. Consider a shopper interacting with BestToys.com, an online retailer specializing in toys.The process begins when the shopper’s web browser (the client) sends a request to the BestToys server. Upon receiving the request, the server creates a new, empty shopping cart – essentially, a list to hold selected items – for this specific shopper. To track this cart, the server assigns it a unique identifier (for example, 12343).The server responds to the client's request by sending a message containing images of all available toys. Each toy image is accompanied by a link that, when clicked, would add that specific toy to the shopping cart. Crucially, this response message also includes a Set-Cookie header. The value of this header is the unique cart identifier (in this example, 12343).Finally, the client's web browser receives the response and displays the toy images. The browser also stores the cookie value (12343) in a local file, typically named BestToys. This stored cookie allows the server to recognize the shopper's cart during subsequent interactions.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/2c084d5e-b92f-4b79-98d1-09d7f09e83ab/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h35m48s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/2c084d5e-b92f-4b79-98d1-09d7f09e83ab/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h35m48s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/49e1a2e2-25f6-4ade-9ab8-2d4965d118e6/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h33m23s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/49e1a2e2-25f6-4ade-9ab8-2d4965d118e6/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h33m23s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/dd32f1c2-dd6b-46f3-834f-4919e6375c52/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h32m08s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/dd32f1c2-dd6b-46f3-834f-4919e6375c52/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h32m08s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/32024888-7857-464e-86c2-d333ec90603f/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h30m48s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/32024888-7857-464e-86c2-d333ec90603f/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h30m48s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/2bd3a532-c22a-4386-abee-39e490002db8/UPLOAD-ch26-UPDATED.pdf\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/2bd3a532-c22a-4386-abee-39e490002db8/UPLOAD-ch26-UPDATED.pdf</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=APVCgkqWcQ4\" target=\"_self\">https://www.youtube.com/watch?v=APVCgkqWcQ4</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/collection_2176a485-c612-4054-bbcf-09d953e91fae/64483833-ce05-4e1e-b51b-18b0da872b78/Data-Communications-and-Networking-Behrouz-A.-Forouzan.fourth-edition-A4.pdf\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/collection_2176a485-c612-4054-bbcf-09d953e91fae/64483833-ce05-4e1e-b51b-18b0da872b78/Data-Communications-and-Networking-Behrouz-A.-Forouzan.fourth-edition-A4.pdf</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Architecture of the WWW","level":3,"id":"Architecture_of_the_WWW_0"},{"heading":"Key Components","level":3,"id":"Key_Components_0"},{"heading":"Browser Components:","level":4,"id":"Browser_Components_0"},{"heading":"Server Role:","level":4,"id":"Server_Role_0"},{"heading":"Uniform Resource Locator (URL)","level":4,"id":"Uniform_Resource_Locator_(URL)_0"},{"heading":"HyperText Transfer Protocol (HTTP)","level":2,"id":"HyperText_Transfer_Protocol_(HTTP)_0"},{"heading":"Connection Management:","level":3,"id":"Connection_Management_0"},{"heading":"Connection Types:","level":3,"id":"Connection_Types_0"},{"heading":"HTTP Security","level":3,"id":"HTTP_Security_0"},{"heading":"HTTP Messages and Structure","level":3,"id":"HTTP_Messages_and_Structure_0"},{"heading":"Request Message Structure:","level":4,"id":"Request_Message_Structure_0"},{"heading":"Response Message Structure:","level":4,"id":"Response_Message_Structure_0"},{"heading":"Common HTTP Methods:","level":4,"id":"Common_HTTP_Methods_0"},{"heading":"HTTP Status Codes:","level":4,"id":"HTTP_Status_Codes_0"},{"heading":"HTTP Request Header Names","level":4,"id":"HTTP_Request_Header_Names_0"},{"heading":"HTTP Response Header Names","level":4,"id":"HTTP_Response_Header_Names_0"},{"heading":"Proxy Servers","level":3,"id":"Proxy_Servers_0"},{"heading":"Web Page Types","level":3,"id":"Web_Page_Types_0"},{"heading":"HTTP Structure Image","level":3,"id":"HTTP_Structure_Image_0"},{"heading":"Examples","level":3,"id":"Examples_0"},{"heading":"Retrieving a Document (Example)","level":4,"id":"Retrieving_a_Document_(Example)_0"},{"heading":"Using the PUT Method to Post a Web Page","level":4,"id":"Using_the_PUT_Method_to_Post_a_Web_Page_0"},{"heading":"Illustrative Scenario: Cookie Usage on BestToys.com","level":4,"id":"Illustrative_Scenario_Cookie_Usage_on_BestToys.com_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":["cn/standard-clint-service-protocols/httpstructureexp.html","cn/standard-clint-service-protocols/httpstructureexp.html"],"author":"","coverImageURL":".","fullURL":"cn/standard-clint-service-protocols/www-http.html","pathToRoot":"../..","attachments":["cn/standard-clint-service-protocols/img/emailworkingbrowser.html","cn/standard-clint-service-protocols/img/emailnonpersistent.html","cn/standard-clint-service-protocols/img/emailpersistent.html","cn/standard-clint-service-protocols/img/httpproxy.html","cn/standard-clint-service-protocols/img/httpstruct.html","cn/standard-clint-service-protocols/img/httpeg2.html","cn/standard-clint-service-protocols/img/httpeg1.html","cn/standard-clint-service-protocols/img/emailegcookie.html"],"createdTime":1748761239994,"modifiedTime":1749740409506,"sourceSize":15575,"sourcePath":"CN/Standard Clint Service Protocols/WWW HTTP.md","exportPath":"cn/standard-clint-service-protocols/www-http.html","showInTree":true,"treeOrder":98,"backlinks":[],"type":"markdown"},"cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.html":{"title":"3.6 Dijkstra Algorithm - Single Source Shortest Path - Greedy Method","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.html","pathToRoot":"../..","attachments":["cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.html"],"createdTime":1744323199408,"modifiedTime":1744323185637,"sourceSize":80460334,"sourcePath":"CN/Untitled/3.6 Dijkstra Algorithm - Single Source Shortest Path - Greedy Method.mp4","exportPath":"cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.html","showInTree":true,"treeOrder":102,"backlinks":[],"type":"attachment"},"cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].html":{"title":"Data Communications and Networking – Behrouz A. Forouzan.fourth edition[A4]","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].html","pathToRoot":"../..","attachments":["cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].html"],"createdTime":1748739620737,"modifiedTime":1746941739221,"sourceSize":11370452,"sourcePath":"CN/Untitled/Data Communications and Networking – Behrouz A. Forouzan.fourth edition[A4].pdf","exportPath":"cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].html","showInTree":true,"treeOrder":107,"backlinks":[],"type":"attachment"},"cn/untitled/distance-vector-routing-part-2.html":{"title":"DISTANCE VECTOR ROUTING - PART-2","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"cn/untitled/distance-vector-routing-part-2.html","pathToRoot":"../..","attachments":["cn/untitled/distance-vector-routing-part-2.html"],"createdTime":1744323195915,"modifiedTime":1744323186577,"sourceSize":34304142,"sourcePath":"CN/Untitled/DISTANCE VECTOR ROUTING - PART-2.mp4","exportPath":"cn/untitled/distance-vector-routing-part-2.html","showInTree":true,"treeOrder":108,"backlinks":[],"type":"attachment"},"cn/untitled/frmcoursesyllabusipdownload.html":{"title":"frmCourseSyllabusIPDownload","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"cn/untitled/frmcoursesyllabusipdownload.html","pathToRoot":"../..","attachments":["cn/untitled/frmcoursesyllabusipdownload.html"],"createdTime":1748739120926,"modifiedTime":1746089047670,"sourceSize":146656,"sourcePath":"CN/Untitled/frmCourseSyllabusIPDownload.pdf","exportPath":"cn/untitled/frmcoursesyllabusipdownload.html","showInTree":true,"treeOrder":109,"backlinks":[],"type":"attachment"},"cn/untitled/icmp-upload.html":{"title":"ICMP upload","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"cn/untitled/icmp-upload.html","pathToRoot":"../..","attachments":["cn/untitled/icmp-upload.html"],"createdTime":1744323214730,"modifiedTime":1744323208206,"sourceSize":376279,"sourcePath":"CN/Untitled/ICMP upload.pdf","exportPath":"cn/untitled/icmp-upload.html","showInTree":true,"treeOrder":110,"backlinks":[],"type":"attachment"},"cn/untitled/zerolecture-ece416.html":{"title":"zerolecture ECE416","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"cn/untitled/zerolecture-ece416.html","pathToRoot":"../..","attachments":["cn/untitled/zerolecture-ece416.html"],"createdTime":1744323342186,"modifiedTime":1741186690455,"sourceSize":3595767,"sourcePath":"CN/Untitled/zerolecture ECE416.pdf","exportPath":"cn/untitled/zerolecture-ece416.html","showInTree":true,"treeOrder":120,"backlinks":[],"type":"attachment"},"cn/csma.html":{"title":"CSMA","icon":"","description":"Carrier Sense Multiple Access (CSMA) is a contention-based protocol used in computer networks to manage access to a shared communication channel. It improves upon earlier protocols like ALOHA by introducing a mechanism to reduce collisions, which occur when multiple devices transmit data simultaneously.<img alt=\"CSMA1.png\" src=\"cn/img/csma1.png\" target=\"_self\"><br><img alt=\"CSMA2.png\" src=\"cn/img/csma2.png\" target=\"_self\">\nBefore transmitting data, a device listens to the communication channel (carrier) to check if it is idle or busy. If the channel is idle, the device proceeds with transmission. If it is busy, the device waits until it becomes idle. Multiple devices share the same communication medium and compete for access. Although CSMA reduces the chances of collisions, they can still occur due to propagation delays (the time it takes for signals to travel across the network). CSMA comes in different variants based on how devices behave when they sense that the channel is busy:\nThe device transmits immediately after the channel becomes idle. This approach increases the likelihood of collisions if multiple devices are waiting for the channel to become free at the same time. The device waits for a random amount of time before checking the channel again if it is busy. This reduces collisions but increases delay. The device transmits with a probability p when the channel is idle. If it does not transmit, it waits for the next time slot and repeats the process.<br>\n<img alt=\"CSMA3.png\" src=\"cn/img/csma3.png\" target=\"_self\">\n<br><img alt=\"CSMA4.png\" src=\"cn/img/csma4.png\" target=\"_self\">\nCollision Reduction: By sensing the carrier before transmitting, CSMA reduces the likelihood of collisions compared to ALOHA protocols. Efficient Use of Channel: Idle channels are quickly utilized without unnecessary delays. Simplicity: Easy to implement in networks with shared communication media. Collisions Still Occur: Due to propagation delays, two devices may sense an idle channel and transmit simultaneously, causing a collision. Wasted Bandwidth: Collisions result in wasted bandwidth as corrupted frames must be retransmitted. Performance Degrades with High Traffic: As more devices contend for access, collisions increase, leading to reduced efficiency. CSMA is widely used in wired and wireless networks where multiple devices share a common medium:\nEthernet networks (CSMA/CD variant). Wireless networks like Wi-Fi (CSMA/CA variant). Used in wired Ethernet networks. Devices monitor the channel during transmission and stop immediately if a collision is detected. After detecting a collision, they wait for a random backoff time before retrying. Used in wireless networks like Wi-Fi. Devices use mechanisms like random backoff timers and acknowledgments to avoid collisions before they occur. Imagine five computers connected to a shared communication medium:\nComputer A wants to send data to Computer B. Before transmitting, A senses whether the medium is idle or busy. If idle, A transmits its data frame; if busy, A waits until the medium becomes free. If another computer (e.g., Computer C) also starts transmitting at nearly the same time as A, their frames collide, leading to data corruption. In such cases, both A and C will wait for random backoff times before retransmitting their frames. CSMA is a foundational protocol that balances simplicity and efficiency by introducing carrier sensing to reduce collisions in shared communication channels. While it has limitations under high traffic conditions, its variants like CSMA/CD and CSMA/CA address these issues and remain integral to modern wired and wireless networking systems. <br><a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=8wptjECeGA8\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=8wptjECeGA8\" target=\"_self\">YouTube Video 1</a> <br><a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=gLaL8NntOsc\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=gLaL8NntOsc\" target=\"_self\">YouTube Video 2</a> <br><a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=MAZi6VoekYw\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=MAZi6VoekYw\" target=\"_self\">YouTube Video 3</a> <br><a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=IftFvfSywCQ\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=IftFvfSywCQ\" target=\"_self\">YouTube Video 4</a> <br><a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=o0GXIHK-4Qo\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=o0GXIHK-4Qo\" target=\"_self\">YouTube Video 5</a> <br><a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=MvzEnj2ZnIo\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=MvzEnj2ZnIo\" target=\"_self\">YouTube Video 6</a> <br><a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">Perplexity Answer</a> ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Carrier Sense Multiple Access (CSMA)","level":1,"id":"Carrier_Sense_Multiple_Access_(CSMA)_0"},{"heading":"Key Components of CSMA","level":2,"id":"Key_Components_of_CSMA_0"},{"heading":"1. Carrier Sense","level":3,"id":"1._Carrier_Sense_0"},{"heading":"2. Multiple Access","level":3,"id":"2._Multiple_Access_0"},{"heading":"3. Collision Handling","level":3,"id":"3._Collision_Handling_0"},{"heading":"Types of CSMA Protocols","level":2,"id":"Types_of_CSMA_Protocols_0"},{"heading":"1. 1-Persistent CSMA","level":3,"id":"1._1-Persistent_CSMA_0"},{"heading":"2. Non-Persistent CSMA","level":3,"id":"2._Non-Persistent_CSMA_0"},{"heading":"3. p-Persistent CSMA (used in slotted channels)","level":3,"id":"3._p-Persistent_CSMA_(used_in_slotted_channels)_0"},{"heading":"Advantages of CSMA","level":2,"id":"Advantages_of_CSMA_0"},{"heading":"Limitations of CSMA","level":2,"id":"Limitations_of_CSMA_0"},{"heading":"Applications","level":2,"id":"Applications_0"},{"heading":"Variants of CSMA","level":2,"id":"Variants_of_CSMA_0"},{"heading":"1. CSMA/CD (Collision Detection)","level":3,"id":"1._CSMA/CD_(Collision_Detection)_0"},{"heading":"2. CSMA/CA (Collision Avoidance)","level":3,"id":"2._CSMA/CA_(Collision_Avoidance)_0"},{"heading":"Example Scenario","level":2,"id":"Example_Scenario_0"},{"heading":"Conclusion","level":2,"id":"Conclusion_0"},{"heading":"Citations","level":2,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"cn/img/csma1.png","fullURL":"cn/csma.html","pathToRoot":"..","attachments":["cn/img/csma1.html","cn/img/csma2.html","cn/img/csma3.html","cn/img/csma4.html"],"createdTime":1748855492871,"modifiedTime":1748855492876,"sourceSize":4741,"sourcePath":"CN/CSMA.md","exportPath":"cn/csma.html","showInTree":true,"treeOrder":121,"backlinks":["cn/randomaccess.html"],"type":"markdown"},"cn/csmacd.html":{"title":"CSMACD","icon":"","description":"CSMA/CD is a network protocol used in wired Ethernet networks to manage access to a shared communication channel. It enhances the basic CSMA protocol by adding a mechanism for detecting and handling collisions when multiple devices attempt to transmit data simultaneously. This ensures efficient use of the channel while minimizing data loss due to collisions.<img alt=\"CSMACD2.png\" src=\"cn/img/csmacd2.png\" target=\"_self\"><br><img alt=\"CSMACD4.png\" src=\"cn/img/csmacd4.png\" target=\"_self\"> Carrier Sensing: Before transmitting, a device listens to the channel to check if it is idle (no ongoing transmission).\nIf the channel is busy, the device waits until it becomes free. Data Transmission: Once the channel is idle, the device begins transmitting its frame. Collision Detection: While transmitting, the device continuously monitors the channel for collisions. A collision occurs when two or more devices transmit simultaneously, causing signal interference.\nCollisions are detected by observing abnormal energy levels or corrupted signals on the channel. Collision Handling: Upon detecting a collision, the device immediately stops transmitting and sends a jamming signal to notify all other devices about the collision.\nThe jamming signal prevents other devices from transmitting during this period. Random Backoff: After sending the jamming signal, the device waits for a random amount of time (calculated using a binary exponential backoff algorithm) before attempting to retransmit.\nThis randomness reduces the likelihood of repeated collisions. <br><img alt=\"CSMACD1.png\" src=\"cn/img/csmacd1.png\" target=\"_self\"><br><img alt=\"CSMACD3.png\" src=\"cn/img/csmacd3.png\" target=\"_self\"> Half-Duplex Communication: Devices can either send or receive data at any given time but not both simultaneously. Collision Detection Mechanism: Collisions are detected during transmission, allowing devices to stop and retry rather than wasting bandwidth on corrupted data. Minimum Frame Size: To ensure collision detection works properly, frames must be long enough for collisions to be detected before transmission completes.\nThe minimum frame size is calculated as: [\n\\text{Minimum Frame Size} = 2 \\times \\text{Propagation Delay} \\times \\text{Bandwidth}\n]\nFor example, in a 10 Mbps Ethernet network with a maximum propagation delay of 25.6 μs:\n[\n2 \\times 25.6 \\mu s \\times 10 \\text{ Mbps} = 512 \\text{ bits (64 bytes)}\n] Efficient Collision Handling: Collisions are detected early, preventing wasted bandwidth on corrupted frames. Improved Channel Utilization: The protocol ensures that only one device transmits at a time, reducing contention. Simple Implementation: CSMA/CD is relatively easy to implement in wired networks like Ethernet. Not Suitable for Wireless Networks: Collision detection relies on energy levels, which are difficult to monitor in wireless networks due to signal attenuation over distance. Performance Degradation with High Traffic: As more devices contend for access, collisions increase, leading to reduced efficiency. Half-Duplex Restriction: Devices cannot send and receive data simultaneously, limiting throughput compared to full-duplex systems. CSMA/CD is primarily used in wired Ethernet networks (IEEE 802.3 standard) where multiple devices share a common medium, such as coaxial cables or twisted-pair wires.Imagine three computers (A, B, and C) connected via Ethernet:\nComputer A begins transmitting data after sensing an idle channel.\nWhile A is transmitting, Computer B also senses an idle channel (due to propagation delay) and starts transmitting.\nA collision occurs as signals from A and B interfere with each other.\nBoth computers detect the collision and send jamming signals.\nAfter waiting for random backoff times, A and B retry their transmissions.\nCSMA/CD was revolutionary in managing contention in shared communication channels for wired networks like Ethernet. However, as network traffic increased and full-duplex communication became standard, CSMA/CD's limitations led to its replacement by more advanced protocols in modern networks.<br>[1] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=o0GXIHK-4Qo\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=o0GXIHK-4Qo\" target=\"_self\">YouTube Video</a><br>\n[2] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=hyvDRVfYnKw\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=hyvDRVfYnKw\" target=\"_self\">YouTube Video</a><br>\n[3] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=c2OLbhWKxMk\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=c2OLbhWKxMk\" target=\"_self\">YouTube Video</a><br>\n[4] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=4LjpltCSd30\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=4LjpltCSd30\" target=\"_self\">YouTube Video</a><br>\n[5] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=28P3Fv2j8qU\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=28P3Fv2j8qU\" target=\"_self\">YouTube Video</a><br>\n[6] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=xGzDbJz-AJ8\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=xGzDbJz-AJ8\" target=\"_self\">YouTube Video</a><br>\n[7] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=Q9t6q5MUcmQ\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=Q9t6q5MUcmQ\" target=\"_self\">YouTube Video</a><br>\n[8] <a data-tooltip-position=\"top\" aria-label=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/collection_2176a485-c612-4054-bbcf-09d953e91fae/d591dd59-c771-43f1-aec1-9438cc3206c2/lecture-Multiple-Access-upload-14.2.2021.pptx\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/collection_2176a485-c612-4054-bbcf-09d953e91fae/d591dd59-c771-43f1-aec1-9438cc3206c2/lecture-Multiple-Access-upload-14.2.2021.pptx\" target=\"_self\">Lecture Slides</a> <br>Answer sourced from Perplexity: <a class=\"internal-link\" data-href=\"pplx.ai/share\" href=\".html\" target=\"_self\" rel=\"noopener nofollow\">pplx.ai/share</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Carrier Sense Multiple Access with Collision Detection (CSMA/CD)","level":1,"id":"Carrier_Sense_Multiple_Access_with_Collision_Detection_(CSMA/CD)_0"},{"heading":"How CSMA/CD Works","level":2,"id":"How_CSMA/CD_Works_0"},{"heading":"Key Features","level":2,"id":"Key_Features_0"},{"heading":"Advantages","level":2,"id":"Advantages_0"},{"heading":"Limitations","level":2,"id":"Limitations_0"},{"heading":"Applications","level":2,"id":"Applications_0"},{"heading":"Example Scenario","level":2,"id":"Example_Scenario_0"},{"heading":"Comparison with Other Protocols","level":2,"id":"Comparison_with_Other_Protocols_0"},{"heading":"Conclusion","level":2,"id":"Conclusion_0"},{"heading":"Citations","level":2,"id":"Citations_0"}],"links":[".html"],"author":"","coverImageURL":"cn/img/csmacd2.png","fullURL":"cn/csmacd.html","pathToRoot":"..","attachments":["cn/img/csmacd2.html","cn/img/csmacd4.html","cn/img/csmacd1.html","cn/img/csmacd3.html"],"createdTime":1748855490937,"modifiedTime":1748855490947,"sourceSize":5710,"sourcePath":"CN/CSMACD.md","exportPath":"cn/csmacd.html","showInTree":true,"treeOrder":122,"backlinks":["cn/randomaccess.html"],"type":"markdown"},"cn/datacommunication.html":{"title":"DataCommunication","icon":"","description":"<a class=\"internal-link\" data-href=\"Topologies.md\" href=\"cn/topologies.html\" target=\"_self\" rel=\"noopener nofollow\"></a>### What is a Computer Network ?\nA computer network is a collection of interconnected devices, often referred to as nodes, that communicate with each other to share resources, exchange data, and enable collaboration. These devices can include computers, printers, servers, and other hardware capable of sending or receiving data. The connections between these devices are established through communication links such as cables, fiber optics, or wireless signals1.\nNodes: Devices like computers, printers, and routers that participate in the network.\nLinks: The communication pathways (e.g., cables, radio waves) that connect nodes.\nTransmission Medium: The physical or wireless means by which data travels.\nProtocols: Rules and standards that govern communication between devices to ensure compatibility.\nData communication refers to the exchange of data between two or more devices through a transmission medium such as cables, fiber optics, or radio waves. It is a fundamental aspect of computer networks and telecommunications.The effectiveness of a data communication system is determined by four main characteristics: Delivery: Ensures data reaches the correct destination. Example: When you send an email, the email server ensures it is delivered to the intended recipient's inbox and not to someone else's account. Accuracy: Guarantees that the transmitted data remains unaltered. Example: When downloading a software update, error-checking mechanisms like checksums ensure that the file downloaded is identical to the original file on the server, without corruption. Timeliness: Data must be delivered within an acceptable time frame, especially critical for real-time audio and video. Example: During a live video conference on platforms like Zoom, audio and video streams must arrive in real-time to maintain a smooth conversation without delays. Jitter: Refers to variations in packet arrival time, which can affect the quality of audio or video transmissions. Example: In streaming services like Netflix, if packets arrive with varying delays (jitter), it can cause buffering or interruptions in the playback of a movie. A typical data communication system consists of five components:\nMessage: The information to be transmitted (e.g., text, audio, video).\nSender: The device that initiates the communication (e.g., computer, camera).\nReceiver: The device that receives the message (e.g., monitor, smartphone).\nTransmission Medium: The physical path through which the message travels (e.g., cables, wireless signals).\nProtocol: A set of rules governing communication between devices to ensure compatibility and understanding1.\nData flow can occur in three modes:\nSimplex: Unidirectional communication; one device transmits while the other only receives (e.g., keyboards and monitors).\nHalf-Duplex: Both devices can transmit and receive, but not simultaneously (e.g., walkie-talkies).\nFull-Duplex: Both devices can transmit and receive simultaneously (e.g., telephone networks)1.\nData can be transmitted in two formats:\nAnalog Data: Continuous signals representing information.\nDigital Data: Discrete signals with distinct values2.\nThe medium used for data transmission includes:\nWired media like twisted-pair cables, coaxial cables, and fiber optics.\nWireless media like radio waves and satellite links1.\nProtocols are essential for ensuring successful communication between devices. They define rules for:\nSyntax (data format)\nSemantics (meaning of bits)\nTiming (data transfer speed and synchronization)3.\nExamples of widely used protocols include:\nTCP/IP for internet communications\nFTP for file transfers\nHTTP for web browsing.\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Key Components of a Computer Network","level":2,"id":"Key_Components_of_a_Computer_Network_0"},{"heading":"Data Communication Overview","level":3,"id":"Data_Communication_Overview_0"},{"heading":"Key Characteristics of Data Communication","level":4,"id":"Key_Characteristics_of_Data_Communication_0"},{"heading":"Components of Data Communication","level":4,"id":"Components_of_Data_Communication_0"},{"heading":"Modes of Data Flow","level":4,"id":"Modes_of_Data_Flow_0"},{"heading":"Transmission Types","level":4,"id":"Transmission_Types_0"},{"heading":"Transmission Mediums","level":4,"id":"Transmission_Mediums_0"},{"heading":"Protocols in Data Communication","level":4,"id":"Protocols_in_Data_Communication_0"}],"links":["cn/topologies.html"],"author":"","coverImageURL":"","fullURL":"cn/datacommunication.html","pathToRoot":"..","attachments":[],"createdTime":1748855438445,"modifiedTime":1749740409155,"sourceSize":4186,"sourcePath":"CN/DataCommunication.md","exportPath":"cn/datacommunication.html","showInTree":true,"treeOrder":123,"backlinks":[],"type":"markdown"},"cn/osi.html":{"title":"OSI","icon":"","description":"<a class=\"internal-link\" data-href=\"OSI3.png\" href=\"cn/img/osi3.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"TCP IP.md\" href=\"cn/tcp-ip.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"OSI2.png\" href=\"cn/img/osi2.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"OSI1.png\" href=\"cn/img/osi1.html\" target=\"_self\" rel=\"noopener nofollow\"></a>### OSI model\nThe OSI (Open Systems Interconnection) Model is a conceptual framework that standardizes and defines the functions of telecommunication and networking systems. It divides network communications into seven distinct layers, each with specific responsibilities that work together to facilitate data transmission between devices.\nOpen System: It is set of protocols allowing diff. systems to communicate\nPurpose: It facilitates system communication without modifying hardware or software\nStructure: It is a seven layer architecture each defining a specific part of information transfer process of network Each layer communicates with the same layer on the other machine following a set of rules called protocols\nWithin a machine each layer relies on the service of layer below it and provides service to the layer above it\nThe processes that communicate between layers are called per to per processes\n<br><img alt=\"OSI11.png\" src=\"cn/img/osi11.png\" target=\"_self\">The Physical Layer is the lowest layer of the OSI model and deals with the physical connection between devices. It defines the hardware specifications for devices and the transmission medium. The physical layer is responsible for movements of individual bits from one hop (node) to the next.Functions: Transmitting raw bit streams: Sending binary data through physical media like cables or wireless signals. Defining network connections: Establishing how devices are physically linked and the type of transmission medium used (e.g., Ethernet, Wi-Fi). Setting communication direction: Controlling whether data flows in one direction (simplex), both ways at different times (half-duplex), or simultaneously (full-duplex). Managing signal characteristics: Handling aspects such as voltage levels, bits per second, and maximumtransmission distances to ensure reliable data transfer. This concise overview highlights the essential roles of the Physical Layer in enabling network communication\nthrough physical means.<br><img alt=\"OSI12.png\" src=\"cn/img/osi12.png\" target=\"_self\">The Data Link Layer handles node-to-node data transfer, packaging data into frames for transmission across the physical layer. Functions: Framing: Packages data into frames with clear start and end indicators, enabling accurate identification of individual data units. Error Handling: Detects errors using methods like checksums or CRC, and either corrects them or requests retransmission to ensure data integrity. Flow Control: Manages the rate at which data is sent to prevent overwhelming the receiver, employing mechanisms such as sliding window techniques. Physical Addressing: Utilizes MAC addresses to identify devices on a network, ensuring data is directed to the correct destination. Header Addition: Includes headers in frames containing sender and receiver MAC addresses, error checking codes, and control information for efficient routing. Access Management: Implements protocols to regulate access to shared communication channels, preventing collisions and ensuring orderly data transmission. This layer consists of two sublayers:\nMedia Access Control (MAC): Provides flow control and multiplexing for device transmissions over a network Logical Link Control (LLC): Provides flow and error control over the physical medium and identifies line protocols\n<br><img alt=\"OSI13.png\" src=\"cn/img/osi13.png\" target=\"_self\"><br><img alt=\"OSI14.png\" src=\"cn/img/osi14.png\" target=\"_self\">The Network Layer is responsible for routing data packets between different networks. The network layer is responsible for the delivery of individual packets from the source host to the destination host.Functions: Routing Data: Finding the best path for data packets to travel between nodes efficiently. Packet Handling: Segmenting large data into smaller packets, if necessary, and reassembling them at the destination. Logical Addressing: Using IP addresses and headers to enable communication across different networks. Congestion Control: Managing network traffic to prevent overload and ensure smooth data flow. <br>This layer primarily uses Internet Protocol (IPv4 and IPv6) to facilitate data transfer from one node to another across different networks<a data-tooltip-position=\"top\" aria-label=\"https://www.ibm.com/think/topics/osi-model\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.ibm.com/think/topics/osi-model\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://aws.amazon.com/what-is/osi-model/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://aws.amazon.com/what-is/osi-model/\" target=\"_self\">4</a>.<br><img alt=\"OSI15.png\" src=\"cn/img/osi15.png\" target=\"_self\"><br><img alt=\"OSI16.png\" src=\"cn/img/osi16.png\" target=\"_self\">The Transport Layer ensures end-to-end communication and reliable data delivery between devices on different hosts. The transport layer is responsible for the delivery\nof a message from one process to another.Functions: Data Handling: Segmentation and Reassembly: Breaks large data into manageable segments for transmission and reconstructs them at the destination.\nSequencing: Uses sequence numbers to ensure segments are reassembled in the correct order, even if they arrive out of sequence. Error Management: Error Detection: Employs mechanisms like checksums to detect corrupted data.\nRecovery: Requests retransmission of lost or damaged segments, ensuring data integrity. Flow Control: Manages data flow to prevent network congestion and receiver overflow, often using techniques like sliding window protocols. Multiplexing and Port Assignment: Allows multiple applications to communicate simultaneously over the same connection.\nAssigns unique port numbers to each application, directing data to the correct destination using sockets (IP address + port). Services: Connection-oriented (e.g., TCP): Establishes a reliable connection through a three-way handshake, ensuring data is delivered in order with acknowledgments, suitable for applications needing reliability.\nConnectionless (e.g., UDP): Sends data without establishing a connection, prioritizing speed over reliability, ideal for real-time applications where some packet loss is acceptable. <br>Common protocols include TCP (connection-oriented) and UDP (connectionless)<a data-tooltip-position=\"top\" aria-label=\"https://aws.amazon.com/what-is/osi-model/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://aws.amazon.com/what-is/osi-model/\" target=\"_self\">4</a><a data-tooltip-position=\"top\" aria-label=\"https://www.shiksha.com/online-courses/articles/osi-model-explained/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.shiksha.com/online-courses/articles/osi-model-explained/\" target=\"_self\">6</a>.<br><img alt=\"OSI17.png\" src=\"cn/img/osi17.png\" target=\"_self\"><br><img alt=\"OSI18.png\" src=\"cn/img/osi18.png\" target=\"_self\">The Session Layer establishes, maintains, and terminates communication sessions between applications.Functions: Dialogue Control (Session Management): The Session Layer is responsible for establishing, maintaining, and terminating connections or sessions between devices. This involves initiating interactions, ensuring smooth communication, and properly closing the connection once it is no longer needed. Checkpointing and Recovery: To handle interruptions effectively, the Session Layer implements checkpointing. This process involves periodically saving the state of a session so that if an interruption occurs, the session can resume from the last saved point rather than starting over. This enhances efficiency and reduces data loss during disruptions. Authentication and Reconnection Management: Ensuring security is paramount, the Session Layer manages authentication to verify the identities of devices or users before allowing them to join a session. This prevents unauthorized access and ensures secure communication.\nAdditionally, it handles reconnections, enabling devices that lose their connection temporarily to reconnect without losing progress, thanks to checkpointing. Data Synchronization: The Session Layer synchronizes data exchange between devices to maintain consistency. It ensures that data sent by one device is properly received and acknowledged by the other, preventing discrepancies and ensuring both ends are in sync. Session Direction Control: This layer controls the direction of communication, which can be: Simplex: Data flows in one direction only.\nHalf-duplex: Devices take turns sending and receiving data.\nFull-duplex: Both devices can send and receive data simultaneously. Implementation Considerations: The Session Layer's functions are typically managed through protocols that determine how often checkpoints are set, usually automatically based on predefined criteria or network conditions.\nAuthentication methods vary but commonly include mechanisms like passwords, tokens, or digital certificates to ensure security.\nThe choice of session direction (simplex, half-duplex, full-duplex) is influenced by both network conditions and application requirements. For instance, applications requiring simultaneous data exchange, such as video calls, use full-duplex communication. <br>This layer is particularly important for file transfer protocols, remote desktop connections, and online gaming where synchronized sessions are critical<a data-tooltip-position=\"top\" aria-label=\"https://www.radware.com/cyberpedia/application-security/the-osi-model-breaking-down-its-seven-layers/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.radware.com/cyberpedia/application-security/the-osi-model-breaking-down-its-seven-layers/\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.shiksha.com/online-courses/articles/osi-model-explained/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.shiksha.com/online-courses/articles/osi-model-explained/\" target=\"_self\">6</a>.<br><img alt=\"OSI19.png\" src=\"cn/img/osi19.png\" target=\"_self\">The Presentation Layer manages data translation, encryption, and compression.Functions:\nEncryption/Decryption: Provides secure encryption and decryption for data protection.\nData Translation: Facilitates seamless conversion between application and network formats.\nCompression: Implements compression to optimize bandwidth usage and improve efficiency.\nCharacter Set Conversion: Manages character set conversion to ensure compatibility across different systems.\nFormat Standardization: Ensures data is formatted consistently for mutual understanding by sender and receiver. <br>This layer works with various data formats like HTML, JSON, and CSV<a data-tooltip-position=\"top\" aria-label=\"https://aws.amazon.com/what-is/osi-model/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://aws.amazon.com/what-is/osi-model/\" target=\"_self\">4</a>.<br><img alt=\"OSI20.png\" src=\"cn/img/osi20.png\" target=\"_self\">The Application Layer is the closest to the end user and provides network services directly to applications. The application layer is responsible for providing services to the user.Functions:\nEnables Application Interaction: Provides interfaces for applications to access network services. Lets apps like web browsers or email clients connect to network services.\nIdentifies Communication Partners: Facilitates the recognition of communication endpoints. Identifies which devices are communicating with each other.\nManages Resource Availability: Determines the availability of resources required for communication. Makes sure the network has what it needs for communication (like bandwidth).\nSynchronizes Communication: Manages timing and flow of data exchange. Keeps data flowing smoothly between devices.\nServices Provided:\nNetwork Virtual Terminal: Emulates terminals for remote login access. Lets you log in to a computer from far away, like using a terminal. File Management: Enables file operations (access, modify, retrieve) on remote systems. Allows you to access, edit, and manage files on another computer over the internet. Mail Services: Facilitates email handling, including storage and forwarding. Directory Services: Provides access to distributed directories containing global information about objects and services. Provides access to databases that store info about devices, users, and services on the network. <br>This layer is concerned with the specific type of application itself and its standardized communication methods<a data-tooltip-position=\"top\" aria-label=\"https://aws.amazon.com/what-is/osi-model/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://aws.amazon.com/what-is/osi-model/\" target=\"_self\">4</a>.<br><img alt=\"OSI21.png\" src=\"cn/img/osi21.png\" target=\"_self\">Data communication in the OSI model follows a specific flow:\nThe sender's application layer passes data down through each layer\nEach layer adds its own headers and addressing information\nData moves down the stack until it's transmitted through the physical medium\nAt the receiver's end, each layer processes the data according to relevant headers\nData moves up the layers, being unpacked at each step\n<br>Finally, the application at the receiving end receives the data<a data-tooltip-position=\"top\" aria-label=\"https://aws.amazon.com/what-is/osi-model/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://aws.amazon.com/what-is/osi-model/\" target=\"_self\">4</a>\nThis layered approach allows complex data communications to occur seamlessly between applications on different devices, regardless of the underlying hardware and software implementations.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Layered Architecture:","level":5,"id":"Layered_Architecture_0"},{"heading":"Layer 1: Physical Layer","level":2,"id":"Layer_1_Physical_Layer_0"},{"heading":"Layer 2: Data Link Layer","level":2,"id":"Layer_2_Data_Link_Layer_0"},{"heading":"Layer 3: Network Layer","level":2,"id":"Layer_3_Network_Layer_0"},{"heading":"Layer 4: Transport Layer","level":2,"id":"Layer_4_Transport_Layer_0"},{"heading":"Layer 5: Session Layer","level":2,"id":"Layer_5_Session_Layer_0"},{"heading":"Layer 6: Presentation Layer","level":2,"id":"Layer_6_Presentation_Layer_0"},{"heading":"Layer 7: Application Layer","level":2,"id":"Layer_7_Application_Layer_0"},{"heading":"How Communication Happens in the OSI Model","level":2,"id":"How_Communication_Happens_in_the_OSI_Model_0"}],"links":["cn/img/osi3.html","cn/tcp-ip.html","cn/img/osi2.html","cn/img/osi1.html"],"author":"","coverImageURL":"cn/img/osi11.png","fullURL":"cn/osi.html","pathToRoot":"..","attachments":["cn/img/osi11.html","cn/img/osi12.html","cn/img/osi13.html","cn/img/osi14.html","cn/img/osi15.html","cn/img/osi16.html","cn/img/osi17.html","cn/img/osi18.html","cn/img/osi19.html","cn/img/osi20.html","cn/img/osi21.html"],"createdTime":1748855948279,"modifiedTime":1749740409241,"sourceSize":12418,"sourcePath":"CN/OSI.md","exportPath":"cn/osi.html","showInTree":true,"treeOrder":124,"backlinks":["cn/topologies.html"],"type":"markdown"},"cn/process-to-process.html":{"title":"Process-To-Process","icon":"","description":"<img alt=\"CN/img/1.png\" src=\"cn/img/1.png\" target=\"_self\">\nDelivery of frames between two neighboring nodes over a link by data-link layer. Delivery of data-grams between two hosts by network layer.\nBut communication on Internet is not defined as the exchanged of data between two nodes or between two hosts… Real communication takes place between two processes (application programs). But at a single time many processes are running at source and destination. A mechanism is required to deliver data from one of these processes running on the source host to the corresponding process running on the destination host.\nTransport layer is responsible for process-to-process delivery. The client-server paradigm is a common model used in computer networks and distributed applications where two types of processes communicate: a client and a server.\nClient:&nbsp;A process (program) running on a local computer that requests a service or resource. Server:&nbsp;A process running on a remote (or sometimes the same) computer that provides the requested service or resource.Note that both the process have the same name.Request-Response Pattern:&nbsp;The client initiates communication by sending a request to the server. The server waits for such requests and responds by providing the requested service or data. This interaction follows a request-response pattern. How It Works:&nbsp;The client process sends a request to the server process, typically over a network. The server process receives the request, processes it, and sends back a response. The client receives the response and uses the data or service accordingly. Example:&nbsp;For example, when you use a web browser (client) to access a website, your browser sends a request to the web server. The server processes this request and sends back the webpage to your browser.\nLocal host ( client )\nLocal process ( client )\nRemote host ( server )\nRemote process ( server )\nOperating systems today support both multi-user and multi-programming environments. A server and client both can run several programs at the same time.<br><img alt=\"CN/img/4.png\" src=\"cn/img/4.png\" target=\"_self\">\nAddressing in computer networks, especially at the transport layer, is the method used to deliver data from one specific process on a host to another specific process on a different host.\nIt involves two key identifiers at each end of the communication:\nIP Address\nPort Number\nIP Address\nIdentifies the host (computer or device) uniquely on the network.\nUsed by the network layer to deliver packets from one host to another. Example:&nbsp;192.168.1.1Port Number\nIdentifies the specific process (application or service) running on the host.\nUsed by the transport layer to distinguish among multiple processes running on the same host. Example:&nbsp;80 (for HTTP), 443 (for HTTPS), 25 (for SMTP)In the Internet model, the port numbers are 16-bit integers between 0 and 65,535.Port numbers allow multiplexing and demultiplexing of data to/from applications.<br><img alt=\"CN/img/3.png\" src=\"cn/img/3.png\" target=\"_self\">\nTo uniquely identify a process on a host, we combine the IP address and port number. This combination is known as a socket address.\nThe IP header contains the IP address, the UDP or TCP header contains the port numbersExample:&nbsp;192.168.1.1:80 (IP address + port 80, typically for HTTP server). Both client and server have socket addresses to uniquely identify the communicating processes. <br><img alt=\"CN/img/8.png\" src=\"cn/img/8.png\" target=\"_self\"><br><img src=\"cn/img/9.png\" target=\"_self\">These categories help manage port assignments and avoid conflicts between different applications and services. The server process must also define itself with a port number, this port number is however cannot be chosen randomly. If the computer at the server site runs a server process and assigns a random port number. The process at the client that wants to access that server and use its services will NOT know the port number. One solution is that the host send a special packet and request the port number, but this requires more overhead. Servers use well-known ports so clients know where to send requests (e.g., web servers use port 80). Clients typically use dynamic or ephemeral ports, which are assigned temporarily for the duration of a connectionExample:&nbsp;A Daytime client process, can use an ephemeral (temporary) port number 52,000 to identify itself. The Daytime server process must use the well-known (permanent) port number 13.<br><img src=\"cn/img/2.png\" target=\"_self\"> <br><img src=\"cn/img/5.png\" target=\"_self\">\nHost A sends a packet to announce wish for connection establishment and includes its initial information about traffic from A to B.\nHost B sends a packet to acknowledge (confirm) the request of A.\nHost B sends a packet that includes its initialization information about traffic from B to A.\nHost A sends a packet to acknowledge (confirm) the request of B.\nIt is a 4 step process but can also be 3 step. As step 2 and 3 can be combined into one.(Host B confirms the request form Host A and sends its own request)\nEach connection request needs to have a sequence number to recover from the loss or duplication of the packet.\nEach acknowledgement needs to have an acknowledgement number as well, for the same reason.\nThe first sequence number in each direction must be a random for each connection establishment.\nA sender cannot create several connections that start with the same sequence (e.g. 1) The reason is to prevent a situation called&nbsp;playback.\nExample&nbsp;In bank transaction a customer makes a connection and requests a transfer of $1 million to a third party. If the network somehow duplicates the transaction after the first connection is closed, the bank may assume that there is a new connection and transfer another&nbsp;$1 million to third party.This would probably not happen if the protocol required that the sender use a different sequence number each time it made a new connection. The bank would recognize a repeated sequence number and know that the request was a duplicate.\nUsing a sequence number for each connection requires that the receiver keep a history of sequence numbers for each remote host for a specific time.\n<br><img src=\"cn/img/7.png\" target=\"_self\">\nAny of the two parties involved in exchanging data can close the connection.\nWhen connection in one direction is terminated, the other party can continue sending data in the other direction.\nSo 4-actions are needed to close the connection in both directions.\nIt can't be converted into 3 step process as both parties may not wish to terminate the communication at the same time. Host A sends a packet announcing its wish for connection termination.\nHost B sends segment acknowledgement (confirming) the request of A.\nAfter this connection is closed in one direction, but not in the other.3. Host B can continue sending data to host A.\nWhen host B finishes sending its own data, it sends a segment indicate that it wants to close the connection.\nHost A acknowledges (confirms) the request of B. How can we make a connection-oriented transport layer over a connectionless network-layer protocol such as IP?\nAnswer\nThe transport layer services can be reliable or unreliable.\nIf the application-layer program needs the reliability, we use a reliable transport-layer protocol by implementing flow and error control at the transport-layer. (e.g. TCP) Means a slower and complex service.\nIf the application program does NOT need reliability, (because it uses its own flow and error control (real-time applications)), then an unreliable protocol can be used. (e.g. UDP) IF the data-link layer is reliable and has flow control and error control, do we need this at the transport layer too?\nAnswer\nThe image below shows that error-control at the data-link layer does not guarantee error control at the transport layer.<br>\n<img src=\"cn/img/6.png\" target=\"_self\"> ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Process-To-Process Delivery","level":1,"id":"Process-To-Process_Delivery_0"},{"heading":"Types of Delivery","level":2,"id":"Types_of_Delivery_0"},{"heading":"Node to Node Delivery","level":3,"id":"Node_to_Node_Delivery_0"},{"heading":"Host to Host Delivery","level":3,"id":"Host_to_Host_Delivery_0"},{"heading":"Process to Process Delivery","level":3,"id":"Process_to_Process_Delivery_0"},{"heading":"Client Server Paradigm","level":3,"id":"Client_Server_Paradigm_0"},{"heading":"For communication we must define the following:","level":4,"id":"For_communication_we_must_define_the_following_0"},{"heading":"Addressing","level":2,"id":"Addressing_0"},{"heading":"IP Address + Port Number = Socket Address","level":3,"id":"IP_Address_+_Port_Number_=_Socket_Address_0"},{"heading":"Port Number Categories","level":4,"id":"Port_Number_Categories_0"},{"heading":"Connectionless vs Connection-Oriented Service","level":2,"id":"Connectionless_vs_Connection-Oriented_Service_0"},{"heading":"Connection Establishment","level":3,"id":"Connection_Establishment_0"},{"heading":"Steps:","level":4,"id":"Steps_0"},{"heading":"Sequence Number and Acknowledgment Number","level":4,"id":"Sequence_Number_and_Acknowledgment_Number_0"},{"heading":"Connection Termination","level":3,"id":"Connection_Termination_0"},{"heading":"Steps:","level":4,"id":"Steps_1"},{"heading":"Reliable vs Unreliable","level":2,"id":"Reliable_vs_Unreliable_0"}],"links":[],"author":"","coverImageURL":"cn/img/1.png","fullURL":"cn/process-to-process.html","pathToRoot":"..","attachments":["cn/img/1.html","cn/img/4.html","cn/img/3.html","cn/img/8.html","cn/img/9.html","cn/img/2.html","cn/img/5.html","cn/img/7.html","cn/img/6.html"],"createdTime":1748770685667,"modifiedTime":1749740409317,"sourceSize":10440,"sourcePath":"CN/Process-To-Process.md","exportPath":"cn/process-to-process.html","showInTree":true,"treeOrder":125,"backlinks":[],"type":"markdown"},"cn/purealoha.html":{"title":"PureALOHA","icon":"","description":"Pure ALOHA is one of the earliest random access protocols used in computer networks to enable multiple devices to share a single communication channel. It operates on a simple principle: devices can transmit data whenever they have a message to send, without checking whether the channel is free. This decentralized approach makes it easy to implement but also leads to inefficiencies due to frequent collisions.<img alt=\"PureALOHA1.png\" src=\"cn/img/purealoha1.png\" target=\"_self\">The operation of Pure ALOHA can be summarized in the following steps:\nTransmission Anytime: Nodes transmit frames whenever they have data to send, without waiting for the channel to be idle.\nCollisions: If two or more nodes transmit simultaneously, their frames collide, resulting in data corruption.\nAcknowledgment: After transmitting a frame, the sender waits for an acknowledgment from the receiver. If no acknowledgment is received within a specified time, the sender assumes that the frame was destroyed due to collision.\nRetransmission: The sender waits for a random amount of time before retransmitting the frame. This randomness reduces the chances of repeated collisions.\n<br><img alt=\"PureALOHA2.png\" src=\"cn/img/purealoha2.png\" target=\"_self\">The vulnerable period in Pure ALOHA is two frame times (2T). This is the time during which collisions can occur between two frames:\nIf one frame starts at , another frame starting within to will collide with it.\nThis large vulnerable period contributes to frequent collisions.\nThroughput (( S )) measures the efficiency of successful transmissions in Pure ALOHA and is calculated using the formula:Where:\n( G ): Offered load (average number of transmission attempts per unit time).\n( e ): Euler's constant (). Occurs when ( G = 0.5 ).\nMaximum throughput is:\nThis means that only 18.4% of the channel capacity is utilized effectively in Pure ALOHA.\nSimplicity: Easy to implement with minimal overhead, as devices can transmit immediately when they have data.\nReal-Time Transmission: Suitable for applications requiring immediate data transmission, such as voice and video communications. Frequent Collisions: The lack of coordination leads to high collision rates and inefficiency.\nLow Throughput: With a maximum efficiency of only 18.4%, it performs poorly in high-load networks.\nNo Contention Management: There are no mechanisms for prioritizing devices or managing congestion, which can lead to network instability under heavy traffic.\nPure ALOHA is best suited for simple networks with low traffic and latency requirements, such as early satellite communication systems or small-scale setups where simplicity outweighs efficiency concerns.Slotted ALOHA improves upon Pure ALOHA by introducing time slots, reducing collision probability and increasing throughput efficiency.While Pure ALOHA laid the foundation for modern random access protocols, its inefficiency due to high collision rates limits its practical use today. It has been largely replaced by more advanced protocols like Slotted ALOHA and CSMA/CD that offer better performance and reliability.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Pure ALOHA Protocol","level":1,"id":"Pure_ALOHA_Protocol_0"},{"heading":"Working Principle","level":2,"id":"Working_Principle_0"},{"heading":"Vulnerable Period","level":2,"id":"Vulnerable_Period_0"},{"heading":"Throughput Calculation","level":2,"id":"Throughput_Calculation_0"},{"heading":"Maximum Throughput:","level":3,"id":"Maximum_Throughput_0"},{"heading":"Advantages","level":2,"id":"Advantages_0"},{"heading":"Limitations","level":2,"id":"Limitations_0"},{"heading":"Applications","level":2,"id":"Applications_0"},{"heading":"Comparison with Slotted ALOHA","level":2,"id":"Comparison_with_Slotted_ALOHA_0"},{"heading":"Conclusion","level":2,"id":"Conclusion_0"}],"links":[],"author":"","coverImageURL":"cn/img/purealoha1.png","fullURL":"cn/purealoha.html","pathToRoot":"..","attachments":["cn/img/purealoha1.html","cn/img/purealoha2.html"],"createdTime":1748856159072,"modifiedTime":1748856159078,"sourceSize":4083,"sourcePath":"CN/PureALOHA.md","exportPath":"cn/purealoha.html","showInTree":true,"treeOrder":126,"backlinks":["cn/randomaccess.html"],"type":"markdown"},"cn/randomaccess.html":{"title":"RandomAccess","icon":"","description":"<a class=\"internal-link\" data-href=\"CSMACD.md\" href=\"cn/csmacd.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"CSMA.md\" href=\"cn/csma.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"SlottedALOHA.md\" href=\"cn/slottedaloha.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"PureALOHA.md\" href=\"cn/purealoha.html\" target=\"_self\" rel=\"noopener nofollow\"></a>Random access protocols are a category of multiple access methods where stations independently decide when to transmit, without centralized control. These protocols are designed to manage contention and collisions in shared communication channels. In this no station is superior. Here's a detailed breakdown:The foundation of random access protocols, featuring:\nDecentralized transmission: Stations send frames whenever ready1 Collision handling: If collision detected, stations wait random time before retransmitting Vulnerable time: 2 × frame transmission time (Tfr) Maximum throughput: Only 18.4% efficiency due to high collision probability1 Example: If two stations transmit simultaneously, both frames collide and become corrupted. Each waits random backoff time before retrying.An improved version with:\nTime slots: Transmission allowed only at slot boundaries Reduced vulnerable time: Equal to Tfr (halved compared to pure ALOHA) Throughput boost: 36.8% maximum efficiency1 Synchronization requirement: All stations must agree on slot boundaries Introduces channel sensing before transmission:\nListen-before-talk: Stations check channel activity first Three persistence methods: 1-persistent: Transmit immediately if idle Non-persistent: Wait random time if busy p-persistent: Probabilistic transmission in idle slots Hidden terminal problem: Collisions still occur due to propagation delay1 Vulnerability example: Station B starts transmitting at t1. Station C at t2 (t2 &gt; t1) also transmits before B's signal arrives, causing collision1.Used in wired Ethernet networks:\nCollision detection: Stations monitor channel during transmission Jamming signal: Sent to notify all stations of collision Binary exponential backoff: Colliding stations wait random time before retry Minimum frame size: Critical for collision detection: Minimum&nbsp;frame&nbsp;size=2×Propagation&nbsp;delay×Bandwidth\\text{Minimum frame size} = 2 \\times \\text{Propagation delay} \\times \\text{Bandwidth}Minimum&nbsp;frame&nbsp;size=2×Propagation&nbsp;delay×Bandwidth Example: For 10 Mbps network with 25.6μs delay: 2×25.6μs×10Mbps=512&nbsp;bits&nbsp;(64&nbsp;bytes)[1]2 \\times 25.6\\mu s \\times 10\\text{Mbps} = 512\\text{ bits (64 bytes)}[1]2×25.6μs×10Mbps=512&nbsp;bits&nbsp;(64&nbsp;bytes)[1]\nUsed in wireless networks (Wi-Fi):\nThree collision avoidance mechanisms: Interframe Space (IFS): Priority-based waiting periods\nContention Window: Random backoff timer slots\nACKs: Mandatory acknowledgments for successful transmission Energy sensing: Differentiates between idle/busy states through energy levels Virtual carrier sensing: Uses NAV (Network Allocation Vector) for reservation Process flow:\nWait IFS period if channel idle\nEnter contention window with random backoff\nTransmit if channel remains idle after backoff\nWait for ACK timeout1\nThese protocols demonstrate an evolution from simple contention-based systems (ALOHA) to sophisticated collision handling mechanisms (CSMA/CD/CA), each addressing specific network requirements and physical layer constraints. The choice of protocol depends on network type (wired/wireless), latency tolerance, and efficiency requirements.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/collection_2176a485-c612-4054-bbcf-09d953e91fae/d591dd59-c771-43f1-aec1-9438cc3206c2/lecture-Multiple-Access-upload-14.2.2021.pptx\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/collection_2176a485-c612-4054-bbcf-09d953e91fae/d591dd59-c771-43f1-aec1-9438cc3206c2/lecture-Multiple-Access-upload-14.2.2021.pptx</a>\n<br>Answer from Perplexity: <a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">pplx.ai/share</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Pure ALOHA","level":2,"id":"Pure_ALOHA_0"},{"heading":"Slotted ALOHA","level":2,"id":"Slotted_ALOHA_0"},{"heading":"CSMA (Carrier Sense Multiple Access)","level":2,"id":"CSMA_(Carrier_Sense_Multiple_Access)_0"},{"heading":"CSMA/CD (Collision Detection)","level":2,"id":"CSMA/CD_(Collision_Detection)_0"},{"heading":"CSMA/CA (Collision Avoidance)","level":2,"id":"CSMA/CA_(Collision_Avoidance)_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":["cn/csmacd.html","cn/csma.html","cn/slottedaloha.html","cn/purealoha.html"],"author":"","coverImageURL":"","fullURL":"cn/randomaccess.html","pathToRoot":"..","attachments":[],"createdTime":1748856040261,"modifiedTime":1749740409360,"sourceSize":4252,"sourcePath":"CN/RandomAccess.md","exportPath":"cn/randomaccess.html","showInTree":true,"treeOrder":127,"backlinks":[],"type":"markdown"},"cn/slottedaloha.html":{"title":"SlottedALOHA","icon":"","description":"Slotted ALOHA is an enhancement of the Pure ALOHA protocol that aims to reduce collisions and improve efficiency in shared communication channels. It introduces time synchronization by dividing the channel into discrete time slots, allowing stations to transmit only at the beginning of these slots.<img alt=\"SlottedALOHA1.png\" src=\"cn/img/slottedaloha1.png\" target=\"_self\">\nTime Slots: The channel is divided into equal-sized time slots, and stations can only begin transmission at the start of a slot. This synchronization reduces the chances of overlapping transmissions.\nCollision Detection: If two or more stations transmit during the same slot, their frames collide, resulting in corrupted data.\nAcknowledgment: After transmitting a frame, a station waits for an acknowledgment from the receiver. If no acknowledgment is received, the station assumes collision occurred.\nRetransmission: Stations wait for a random amount of time before retransmitting their frames, reducing repeated collisions.\n<br><img alt=\"SlottedALOHA2.png\" src=\"cn/img/slottedaloha2.png\" target=\"_self\">\nSynchronization: All stations must agree on the timing of slots to ensure transmissions align with slot boundaries.\nReduced Vulnerable Time: The vulnerable period for collisions is reduced to one frame time (T), compared to two frame times (2T) in Pure ALOHA.\nRandom Backoff: After a collision, stations select a random backoff time before retrying, minimizing repeated collisions.\nThroughput ((S)) measures the efficiency of successful transmissions and is calculated using:Where:\n(G): Offered load (average number of transmission attempts per unit time).\n(e): Euler's constant . Occurs when (G = 1).\nMaximum throughput is:\nThis means that Slotted ALOHA achieves up to 36.8% efficiency, which is double that of Pure ALOHA.\nImproved Efficiency: The use of time slots reduces collision probability and increases throughput.\nSimplicity: Easy to implement with minimal overhead.\nBetter Performance: Suitable for networks with moderate traffic loads. Synchronization Requirement: All stations must synchronize their clocks to align with slot boundaries, which adds complexity.\nCollisions Still Occur: While reduced, collisions are not eliminated entirely.\nLimited Throughput: Efficiency remains relatively low compared to other protocols like CSMA/CD.\nSlotted ALOHA is used in systems where simplicity and moderate efficiency are acceptable, such as:\nEarly satellite communication systems.\nRFID (Radio Frequency Identification) systems for inventory tracking.\nSlotted ALOHA improves upon Pure ALOHA by introducing synchronization and reducing collision probability, making it more efficient for shared communication channels. However, its performance is still limited compared to more advanced protocols like CSMA/CD or CSMA/CA.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Slotted ALOHA Protocol","level":1,"id":"Slotted_ALOHA_Protocol_0"},{"heading":"How Slotted ALOHA Works","level":2,"id":"How_Slotted_ALOHA_Works_0"},{"heading":"Key Features","level":2,"id":"Key_Features_0"},{"heading":"Throughput Calculation","level":2,"id":"Throughput_Calculation_0"},{"heading":"Maximum Throughput:","level":3,"id":"Maximum_Throughput_0"},{"heading":"Advantages","level":2,"id":"Advantages_0"},{"heading":"Limitations","level":2,"id":"Limitations_0"},{"heading":"Applications","level":2,"id":"Applications_0"},{"heading":"Comparison with Pure ALOHA","level":2,"id":"Comparison_with_Pure_ALOHA_0"},{"heading":"Conclusion","level":2,"id":"Conclusion_0"}],"links":[],"author":"","coverImageURL":"cn/img/slottedaloha1.png","fullURL":"cn/slottedaloha.html","pathToRoot":"..","attachments":["cn/img/slottedaloha1.html","cn/img/slottedaloha2.html"],"createdTime":1748856206903,"modifiedTime":1748856206909,"sourceSize":3681,"sourcePath":"CN/SlottedALOHA.md","exportPath":"cn/slottedaloha.html","showInTree":true,"treeOrder":128,"backlinks":["cn/randomaccess.html"],"type":"markdown"},"cn/tcp.html":{"title":"TCP","icon":"","description":"\nTCP operates at the transport layer (Layer 4) and provides a reliable, ordered, and error-checked communication service between applications running on different hosts connected via an IP network Like UDP, TCP uses port numbers as transport layer Address.\nIf an application can use both UDP and TCP, the same port number is assigned to this application.\nTCP is described as a stream-oriented protocol, it means that it treats the data being sent between two applications as a continuous, ordered sequence of bytes (or octets), rather than as a series of distinct messages or packets.\nTCP creates an environment in which the two processes seem to be connected by an imaginary “tube” that carries their data across the Internet.\n<img src=\"cn/img/11.png\" target=\"_self\">\nBuffers are needed for storage, because the sending and receiving processes may not produce and consume data at the same speed.\nThere are to buffers, one for each direction\nOne way to implement a buffer is to use a circular array of 1-Byte locations, as shown\nNormally the buffers are hundreds or thousands of Bytes, depending on the implementation.\n<br><img src=\"cn/img/12.png\" target=\"_self\">\nAt sending side, the buffer has three types of locations:\nThe white section contains empty locations that can be filled by the sending process (producer).\nThe grey area holds Bytes that have been sent but not yet acknowledged. (TCP keeps the Bytes in the buffer until it receives an acknowledgement).\nThe colored area are Bytes to be send by sending TCP.\nHowever, TCP may be able to send only part of this colored section, due to the slowness of the receiving process or congestion in the network.\nThe circular shape is due to the fact that after Bytes in the grey locations are acknowledged, the location is recycled and available for use by sending process. The operation of the buffer at the receiver site is simpler.\nThe circular buffer is divided into two areas (white and colored).\nThe white area contains empty locations to be filled by Bytes received from the network.\nThe colored sections contain received Bytes that can be consumed by receiving process.\nWhen a Byte is consumed by the receiving process, the location is recycled and added to the pool of empty locations.\nTCP (Transmission Control Protocol) implements several key mechanisms to provide reliable data transmission over an unreliable IP network. The process of converting a continuous byte stream into discrete segments is fundamental to TCP's operation.TCP operates on a stream-oriented model where applications send data as a continuous stream of bytes. However, the underlying IP layer requires data to be packaged into discrete packets. To bridge this gap, TCP groups bytes together into units called segments.<br><img alt=\"TCPsegmentflow.png\" src=\"cn/img/tcpsegmentflow.png\" target=\"_self\">The segmentation process works as follows:\nTCP accepts data from the application as a stream of bytes.\nIt divides this data into chunks and adds a TCP header to create TCP segments.\nEach segment is then encapsulated into an IP datagram for transmission.\nSegments are not necessarily the same size and can carry hundreds of bytes.\nThe TCP implementation collects bytes from the bytestream one by one and places them into a TCP segment. When the segment reaches a fixed maximum segment size (MSS), it is sent, and a new segment is started. If data is ready to send but doesn't fill a complete segment, a timer ensures the segment is sent even if not full.Since sending and receiving processes cannot produce and consume data at the same speed, TCP uses buffers for storage. Each TCP connection maintains:\nSending buffer: Contains bytes waiting to be sent, bytes sent but not yet acknowledged, and empty locations.\nReceiving buffer: Contains received bytes waiting for the application to consume them and empty locations.\nTCP provides full-duplex communication where data can flow in both directions simultaneously. Each TCP endpoint maintains both a sending buffer and receiving buffer, allowing segments to be transmitted in both directions concurrently.TCP establishes a virtual connection before data exchange through a three-step process:\nTCP at process A informs TCP at process B and gets approval.\nBoth TCPs exchange data in both directions.\nAfter data exchange is complete and buffers are empty, both TCPs destroy their buffers.\nThe connection is virtual rather than physical - TCP segments can be sent out of order, lost, or corrupted, and may take different paths to reach the destination.TCP ensures reliability through an acknowledgment mechanism that verifies safe data arrival. It uses sequence numbers, acknowledgments, checksums, timers, and retransmission to ensure correct and in-order delivery.TCP employs a sophisticated numbering system for tracking data:Byte Numbering:\nTCP numbers all data bytes transmitted in a connection.\nNumbering is independent in each direction.\nThe starting number is randomly chosen between 0 and 2³²-1, not necessarily starting from 0.\nFor example, if the random number is 1,057 and 6,000 bytes are to be sent, bytes are numbered from 1,057 to 7,056.\nSequence Numbers:\nAfter bytes are numbered, TCP assigns a sequence number to each segment.\nThe sequence number for each segment represents the number of the first byte carried in that segment.\nThese sequence numbers enable the receiver to detect lost packets, reorder out-of-sequence segments, and eliminate duplicates.\nThis comprehensive system allows TCP to provide reliable, ordered data delivery despite operating over an unreliable network layer, making it suitable for applications requiring guaranteed data integrity.TCP (Transmission Control Protocol)TCP is a connection-oriented protocol that provides reliable, ordered data transmission between devices. The concepts you've outlined accurately describe TCP's fundamental mechanisms for managing communication sessions.TCP supports full-duplex communication, meaning both parties can send and receive data simultaneously. This bidirectional capability is enabled by TCP maintaining two separate buffers - one for sending and one for receiving - with independent control over each data stream. Unlike half-duplex communication where sending and receiving happen alternately, full-duplex enables concurrent transmission and reception, similar to a telephone conversation where both parties can speak and listen at the same time.Each TCP connection uses separate sequence numbering for each direction of communication. The sequence number indicates how much data has been sent during the TCP session, while the acknowledgment number is sent by the receiver to indicate it has received cumulative data and is ready for the next segment.TCP acknowledgments are cumulative. When a receiver sends an acknowledgment number, it confirms receipt of all bytes up to that point in sequence. For example, if the acknowledgment number is 5643, it means the receiver has successfully received all bytes from the beginning up to byte 5642.Calculation Example:\nClient sends segment with seq=1, length=669 bytes\nServer responds with ack=670 (1 + 669 = 670)\nClient sends next segment with seq=670, length=1460 bytes\nServer responds with ack=2130 (670 + 1460 = 2130)\nThe acknowledgment number represents the next expected byte number, calculated as: ACK = previous sequence number + number of bytes received.The TCP segment is the fundamental unit of data transfer in TCP communication. Understanding its structure is crucial for comprehending how TCP achieves reliable data transmission.<br><img alt=\"TCPHeader.png\" src=\"cn/img/tcpheader.png\" target=\"_self\">A TCP segment consists of two main parts:\nHeader: 20-60 bytes containing control information.\nData: Application layer data (payload). Minimum size: 20 bytes (when no options are present).\nMaximum size: 60 bytes (when options field is fully utilized).\nOptions field: Can add up to 40 bytes of additional information.\nSource Port Address (16 bits)\nIdentifies the port number of the sending application.\nAllows the receiving system to know which application sent the data.\nRange: 0-65,535.\nDestination Port Address (16 bits)\nSpecifies the port number of the receiving application.\nEnables proper delivery to the correct application on the destination host.\nRange: 0-65,535.\nSequence Number (32 bits)\nIndicates the byte number assigned to the first byte of data in this segment.\nUsed for ordering segments and detecting lost packets.\nEssential for TCP's reliable delivery mechanism.\nAcknowledgment Number (32 bits)\nSpecifies the next byte number the sender expects to receive.\nFollows the formula: If byte x was successfully received, acknowledgment = x+1.\nEnables cumulative acknowledgment mechanism.\nHeader Length/Data Offset (4 bits)\nIndicates the TCP header length in 32-bit words.\nValue range: 5 to 15. 5 × 4 = 20 bytes (minimum header).\n15 × 4 = 60 bytes (maximum header). Tells the receiver where the data portion begins.\nReserved Field (6 bits)\nCurrently unused bits set to zero.\nReserved for future protocol enhancements.\nMust be ignored by current implementations.\nThe control field contains six flags that manage TCP connection states and data handling:<br><img alt=\"TCPHeaderFlags.png\" src=\"cn/img/tcpheaderflags.png\" target=\"_self\">Window Size (16 bits)\nSpecifies the number of bytes the receiver can accept.\nMaximum value: 65,535 bytes (unless extended by options).\nImplements TCP's flow control mechanism.\nPrevents sender from overwhelming the receiver.\nChecksum (16 bits)\nContains error detection information for the entire segment.\nCalculated using the same procedure as UDP.\nCovers both header and data portions.\nEnsures data integrity during transmission.\nUrgent Pointer (16 bits)\nValid only when URG flag is set.\nPoints to the last byte of urgent data in the segment.\nCalculation: Sequence Number + Urgent Pointer = Last urgent byte position.\nEnables priority data transmission.\nOptions Field (0-40 bytes)\nProvides extensibility for additional TCP features.\nCommon options include: Maximum Segment Size (MSS).\nWindow scaling.\nTimestamps.\nSelective acknowledgments. The control flags work together to manage TCP connections:\nConnection establishment: Uses SYN flags.\nData transfer: Uses ACK flags for acknowledgments.\nConnection termination: Uses FIN flags.\nMultiple fields ensure reliable transmission:\nSequence numbers provide ordering.\nAcknowledgment numbers confirm receipt.\nChecksums detect corruption.\nWindow size prevents overflow.\nSeveral fields enhance performance:\nWindow size enables flow control.\nUrgent pointer allows priority data.\nOptions field supports advanced features.\nThis comprehensive header structure enables TCP to provide reliable, ordered, and error-checked data transmission while maintaining efficient flow control and connection management capabilities.TCP is a connection-oriented protocol that establishes a virtual path between source and destination. This virtual connection ensures reliable data delivery through sequence numbering, acknowledgments, and retransmission mechanisms. The full-duplex nature of TCP allows both parties to send data simultaneously in both directions.The three-way handshake is fundamental to TCP connection establishment, involving three distinct steps that synchronize both communicating endpoints.Step 1: SYN (Synchronize)\nThe client initiates the connection by sending a SYN segment to the server. This segment contains:\nSource and destination port numbers\nThe client's Initial Sequence Number (ISN) - a randomly chosen 32-bit number\nSYN flag set to 1, ACK flag set to 0\nWindow size and maximum segment size parameters\nStep 2: SYN-ACK (Synchronize-Acknowledge)\nThe server responds with a segment serving dual purposes:\nAcknowledgment: Uses the ACK flag set to 1 and acknowledgment number equal to client's ISN + 1\nSynchronization: Includes the server's own ISN for data flowing from server to client\nThe server advertises its window size and maximum segment size\nStep 3: ACK (Acknowledge)\nThe client sends the final acknowledgment:\nACK flag set to 1\nAcknowledgment number equal to server's ISN + 1\nConfirms the server's readiness and establishes the connection\nData transmission can begin with this segment\nTCP uses a four-way handshake for termination because it's actually two pairs of two-way handshakes. Since TCP is full-duplex, each direction of the connection must be closed independently. When one side sends a FIN, it only closes communication in one direction - the sender can no longer transmit data but can still receive data from the other side.Step 1: Initial FIN\nThe initiating party (client or server) sends a FIN segment to signal it has no more data to send.Step 2: ACK Response\nThe receiving party acknowledges the FIN with an ACK segment. The acknowledgment number equals the sequence number from the FIN plus 1.Step 3: Second FIN\nThe receiving party sends its own FIN segment when it has finished sending data in its direction.Step 4: Final ACK\nThe original initiator acknowledges the second FIN with an ACK segment, completing the termination.Between steps 2 and 3, the connection exists in a half-closed state. During this period:\nThe initial sender cannot transmit new data but can receive.\nThe other party can continue sending data until ready to close its side.\nThis allows for complete data transmission before full closure.\nTCP also supports immediate connection termination using RST (reset) segments, which differs from the graceful four-way handshake. RST segments are sent in specific scenarios:When RST is Used:\nConnection request to a non-existent port.\nAbnormal connection conditions requiring immediate termination.\nDetection of idle connections that need cleanup.\nSecurity threats detected by firewalls.\nProtocol violations or unexpected packets.\nRST Behavior:\nA TCP reset immediately terminates the connection. Unlike the graceful FIN process, RST causes both endpoints to immediately close the connection and discard any undelivered data.The four-way handshake ensures graceful termination where all data is properly delivered and acknowledged before closure. This prevents data loss and allows applications to complete their operations cleanly.In contrast, RST provides abrupt termination for error conditions or security situations where immediate closure is necessary, even if it means losing data in transit.The four-way process reflects TCP's commitment to reliable communication, ensuring that both parties can complete their data transmission obligations before the connection fully terminates.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"TCP ( Transmission Control Protocol )","level":1,"id":"TCP_(_Transmission_Control_Protocol_)_0"},{"heading":"TCP Buffers","level":2,"id":"TCP_Buffers_0"},{"heading":"Sender Side Buffer:","level":3,"id":"Sender_Side_Buffer_0"},{"heading":"Receiver Side Buffer:","level":3,"id":"Receiver_Side_Buffer_0"},{"heading":"TCP Segmentation and Services","level":2,"id":"TCP_Segmentation_and_Services_0"},{"heading":"Bytes and Segments","level":3,"id":"Bytes_and_Segments_0"},{"heading":"Buffering and Flow Control","level":3,"id":"Buffering_and_Flow_Control_0"},{"heading":"Full-Duplex Service","level":2,"id":"Full-Duplex_Service_0"},{"heading":"Connection-Oriented Service","level":3,"id":"Connection-Oriented_Service_0"},{"heading":"Reliable Service","level":3,"id":"Reliable_Service_0"},{"heading":"Numbering System","level":2,"id":"Numbering_System_0"},{"heading":"TCP Full-Duplex Communication","level":2,"id":"TCP_Full-Duplex_Communication_0"},{"heading":"Sequence and Acknowledgment Numbers","level":2,"id":"Sequence_and_Acknowledgment_Numbers_0"},{"heading":"Cumulative Acknowledgments","level":3,"id":"Cumulative_Acknowledgments_0"},{"heading":"TCP Segment Structure and Header Fields","level":1,"id":"TCP_Segment_Structure_and_Header_Fields_0"},{"heading":"TCP Segment Composition","level":2,"id":"TCP_Segment_Composition_0"},{"heading":"Header Size Variations","level":2,"id":"Header_Size_Variations_0"},{"heading":"TCP Header Fields Breakdown","level":2,"id":"TCP_Header_Fields_Breakdown_0"},{"heading":"Port Information (32 bits total)","level":3,"id":"Port_Information_(32_bits_total)_0"},{"heading":"Sequence Management (64 bits total)","level":3,"id":"Sequence_Management_(64_bits_total)_0"},{"heading":"Header Control Information","level":3,"id":"Header_Control_Information_0"},{"heading":"Control Flags (6 bits)","level":3,"id":"Control_Flags_(6_bits)_0"},{"heading":"Flow Control and Error Detection","level":3,"id":"Flow_Control_and_Error_Detection_0"},{"heading":"Special Data Handling","level":3,"id":"Special_Data_Handling_0"},{"heading":"Practical Applications","level":3,"id":"Practical_Applications_0"},{"heading":"Connection Management","level":4,"id":"Connection_Management_0"},{"heading":"Data Reliability","level":4,"id":"Data_Reliability_0"},{"heading":"Performance Optimization","level":4,"id":"Performance_Optimization_0"},{"heading":"TCP Connection-Oriented Protocol","level":1,"id":"TCP_Connection-Oriented_Protocol_0"},{"heading":"Three-Way Handshake Process","level":2,"id":"Three-Way_Handshake_Process_0"},{"heading":"Why Four Steps Are Required","level":2,"id":"Why_Four_Steps_Are_Required_0"},{"heading":"Four-Way Handshake Process","level":2,"id":"Four-Way_Handshake_Process_0"},{"heading":"Half-Closed Connection State","level":2,"id":"Half-Closed_Connection_State_0"},{"heading":"TCP Reset (RST) - Abrupt Termination","level":2,"id":"TCP_Reset_(RST)_-_Abrupt_Termination_0"},{"heading":"Graceful vs Abrupt Termination","level":2,"id":"Graceful_vs_Abrupt_Termination_0"}],"links":[],"author":"","coverImageURL":"cn/img/11.png","fullURL":"cn/tcp.html","pathToRoot":"..","attachments":["cn/img/11.html","cn/img/12.html","cn/img/tcpsegmentflow.html","cn/img/tcpheader.html","cn/img/tcpheaderflags.html"],"createdTime":1748771288035,"modifiedTime":1749740409557,"sourceSize":16754,"sourcePath":"CN/TCP.md","exportPath":"cn/tcp.html","showInTree":true,"treeOrder":129,"backlinks":["cn/standard-clint-service-protocols/ftp.html"],"type":"markdown"},"cn/tcp-ip.html":{"title":"TCP IP","icon":"","description":"The&nbsp;TCP/IP protocol suite&nbsp;is the foundation of modern networking, enabling communication and data transfer across the internet and other networks. It is both a protocol suite (a collection of protocols) and a layered communication model.\nTCP&nbsp;(Transmission Control Protocol) ensures reliable, ordered, and error-checked delivery of data between applications.\nIP&nbsp;(Internet Protocol) handles addressing and routing, ensuring data packets are sent to the correct destination.\nTCP/IP is a practical, scalable, and non-proprietary model that supports interoperability across diverse networks and devices The layers in the TCP/IP protocol suite do not exactly match those in the OSI model\nThe original TCP/IP protocol suite was defined as having four layers: host-to-network, internet, transport, and application.\nHowever, when TCP/IP is compared to OSI, we can say that the TCP/IP protocol suite is made of five layers: physical, data link, network, transport, and application. Reference Model:&nbsp;Both the OSI as well as the TCP/IP are reference models. This means that we can take a reference or help from the specification of these two models during implementing the network.\nLayered Architecture:&nbsp;Both the OSI and TCP/IP model have a layered architecture. Each layer provides different functionalities in the network. The OSI model has generally 7 layers, while the TCP/IP has 5 layers.\nProtocols: Both the OSI as well as the TCP/IP model makes use of different protocols in different layers for the proper implementation of the model over the network.\nFunctionalities:&nbsp;The layers of the OSI and the TCP/IP model provides approximately the same functionality. The Application layer of the TCP/IP model acts as the upper three layers(Application, Presentation, and Session layer) of the OSI model, while the Internet layer in the TCP/IP model acts as the Network layer of the OSI model. Rest of the layers in both the models works the same.\nThe OSI model and the TCP/IP model differ significantly in terms of structure, development, functionality, and practical application. Below is a detailed comparison of their dissimilarities. Layer Structure OSI Model: Consists of seven layers: Physical, Data Link, Network, Transport, Session, Presentation, and Application.\nTCP/IP Model: Has four layers: Network Access, Internet, Transport, and Application. It combines the OSI model’s Application, Presentation, and Session layers into a single Application layer and merges the Physical and Data Link layers into the Network Access layer. Development Approach OSI Model: Developed as a theoretical framework by the International Organization for Standardization (ISO) to standardize networking concepts before implementation. It is protocol-independent.\nTCP/IP Model: Created by DARPA as a practical framework based on existing protocols to meet the immediate needs of reliable communication over the internet. It is protocol-dependent. Conceptual vs Practical OSI Model: A conceptual model used as guidance for network design and understanding. It focuses on defining services, interfaces, and protocols clearly.\nTCP/IP Model: A practical implementation used for real-world networking. It lacks clear separation between services, interfaces, and protocols. Protocol Specification OSI Model: Protocol-independent; allows flexibility to implement custom protocols as needed.\nTCP/IP Model: Protocol-specific; relies on predefined protocols like TCP and IP. Replacing or modifying protocols is complex. Reliability OSI Model: The transport layer guarantees delivery of packets through connection-oriented communication.\nTCP/IP Model: The transport layer supports both connection-oriented (TCP) and connectionless (UDP) communication but does not guarantee delivery of packets. Layer Functions OSI Model: Distinctly separates the Presentation and Session layers for tasks like encryption, compression, and synchronization.\nTCP/IP Model: Does not have separate Presentation or Session layers; these functions are handled within the Application layer. Documentation OSI Model: Well-documented with clear specifications for services, interfaces, and protocols.\nTCP/IP Model: Less formally documented; specifications are not as detailed or standardized. Network Focus OSI Model: Designed as a universal model applicable to various types of networks beyond the internet.\nTCP/IP Model: Focuses specifically on internet-based communication architecture. Ease of Setup OSI Model: Easier to set up due to its standardized approach and modularity.\nTCP/IP Model: More complex to configure because it is tightly coupled with specific protocols and internet architecture. Modularity OSI Model: Highly modular with seven distinct layers providing clear functionality separation.\nTCP/IP Model: Less modular due to fewer layers (four), combining functionalities into broader categories like the Application layer. Connection Mechanisms OSI Model: Lacks specialized mechanisms for secure connections.\nTCP/IP Model: Implements mechanisms like the three-way handshake in TCP for reliable and secure connections. Summary Table“Pasted image 20250306051622.png” could not be found.“Pasted image 20250306051539.png” could not be found.The TCP/IP model consists of four layers, each with specific roles and associated protocols:1. Application Layer\nFunction: Directly interacts with software applications to provide network services to end users.\nProtocols: HTTP (Hypertext Transfer Protocol): Web browsing\nFTP (File Transfer Protocol): File transfers\nSMTP (Simple Mail Transfer Protocol): Email\nDNS (Domain Name System): Resolves domain names into IP addresses Example: When you browse a website, HTTP operates at this layer to fetch web pages.\n2. Transport Layer\nFunction: Ensures reliable communication between sender and receiver by segmenting data into packets, managing flow control, error correction, and sequencing.\nKey Protocols: TCP: Connection-oriented protocol ensuring reliable data transmission.\nUDP (User Datagram Protocol): Connectionless protocol for faster but less reliable communication (e.g., video streaming). Example: TCP ensures all parts of an email are received in the correct order.\n3. Internet Layer\nFunction: Handles addressing, routing, and delivering packets across multiple networks.\nKey Protocols: IP: Provides logical addressing (IP addresses) for devices.\nICMP (Internet Control Message Protocol): Used for error reporting and diagnostics (e.g., ping). Example: The IP protocol ensures that packets from a sender in one network reach the recipient in another network.\n4. Network Access Layer (or Link Layer)\nFunction: Manages the physical transmission of data over hardware like Ethernet or Wi-Fi. Converts data into electrical signals or radio waves for transmission.\nKey Protocols: Ethernet: Local area network communication.\nARP (Address Resolution Protocol): Maps IP addresses to physical MAC addresses. Example: This layer ensures your computer's network card can send data over a wired or wireless connection.\nHow TCP/IP Works Data from an application is passed down through the layers: The Application Layer generates the data.\nThe Transport Layer segments it into packets and assigns sequence numbers.\nThe Internet Layer adds source and destination IP addresses for routing.\nThe Network Access Layer converts packets into signals for transmission. At the receiving end: The process is reversed as packets move up the layers to reassemble the original message. This encapsulation and decapsulation process ensures reliable communication between devices.Advantages of TCP/IP\nInteroperability: Works across different hardware platforms and operating systems.\nScalability: Supports small local networks to large global networks like the internet.\nReliability: Features like error correction and retransmission ensure accurate delivery.\nFlexibility: Can adapt to various technologies like Ethernet, Wi-Fi, or fiber optics.\nReal-Life Example When you send an email:\nAt the Application Layer, SMTP formats your message.\nAt the Transport Layer, TCP segments it into packets with sequence numbers.\nAt the Internet Layer, IP assigns addresses for routing.\nAt the Network Access Layer, Ethernet transmits it over a physical medium.\nAt the recipient's end, these steps are reversed to deliver your email intact.In conclusion, TCP/IP is indispensable for modern networking due to its reliability, scalability, and compatibility with diverse systems. It underpins everything from web browsing to file transfers and video streaming.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Overview of TCP/IP:","level":5,"id":"Overview_of_TCP/IP_0"},{"heading":"OSI and TCP IP:","level":4,"id":"OSI_and_TCP_IP_0"},{"heading":"Similarities between the OSI and TCP/IP:","level":4,"id":"Similarities_between_the_OSI_and_TCP/IP_0"},{"heading":"Dissimilarities between the OSI and the TCP/IP:","level":4,"id":"Dissimilarities_between_the_OSI_and_the_TCP/IP_0"},{"heading":"Layers of the TCP/IP Model","level":4,"id":"Layers_of_the_TCP/IP_Model_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"cn/tcp-ip.html","pathToRoot":"..","attachments":[],"createdTime":1748856020276,"modifiedTime":1748856020277,"sourceSize":10201,"sourcePath":"CN/TCP IP.md","exportPath":"cn/tcp-ip.html","showInTree":true,"treeOrder":130,"backlinks":["cn/osi.html"],"type":"markdown"},"cn/topologies.html":{"title":"Topologies","icon":"","description":"<a class=\"internal-link\" data-href=\"OSI.md\" href=\"cn/osi.html\" target=\"_self\" rel=\"noopener nofollow\"></a>A network topology defines how devices (nodes) are interconnected in a network. Each type has unique strengths and weaknesses suited for specific use cases.<br><img alt=\"Topologies.jpg\" src=\"cn/img/topologies.jpg\" target=\"_self\">Structure: All devices share a single communication line (central bus).\nAdvantages:\n<br>Inexpensive and simple to set up<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. <br>Suitable for small networks<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a>. <br>Minimal cabling required<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a>.\nDisadvantages: <br>A single bus failure disrupts the entire network<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>. <br>Performance degrades with high traffic or added nodes<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. <br>Limited cable length and security risks (all nodes see transmitted data)<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a>. Structure: Devices connect to a central hub or switch.\nAdvantages:\n<br>Easy to troubleshoot and isolate faults<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>. <br>Adding/removing nodes doesn’t affect the network<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a>. <br>Centralized management improves security<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>.\nDisadvantages: <br>Hub failure disables the entire network<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>. <br>Higher setup and maintenance costs<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a>. <br>Performance depends on hub capacity<a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. Structure: Nodes form a closed loop with unidirectional data flow.\nAdvantages:\n<br>Predictable performance with token-based protocols<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. <br>No central hub required<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>. <br>Handles moderate traffic better than bus topology<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>.\nDisadvantages: <br>Single node or link failure disrupts the network<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>. <br>Complex to scale or modify (requires network shutdown)<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. Structure: Two concentric rings for bidirectional data flow.\nAdvantages:\n<br>Redundant paths enhance fault tolerance<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>. <br>Reduced collision risk<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>.\nDisadvantages: <br>Higher complexity and cost<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>. <br>Still vulnerable to multiple failures<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>. Structure: Each node connects directly to every other node.\nAdvantages:\n<br>High reliability with multiple data paths<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a>. <br>Robust under heavy traffic<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a>. <br>Enhanced security through dedicated links<a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>.\nDisadvantages: <br>Extremely high cabling and setup costs<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>. <br>Complex to configure and maintain<a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. Structure: Hierarchical mix of bus and star topologies.\nAdvantages:\n<br>Scalable for large networks (e.g., corporate offices)<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a>. <br>Easy fault isolation in branches<a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. <br>Supports mixed media (cables, wireless)<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>.\nDisadvantages: <br>Backbone failure cripples the network<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a>. <br>High installation and maintenance costs<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>. Small networks: Use Bus or Star for simplicity and low cost. High reliability: Mesh or Dual Ring for redundancy. Large enterprises: Tree topology offers scalable hierarchy. Legacy systems: Ring suits deterministic, low-collision needs. Choose a topology based on budget, scalability requirements, and fault tolerance needs.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">https://www.connectwise.com/blog/rmm/what-is-network-topology</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">https://www.geektonight.com/network-topology-advantages-disadvantages/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">https://intellipaat.com/blog/network-topology/</a>\n<br>Answer from Perplexity: <a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">pplx.ai/share</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Network Topologies","level":3,"id":"Network_Topologies_0"},{"heading":"1. Bus Topology","level":2,"id":"1._Bus_Topology_0"},{"heading":"2. Star Topology","level":2,"id":"2._Star_Topology_0"},{"heading":"3. Ring Topology","level":2,"id":"3._Ring_Topology_0"},{"heading":"<strong>Dual Ring Topology</strong>","level":2,"id":"**Dual_Ring_Topology**_0"},{"heading":"4. Mesh Topology","level":2,"id":"4._Mesh_Topology_0"},{"heading":"5. Tree Topology","level":2,"id":"5._Tree_Topology_0"},{"heading":"<strong>Summary Table</strong>","level":2,"id":"**Summary_Table**_0"},{"heading":"<strong>Key Takeaways</strong>","level":2,"id":"**Key_Takeaways**_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":["cn/osi.html"],"author":"","coverImageURL":"cn/img/topologies.jpg","fullURL":"cn/topologies.html","pathToRoot":"..","attachments":["cn/img/topologies.html"],"createdTime":1748855462942,"modifiedTime":1749740409627,"sourceSize":9999,"sourcePath":"CN/Topologies.md","exportPath":"cn/topologies.html","showInTree":true,"treeOrder":131,"backlinks":["cn/datacommunication.html"],"type":"markdown"},"cn/udp.html":{"title":"UDP","icon":"","description":"\nUDP is a connectionless, unreliable protocol that has no flow and error control. It uses port numbers to multiplex data from the application layer. UDP is a simple, connectionless and unreliable transport-layer protocol.\nIt does not add anything to the services of IP except for providing process-to-process communication.\nUDP performs a very limited error checking.\nUDP packets are called&nbsp;Datagrams&nbsp;and have fixed size header of 8 Bytes.\nIn UDP a process (an application program) sends a chunk of bytes to UDP for delivery.\nUDP adds its own header to this chunk of data, which is then called a user datagram, and delivers it to IP for transmission.\nThe process may deliver several chunks of data to UDP, but UDP treats each chunk independently without seeing any connection between them.\nIt is not usually used for process that needs to send bulk data, such as FTP.\nThe trivial File Transport Protocol (TFTP) includes flow and error control.\nMulticasting capabilities are embedded in the UDP software but not in TCP software.\nUDP is used for some route update protocols such as Routing Information Protocol (RIP).\nUDP is used in conjunction with Real Time Transport Protocol (RTP) to provide a transport-layer mechanism for real-time data.\nShow Answer&nbsp;TFTP, or Trivial File Transfer Protocol, is a simple high-level protocol for transferring data servers use to boot diskless workstations, X-terminals, and routers by using User Data Protocol (UDP).The Real-time Transport Protocol is a network protocol used to deliver streaming audio and video media over the internet, thereby enabling the Voice Over Internet Protocol (VoIP).<img src=\"cn/img/10.png\" target=\"_self\">\nSource Port Number:\n16-bit long field containing the port number used by the process running on the source. (value can be from 0 to 65,535).\nDestination Port Number:\n16-bits field containing the port number of the process running on the destination.\nLength:\n16-bit field defines the total length of the user datagram (Header + Data).\nChecksum:\nUsed to detect errors (checksum) over entire datagram. (Header + Data).\nAlthough UDP checksum should be based on the UDP header and payload (data coming from the application layer), but the designers have also added a part of IP header (only those fields not changing by the routers).\nThis ensures that those fields have not been changed from source to destination.\nThe calculation of the checksum and its inclusion in a user datagram is optional.\nIf the checksum is not calculated this field is filled with 0s.\n<br><img alt=\"CN/img/9.png\" src=\"cn/img/9.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"UDP (User Datagram Protocol)","level":1,"id":"UDP_(User_Datagram_Protocol)_0"},{"heading":"If the UDP is so powerless why would a process wants to use it?","level":4,"id":"If_the_UDP_is_so_powerless_why_would_a_process_wants_to_use_it?_0"},{"heading":"TFTP","level":6,"id":"TFTP_0"},{"heading":"RTP","level":6,"id":"RTP_0"},{"heading":"Datagrams","level":2,"id":"Datagrams_0"},{"heading":"Well Known Ports For UDP","level":2,"id":"Well_Known_Ports_For_UDP_0"}],"links":[],"author":"","coverImageURL":"cn/img/10.png","fullURL":"cn/udp.html","pathToRoot":"..","attachments":["cn/img/10.html","cn/img/9.html"],"createdTime":1748771318641,"modifiedTime":1749740409695,"sourceSize":2808,"sourcePath":"CN/UDP.md","exportPath":"cn/udp.html","showInTree":true,"treeOrder":132,"backlinks":["cn/standard-clint-service-protocols/ftp.html"],"type":"markdown"},"cn/untitled.html":{"title":"Untitled","icon":"","description":"<a class=\"internal-link\" data-href=\"HTTPstructureexp.md\" href=\"cn/standard-clint-service-protocols/httpstructureexp.html\" target=\"_self\" rel=\"noopener nofollow\"></a>## World Wide Web (WWW)The World Wide Web was introduced by Tim Berners-Lee in 1989 at CERN as a global information system linked through web pages. Initially developed for managing scientific resources, it has evolved into a distributed client-server system where users access information through web browsers.The WWW follows a distributed client-server model where each site holds one or more documents (web pages) that can contain links to other pages within the same site or at different sites. The architecture consists of:\nClient (Browser): Uses a browser program to fetch web documents.\nServer: Stores web pages and responds to client requests.\nWeb Pages: Documents that may contain links to other resources.\n<br><img alt=\"EmailWorkingBrowser.png\" src=\"cn/standard-clint-service-protocols/img/emailworkingbrowser.png\" target=\"_self\">\nController: Receives user input (keyboard/mouse) and manages access to documents.\nClient Protocol: Facilitates communication with the server (HTTP, FTP, etc.).\nInterpreters: Render and display web pages on screen (HTML, Java, JavaScript). Stores web pages and responds to client requests.\nUses caching and multi-threading to handle multiple requests simultaneously.\nRelies on Uniform Resource Locators (URLs) for addressing pages.\nA URL is a standard for specifying information on the Internet, consisting of four elements:Example URL: http://www.mhhe.com/compsci/forouzan/HTTP is the foundational protocol for accessing information on the World Wide Web, operating as a connection-oriented and reliable protocol over TCP on port 80.HTTP Characteristics:\nHTTP establishes a single TCP connection between client and server, unlike FTP which uses separate control and data connections.\nSimilar to SMTP in message structure but provides immediate delivery of web resources. Nonpersistent Connections: Create a separate TCP connection for each request-response cycle. For webpages with multiple elements, a new connection must be opened for each element, introducing overhead.\n<br><img alt=\"EmailNONPersistent.png\" src=\"cn/standard-clint-service-protocols/img/emailnonpersistent.png\" target=\"_self\">\nThe image shows an example of a nonpersistent connection. The client needs to access a file that contains one link to an image. The text file and image are located on the same server. Here we need two connections. For each connection, TCP requires at least three handshake messages to establish the connection, but the request can be sent with the third one. After the connection is established, the object can be transferred. After receiving an object, another three handshake messages are needed to terminate the connection.\nPersistent Connections: HTTP 1.1 introduced persistent connections by default, where the server keeps the connection open for further requests, reducing time and resources needed for connection establishment. Saves time and resources by avoiding repeated connection setups.\nReduces the need for multiple sets of buffers and variables at each site.\nLowers round-trip delays for connection management. <br><img alt=\"EmailPersistent.png\" src=\"cn/standard-clint-service-protocols/img/emailpersistent.png\" target=\"_self\">\nThe image shows the same scenario as in Example 26.3, but using a persistent connection. Only one connection establishment and connection termination is used, but the request for the image is sent separately.HTTP is inherently insecure, lacking built-in mechanisms for confidentiality, integrity, or authentication. To enhance security, HTTP over SSL (Secure Socket Layer) is used, commonly known as HTTPS.\nInherently insecure.\nTo enhance security HTTPS is used. Which ensures:\nConfidentiality: Encrypting data to protect from eavesdropping.\nAuthentication: Verifying identities of server and client.\nData Integrity: Protecting data from being altered during transmission.\nHTTP uses two types of messages with the same format:\nRequest line (method, URL, HTTP version)\nHeaders\nOptional body Status line (HTTP version, status code, status phrase)\nHeaders\nOptional body\nHTTP supports proxy servers, which are computers that keep copies of responses to recent requests. When a client sends a request to a proxy server:\nThe proxy server checks its cache.\nIf the response is stored, it's sent directly to the client.\nIf not cached, the proxy server requests the resource from the origin server and forwards it to the client.\nThe proxy server stores a copy for future requests.\nThis process improves performance and reduces bandwidth usage.<br><img alt=\"HTTPProxy.png\" src=\"cn/standard-clint-service-protocols/img/httpproxy.png\" target=\"_self\">\nshows an example of a use of a proxy server in a local network, such as the network on a campus or in a company. The proxy server is installed in the local network. When an HTTP request is created by any of the clients (browsers), the request is first directed to the proxy server If the proxy server already has the corresponding web page, it sends the response to the client. Otherwise, the proxy server acts as a client and sends the request to the web server in the Internet. When the response is returned, the proxy server makes a copy and stores it in its cache before sending it to the requesting client.Web Page Types:\nStatic Web Pages: These pages contain fixed content that remains the same for all users.\nDynamic Web Pages: These pages generate content on the server based on user requests or data.\n<br><img alt=\"HTTPstruct.png\" src=\"cn/standard-clint-service-protocols/img/httpstruct.png\" target=\"_self\"><br><a data-href=\"HTTPstructureexp\" href=\"cn/standard-clint-service-protocols/httpstructureexp.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">HTTPstructureexp</a><br><img alt=\"HTTPEg2.png\" src=\"cn/standard-clint-service-protocols/img/httpeg2.png\" target=\"_self\">This example demonstrates how a document is retrieved over HTTP (see Figure 26.6).The RequestThe process begins with a request. We use the GET method to retrieve an image located at the path /usr/bin/image26. The request line itself consists of three parts: the HTTP method (GET), the URL ( /usr/bin/image26), and the HTTP version (26.1). The request header includes two lines indicating that the client is capable of accepting images in either GIF or JPEG format. Notably, this request does not include a body.The ResponseThe server responds with a message composed of a status line and a header. The header contains several lines defining key information: the date, the server type, the content encoding (which follows MIME standards, explained further in the context of electronic mail), and the length of the document. Following the header is the body of the image document itself.<br><img alt=\"HTTPEg1.png\" src=\"cn/standard-clint-service-protocols/img/httpeg1.png\" target=\"_self\">This example demonstrates how a client uses the PUT method to send a web page to a server for posting.Request StructureThe request follows this general format:\nRequest Line: The request line specifies the HTTP method (PUT), the URL to be targeted, and the HTTP version (26.1).\nHeaders: A series of header lines provide additional information about the request.\nRequest Body: The request body contains the actual web page content intended for posting to the server.\nResponse StructureThe server's response to the PUT request consists of:\nStatus Line: Indicates the success or failure of the operation.\nHeaders: Provides information about the response.\nResponse Body: In this case, the response body includes the newly created document (a CGI document), as illustrated in Figure 26.7\n<br><img alt=\"EmailEgcookie.png\" src=\"cn/standard-clint-service-protocols/img/emailegcookie.png\" target=\"_self\">Figure 26.8 illustrates a scenario demonstrating how cookies can be beneficial for an electronic store. Consider a shopper interacting with BestToys.com, an online retailer specializing in toys.The process begins when the shopper’s web browser (the client) sends a request to the BestToys server. Upon receiving the request, the server creates a new, empty shopping cart – essentially, a list to hold selected items – for this specific shopper. To track this cart, the server assigns it a unique identifier (for example, 12343).The server responds to the client's request by sending a message containing images of all available toys. Each toy image is accompanied by a link that, when clicked, would add that specific toy to the shopping cart. Crucially, this response message also includes a Set-Cookie header. The value of this header is the unique cart identifier (in this example, 12343).Finally, the client's web browser receives the response and displays the toy images. The browser also stores the cookie value (12343) in a local file, typically named BestToys. This stored cookie allows the server to recognize the shopper's cart during subsequent interactions.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/2c084d5e-b92f-4b79-98d1-09d7f09e83ab/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h35m48s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/2c084d5e-b92f-4b79-98d1-09d7f09e83ab/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h35m48s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/49e1a2e2-25f6-4ade-9ab8-2d4965d118e6/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h33m23s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/49e1a2e2-25f6-4ade-9ab8-2d4965d118e6/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h33m23s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/dd32f1c2-dd6b-46f3-834f-4919e6375c52/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h32m08s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/dd32f1c2-dd6b-46f3-834f-4919e6375c52/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h32m08s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/32024888-7857-464e-86c2-d333ec90603f/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h30m48s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/32024888-7857-464e-86c2-d333ec90603f/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h30m48s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/2bd3a532-c22a-4386-abee-39e490002db8/UPLOAD-ch26-UPDATED.pdf\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/2bd3a532-c22a-4386-abee-39e490002db8/UPLOAD-ch26-UPDATED.pdf</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=APVCgkqWcQ4\" target=\"_self\">https://www.youtube.com/watch?v=APVCgkqWcQ4</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/collection_2176a485-c612-4054-bbcf-09d953e91fae/64483833-ce05-4e1e-b51b-18b0da872b78/Data-Communications-and-Networking-Behrouz-A.-Forouzan.fourth-edition-A4.pdf\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/collection_2176a485-c612-4054-bbcf-09d953e91fae/64483833-ce05-4e1e-b51b-18b0da872b78/Data-Communications-and-Networking-Behrouz-A.-Forouzan.fourth-edition-A4.pdf</a>\nWWW HTTP<br><img alt=\"HTTPstruct.png\" src=\"cn/standard-clint-service-protocols/img/httpstruct.png\" target=\"_self\">This image illustrates the detailed structure of HTTP request and response messages, showing the exact format and components that make up these fundamental web communication protocols.The diagram demonstrates that both HTTP request and response messages follow a similar four-part structure, with specific formatting requirements for each component.Request Line: Contains three essential elements:\nMethod: The HTTP method (GET, POST, PUT, etc.)\nURL: The target resource location\nVersion: The HTTP protocol version being used\nHeader Lines: Multiple header fields that provide additional information about the request:\nEach header follows the format: Header name: Value\nHeaders are separated by spaces and terminated with carriage return and line feed.\nBlank Line: A mandatory empty line that separates headers from the message body.Body: Optional section containing a variable number of lines, present only in certain message types like POST requests.Status Line: The opening line containing:\nVersion: HTTP protocol version\nStatus Code: Numerical code indicating request outcome (200, 404, 500, etc.)\nPhrase: Human-readable description of the status\nHeader Lines: Similar to request headers, providing metadata about the response:\nFollow the same Header name: Value format\nInclude information like content type, length, server details\nBlank Line: Required separator between headers and bodyBody: Contains the actual response content when applicableThe legend shows critical formatting elements:\nsp: Space characters for proper field separation\ncr: Carriage Return (ASCII 13)\nlf: Line Feed (ASCII 10)\nThese control characters ensure proper message parsing and are essential for HTTP protocol compliance. The combination of cr+lf creates the standard line ending sequence used in HTTP messages.The diagram emphasizes that both message types share the same fundamental structure, making HTTP parsing consistent regardless of whether handling requests or responses. The color coding helps distinguish between different message components - yellow for header names, gray for formatting elements, and blue for variable-length body content.This standardized format enables reliable communication between web clients and servers, forming the foundation of all web interactions.HTTPstructureexpTelnet is one of the earliest and most fundamental protocols used for remote communication over networks. Let me provide you with a comprehensive overview of this important networking protocol.Telnet (Terminal Network) is a client-server application protocol that provides access to virtual terminals of remote systems. It was developed in 1969, making it even older than the modern Internet, and was standardized as one of the first Internet standards by the Internet Engineering Task Force (IETF).Key Definition: Telnet enables bidirectional, text-based communication between two machines, allowing a user to remotely access and control a computer as if they were sitting directly at its terminal.<br><img alt=\"Telnet.png\" src=\"cn/standard-clint-service-protocols/img/telnet.png\" target=\"_self\">Telnet operates on a client-server model:\nClient: Initiates the connection (your local computer)\nServer: Accepts and responds to client requests (remote computer)\nProtocol: Uses TCP for reliable communication\nDefault Port: Port 23 (though port 2323 is also used)\n<br><img alt=\"Telnet_NVT.png\" src=\"cn/standard-clint-service-protocols/img/telnet_nvt.png\" target=\"_self\">\nOne of Telnet's key innovations is the Network Virtual Terminal (NVT) concept.Local Computer → NVT Format → Network → NVT Format → Remote ComputerThe NVT acts as a translator, converting data between the client and server's respective formats. This allows for compatibility between different systems.Telnet supports several operating modes, including:\nNetwork mode: Data is transmitted verbatim as received.\nTransparent mode: Used to connect to programs that don't use Telnet's control characters.\nAlternate mode: Offers features like full-screen operation and character echoing.\nTelnet supports several commands to manage connection settings and operations. Common commands include:Data is transmitted between the client and server using ASCII characters. Telnet includes special control characters for functions like:\nBackspace: Deletes the preceding character.\nCarriage Return: Moves the cursor to the beginning of the line.\nLine Feed: Moves the cursor to the next line.\nTelnet provides basic error handling capabilities, allowing for the detection and reporting of connection problems. Error codes can be used to diagnose and resolve issues.Telnet has been historically used for:\nRemote Administration: Accessing and managing servers from a different location.\nSoftware Testing: Remotely testing software applications.\nSimple Network Access: Allowing users to connect to network resources.\nTelnet transmits data in plain text, making it vulnerable to interception and eavesdropping. It is highly recommended to use more secure alternatives like SSH (Secure Shell) whenever possible.Due to the security concerns associated with Telnet, it has largely been superseded by more secure alternatives such as:\nSSH (Secure Shell): Provides encrypted communication channels.\nRDP (Remote Desktop Protocol): Enables graphical remote access.\nVPN (Virtual Private Network): Creates a secure connection over a public network.\nWhile Telnet remains a historically significant protocol, its inherent security vulnerabilities make it unsuitable for most modern applications. Utilizing more secure alternatives is crucial for protecting sensitive data and maintaining network integrity.Telnet<br><img alt=\"EmailArct.png\" src=\"cn/standard-clint-service-protocols/img/emailarct.png\" target=\"_self\">Email systems use an intermediary approach with specialized servers rather than direct client-to-server communication. The typical email architecture involves three main components:\nUser Agent (UA): Software that composes, reads, replies to, and forwards messages while handling mailboxes.\nMessage Transfer Agent (MTA): Responsible for transferring messages between mail servers.\nMessage Access Agent (MAA): Handles retrieval of messages from mail servers.<br>\n<img alt=\"EmailUserAgent.png\" src=\"cn/standard-clint-service-protocols/img/emailuseragent.png\" target=\"_self\">\nThe email system periodically checks the mailboxes.\nIf a user has mail, it inform the user with a notice.\nIf the user is ready to read the mail, a list displayed in which each line contains a summary of the information about a particular message in the mailbox.\nA User Agent is responsible for composing the email message to be sent out. Most user agents provide a template on the screen to be filled in by the user. Some even have a built-in editor that can do spell checking, grammar checking, and other tasks one expects from a sophisticated word processor. A user can, of course, use his or her favorite text editor or word processor to create the message and import it, or cut and paste, into the user agent.The second duty of the user agent is to read the incoming messages. When a user invokes a user agent, it first checks the mail in the incoming mailbox. Most user agents show a one-line summary of each retrieved mail which contains the following fields:\nA number field,\nA flag field that shows if the mail is new, already read but not replied to, read and replied, and so on.\nThe size of the message,\nThe sender,\nThe subject field if the subject line in the message is not empty.\nAfter reading a message, a user can use the user agent to reply to a message. Normally, a user agent allows the user to reply to the original sender or to reply to all recipients of the message. The reply message normally contains the original message (for quick reference) and the new message.Forwarding means to send the message to a third party. A user agent allows the receiver to forward the message, with or without extra comments, to a third party. Replying is defined as sending a message to the sender or recipients of the copy.A user agent creates two mailboxes:\nInbox\nOutbox\nEach box is a file with a special format that can be handled by the user agent. The inbox keeps all the received emails until they are deleted by the user. The outbox keeps all the sent emails until the user deletes them.\nCommand-driven\nGUI based\nCommand-Driven User Agents:Command-driven user agents belong to the early days of electronic mail. They are still present as the underlying user agents in servers. A command-driven user agent normally accepts a one-character command from the keyboard to perform its task. For example, a user can type the character \"r\" at the command prompt to reply to the sender of the message, or \"R\" to reply to the sender and all recipients.Some examples of command-driven user agents are Mail, Pine, and Elm. GUI-Based User Agents:Modern user agents are GUI-based. They contain graphical user interface (GUI) components that allow the user to interact with the software using both the keyboard and the mouse. They have graphical components such as icons, menu bars, and windows that make services easily accessible.Some examples of GUI-based user agents are Eudora, Microsoft’s Outlook, and Netscape.<br><img alt=\"EmailMessageStruct.png\" src=\"cn/standard-clint-service-protocols/img/emailmessagestruct.png\" target=\"_self\">An email consists of two main parts:Envelope: Contains delivery information including sender and recipient addresses, similar to postal mail envelopes.Message: Contains the header and body.\nHeader includes fields like From, To, Date, and Subject.\nBody contains the actual message content.\n<br><img alt=\"EmailProtocol.png\" src=\"cn/standard-clint-service-protocols/img/emailprotocol.png\" target=\"_self\">SMTP handles the transfer of email between servers and uses port 25. Key SMTP commands include:Common SMTP responsesPOP3 is used for retrieving email from mail servers. It operates in two modes:\nDelete mode: Mail is removed from server after retrieval (used on permanent computers).\nKeep mode: Mail remains on server after retrieval (used when accessing from temporary locations).\nPOP3 uses TCP port 110 and requires username/password authentication.IMAP4 is more advanced than POP3, offering additional features:\nCheck email headers before downloading full messages.\nSearch email content before downloading.\nPartial message downloads (useful for limited bandwidth).\nCreate, delete, and rename mailboxes on the server.\nOrganize emails in hierarchical folder structures.\n<br><img alt=\"MIME5.png\" src=\"cn/standard-clint-service-protocols/img/mime5.png\" target=\"_self\">\nPurpose: Works with SMTP to support transmission of: Non-ASCII text\nBinary data\nMultimedia (images, audio, video) Function: Converts complex data to a 7-bit ASCII-compatible format for transmission.\nNot a mail protocol itself; it extends SMTP.\nAt the receiver's end, it converts data back to its original form. MIME-Version: Specifies MIME version, e.g., MIME-Version: 1.1. Content-Type: Describes the type of data.\nFormat: Content-Type: type/subtype; parameters\nExamples: text/plain\nimage/jpeg\napplication/postscript Content-Transfer-Encoding: Specifies the encoding used to convert the data into 7-bit ASCII: 7bit – default ASCII\n8bit – non-ASCII, limited use\nbinary – unrestricted but risky over SMTP\nbase64 – best for binary files\nquoted-printable – best for mostly ASCII with some special characters Content-Id: Provides a unique identifier, useful in multipart messages. Content-Description: Describes the content (e.g., image, audio). <br><img alt=\"WebEmail.png\" src=\"cn/standard-clint-service-protocols/img/webemail.png\" target=\"_self\">Modern email systems often use HTTP instead of traditional protocols. In web-based email:\nEmail transfer from browser to mail server uses HTTP.\nTransfer between mail servers still uses SMTP.\nMessage retrieval uses HTTP instead of POP3/IMAP4.\nUsers access email through web browsers using login forms.\nProcess flow:\nUser sends email via HTTP to web server.\nWeb server transfers to mail server via SMTP.\nReceiving server delivers via SMTP to destination mail server.\nRecipient accesses email through HTTP web interface.\n<br><img alt=\"Emailaddress.png\" src=\"cn/standard-clint-service-protocols/img/emailaddress.png\" target=\"_self\">Email addresses follow the format: localpart@domain\nLocal part: Identifies the specific mailbox.\nDomain: Identifies the mail server location.\nTraditional email protocols have security limitations:\nPasswords sent in plaintext.\nData transferred without encryption.\nVulnerable to interception.\nSecure alternatives include:\nSSL-FTP for secure file transfer.\nS/MIME and PGP for email encryption.\nSSH for secure remote access.\nModern email clients provide comprehensive functionality:\nComposing: Creating new messages with formatting options.\nReading: Displaying received messages.\nReplying: Responding to received messages.\nForwarding: Sending messages to other recipients.\nMailbox management: Organizing messages in folders.\nEmail remains one of the most widely used internet applications, with services like Hotmail and Yahoo providing web-based access to millions of users worldwide. To illustrate the three mail transfer phases, we will review the steps described above, using the information presented in Figure 26.16. The figure separates messages related to the envelope, header, and body within the data transfer section. It's important to note that the steps in this figure are repeated twice in each email transfer: once from the email sender to the local mail server and once from the local mail server to the remote mail server. The local mail server, after receiving the entire email message, may spool it and send it to the remote mail server at a later time.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/1dd57ced-7e80-4995-94ab-6fa8d3270a0a/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h20m10s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/1dd57ced-7e80-4995-94ab-6fa8d3270a0a/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h20m10s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/cd5b0590-942e-4971-8cec-acc14f611a53/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h18m45s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/cd5b0590-942e-4971-8cec-acc14f611a53/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h18m45s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/0e49fb55-820d-4d43-b0cb-a06f6ec8a9bb/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h18m05s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/0e49fb55-820d-4d43-b0cb-a06f6ec8a9bb/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h18m05s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/e6d24959-2b44-4d20-a305-81ec5474c9d7/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h17m35s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/e6d24959-2b44-4d20-a305-81ec5474c9d7/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h17m35s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/5f528bbc-bde2-4a5b-9bc8-838e4a131523/UPLOAD-ch26-UPDATED.pdf\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/5f528bbc-bde2-4a5b-9bc8-838e4a131523/UPLOAD-ch26-UPDATED.pdf</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=APVCgkqWcQ4\" target=\"_self\">https://www.youtube.com/watch?v=APVCgkqWcQ4</a>\nEmail<br><a class=\"internal-link\" data-href=\"UDP.md\" href=\"cn/udp.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"TCP.md\" href=\"cn/tcp.html\" target=\"_self\" rel=\"noopener nofollow\"></a>## File Transfer Protocol (FTP)<br>\n<img alt=\"FTP.png\" src=\"cn/standard-clint-service-protocols/img/ftp.png\" target=\"_self\">File Transfer Protocol (FTP) is a standard network protocol designed for transferring files between computers over TCP/IP connections. As part of the TCP/IP suite, FTP operates at the application layer and enables users to upload, download, delete, rename, move, and copy files on a server.FTP operates using a client-server architecture with two distinct communication channels:Control Connection (Port 21): Used to transmit commands and responses, following a simple command-response communication. This connection remains open during the entire FTP session.Data Connection (Port 20): Handles the actual file transfer and uses more complex rules due to the variety of data being transferred. This connection opens and closes for each file transfer activity.\nThe client, not the server, issues a passive open using an ephemeral port.\nUsing the PORT command the client sends thisport number to the server.\nThe server receives the port number and issues an active open using the well-known port 20 and the received ephemeral port number.\n<br><img alt=\"FTPEg.png\" src=\"cn/standard-clint-service-protocols/img/ftpeg.png\" target=\"_self\">Figure 26.11 shows an example of using FTP for retrieving a file. The figure shows only one file to be transferred. The control connection remains open all the time, but the data connection is opened and closed repeatedly. We assume the file is transferred in six sections. After all records have been transferred, the server control process announces that the file transfer is done. Since the client control process has no file to retrieve, it issues the QUIT command, which causes the service connection to be closed.<br><img alt=\"FTPcmd.png\" src=\"cn/standard-clint-service-protocols/img/ftpcmd.png\" target=\"_self\">The following shows an actual FTP session that lists the directories.Two Connection Architecture: FTP differs from other protocols by establishing two separate connections, which achieves greater efficiency in handling both control commands and data transfer.System Compatibility: FTP overcomes issues arising from different file naming conventions, text and data representations, and directory structures.Transfer Modes: FTP sessions work in active or passive modes:\nActive mode: Server creates a data connection back to the client.\nPassive mode: Client initiates all connections, working well across firewalls.\nFTP supports numerous commands for file operations:FTP has significant security vulnerabilities because it was designed without modern security considerations.Plaintext Transmission: Both passwords and data are transmitted in plaintext, making them vulnerable to interception.Common Attack Vectors:\nPacket capture/sniffing: All transmissions are readable by anyone on the network.\nBrute force attacks: Systematic password guessing.\nPort stealing: Hackers can access through guessed ports.\nAnonymous vulnerability: Some servers allow access without credentials.\nTo address security issues, several solutions are available:SSL-FTP: Adding a Secure Socket Layer (SSL) between the FTP and TCP layers creates SSL-FTP, enhancing security by encrypting both commands and data.Other Secure Alternatives:\nSFTP (SSH File Transfer Protocol): Uses SSH for secure file transfer.\nFTPS: FTP over SSL/TLS.\nHTTPS: HTTP with SSL/TLS encryption.\nCloud storage services: Dropbox, Google Cloud Storage, Microsoft OneDrive.\nTo mitigate FTP security risks:\nAvoid standard FTP for sensitive data.\nUse secure alternatives like FTPS or SFTP.\nKeep protocols updated.\nUse correct security configurations.\nInstall SSL certificates.\nImplement two-factor authentication.\nWhile FTP is still used for file transfers behind the scenes in applications like banking services and web browsers, organizations handling sensitive or federally regulated data should avoid standard FTP due to its inherent security weaknesses. The protocol remains popular for large file transfers but should be replaced with secure alternatives in security-conscious environments.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/7c9a28af-4322-40e6-8e42-a339afc385d2/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h27m14s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/7c9a28af-4322-40e6-8e42-a339afc385d2/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h27m14s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/2a514162-4aa9-4ebe-b475-35be0d62a922/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h25m50s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/2a514162-4aa9-4ebe-b475-35be0d62a922/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h25m50s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/57017c05-e458-4454-819c-963c7ff257e7/UPLOAD-ch26-UPDATED.pdf\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/57017c05-e458-4454-819c-963c7ff257e7/UPLOAD-ch26-UPDATED.pdf</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=APVCgkqWcQ4\" target=\"_self\">https://www.youtube.com/watch?v=APVCgkqWcQ4</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ieeexplore.ieee.org/document/9921099/\" target=\"_self\">https://ieeexplore.ieee.org/document/9921099/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.techtarget.com/searchnetworking/definition/File-Transfer-Protocol-FTP\" target=\"_self\">https://www.techtarget.com/searchnetworking/definition/File-Transfer-Protocol-FTP</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.cerberusftp.com/blog/how-secure-is-ftp-how-you-can-mitigate-the-risks-of-using-file-transfer-protocol/\" target=\"_self\">https://www.cerberusftp.com/blog/how-secure-is-ftp-how-you-can-mitigate-the-risks-of-using-file-transfer-protocol/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.solarwinds.com/serv-u/tutorials/ftp-commands-for-linux-unix\" target=\"_self\">https://www.solarwinds.com/serv-u/tutorials/ftp-commands-for-linux-unix</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.integrate.io/blog/5-tips-on-avoiding-ftp-security-issues/\" target=\"_self\">https://www.integrate.io/blog/5-tips-on-avoiding-ftp-security-issues/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dl.acm.org/doi/10.1145/197177.197182\" target=\"_self\">https://dl.acm.org/doi/10.1145/197177.197182</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.semanticscholar.org/paper/9c716b7b0c69477651eef5839b81f06bbc200f17\" target=\"_self\">https://www.semanticscholar.org/paper/9c716b7b0c69477651eef5839b81f06bbc200f17</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ieeexplore.ieee.org/document/6868868/\" target=\"_self\">https://ieeexplore.ieee.org/document/6868868/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.semanticscholar.org/paper/1aed7e0d450134ef83fb932401c09daeb12c7ae7\" target=\"_self\">https://www.semanticscholar.org/paper/1aed7e0d450134ef83fb932401c09daeb12c7ae7</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"http://link.springer.com/10.1007/978-3-642-22185-9_11\" target=\"_self\">http://link.springer.com/10.1007/978-3-642-22185-9_11</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.semanticscholar.org/paper/d5cc64bd33521f2bcd018576061ce5642dc17963\" target=\"_self\">https://www.semanticscholar.org/paper/d5cc64bd33521f2bcd018576061ce5642dc17963</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.semanticscholar.org/paper/0fb68996db0da2413b16b3ccce218d2984cf116b\" target=\"_self\">https://www.semanticscholar.org/paper/0fb68996db0da2413b16b3ccce218d2984cf116b</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.fortinet.com/resources/cyberglossary/file-transfer-protocol-ftp-meaning\" target=\"_self\">https://www.fortinet.com/resources/cyberglossary/file-transfer-protocol-ftp-meaning</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://httpd.apache.org/mod_ftp/ftp/ftp_intro.html\" target=\"_self\">https://httpd.apache.org/mod_ftp/ftp/ftp_intro.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.hostinger.com/in/tutorials/what-is-ftp\" target=\"_self\">https://www.hostinger.com/in/tutorials/what-is-ftp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://builtin.com/software-engineering-perspectives/file-transfer-protocol\" target=\"_self\">https://builtin.com/software-engineering-perspectives/file-transfer-protocol</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"http://www.ijert.org/view-pdf/13745/study-and-analysis-of-aodv-and-dsdv-routing-protocols-over-zigbee-network-for-different-topologies-under-ftp-traffic-pattern\" target=\"_self\">http://www.ijert.org/view-pdf/13745/study-and-analysis-of-aodv-and-dsdv-routing-protocols-over-zigbee-network-for-different-topologies-under-ftp-traffic-pattern</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/25.1.231\" target=\"_self\">https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/25.1.231</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://en.wikipedia.org/wiki/File_Transfer_Protocol\" target=\"_self\">https://en.wikipedia.org/wiki/File_Transfer_Protocol</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/php/php_ref_ftp.asp\" target=\"_self\">https://www.w3schools.com/php/php_ref_ftp.asp</a>\nFTP<br><a class=\"internal-link\" data-href=\"UDP.md\" href=\"cn/udp.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"TCP.md\" href=\"cn/tcp.html\" target=\"_self\" rel=\"noopener nofollow\"></a>## File Transfer Protocol (FTP)<br>\n<img alt=\"FTP.png\" src=\"cn/standard-clint-service-protocols/img/ftp.png\" target=\"_self\">File Transfer Protocol (FTP) is a standard network protocol designed for transferring files between computers over TCP/IP connections. As part of the TCP/IP suite, FTP operates at the application layer and enables users to upload, download, delete, rename, move, and copy files on a server.FTP operates using a client-server architecture with two distinct communication channels:Control Connection (Port 21): Used to transmit commands and responses, following a simple command-response communication. This connection remains open during the entire FTP session.Data Connection (Port 20): Handles the actual file transfer and uses more complex rules due to the variety of data being transferred. This connection opens and closes for each file transfer activity.\nThe client, not the server, issues a passive open using an ephemeral port.\nUsing the PORT command the client sends thisport number to the server.\nThe server receives the port number and issues an active open using the well-known port 20 and the received ephemeral port number.\n<br><img alt=\"FTPEg.png\" src=\"cn/standard-clint-service-protocols/img/ftpeg.png\" target=\"_self\">Figure 26.11 shows an example of using FTP for retrieving a file. The figure shows only one file to be transferred. The control connection remains open all the time, but the data connection is opened and closed repeatedly. We assume the file is transferred in six sections. After all records have been transferred, the server control process announces that the file transfer is done. Since the client control process has no file to retrieve, it issues the QUIT command, which causes the service connection to be closed.<br><img alt=\"FTPcmd.png\" src=\"cn/standard-clint-service-protocols/img/ftpcmd.png\" target=\"_self\">The following shows an actual FTP session that lists the directories.Two Connection Architecture: FTP differs from other protocols by establishing two separate connections, which achieves greater efficiency in handling both control commands and data transfer.System Compatibility: FTP overcomes issues arising from different file naming conventions, text and data representations, and directory structures.Transfer Modes: FTP sessions work in active or passive modes:\nActive mode: Server creates a data connection back to the client.\nPassive mode: Client initiates all connections, working well across firewalls.\nFTP supports numerous commands for file operations:FTP has significant security vulnerabilities because it was designed without modern security considerations.Plaintext Transmission: Both passwords and data are transmitted in plaintext, making them vulnerable to interception.Common Attack Vectors:\nPacket capture/sniffing: All transmissions are readable by anyone on the network.\nBrute force attacks: Systematic password guessing.\nPort stealing: Hackers can access through guessed ports.\nAnonymous vulnerability: Some servers allow access without credentials.\nTo address security issues, several solutions are available:SSL-FTP: Adding a Secure Socket Layer (SSL) between the FTP and TCP layers creates SSL-FTP, enhancing security by encrypting both commands and data.Other Secure Alternatives:\nSFTP (SSH File Transfer Protocol): Uses SSH for secure file transfer.\nFTPS: FTP over SSL/TLS.\nHTTPS: HTTP with SSL/TLS encryption.\nCloud storage services: Dropbox, Google Cloud Storage, Microsoft OneDrive.\nTo mitigate FTP security risks:\nAvoid standard FTP for sensitive data.\nUse secure alternatives like FTPS or SFTP.\nKeep protocols updated.\nUse correct security configurations.\nInstall SSL certificates.\nImplement two-factor authentication.\nWhile FTP is still used for file transfers behind the scenes in applications like banking services and web browsers, organizations handling sensitive or federally regulated data should avoid standard FTP due to its inherent security weaknesses. The protocol remains popular for large file transfers but should be replaced with secure alternatives in security-conscious environments.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/7c9a28af-4322-40e6-8e42-a339afc385d2/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h27m14s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/7c9a28af-4322-40e6-8e42-a339afc385d2/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h27m14s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/2a514162-4aa9-4ebe-b475-35be0d62a922/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h25m50s.jpg\" target=\"_self\">https://pplx-res.cloudinary.com/image/private/user_uploads/11353356/2a514162-4aa9-4ebe-b475-35be0d62a922/KnowledgeGATE-by-Sanchit-Sir-Computer-Networks-CN-in-one-shot-Complete-GATE-Course-Hindi-withsanchitsir-APVCgkqWcQ4-1013x570-11h25m50s.jpg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/57017c05-e458-4454-819c-963c7ff257e7/UPLOAD-ch26-UPDATED.pdf\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/57017c05-e458-4454-819c-963c7ff257e7/UPLOAD-ch26-UPDATED.pdf</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=APVCgkqWcQ4\" target=\"_self\">https://www.youtube.com/watch?v=APVCgkqWcQ4</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ieeexplore.ieee.org/document/9921099/\" target=\"_self\">https://ieeexplore.ieee.org/document/9921099/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.techtarget.com/searchnetworking/definition/File-Transfer-Protocol-FTP\" target=\"_self\">https://www.techtarget.com/searchnetworking/definition/File-Transfer-Protocol-FTP</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.cerberusftp.com/blog/how-secure-is-ftp-how-you-can-mitigate-the-risks-of-using-file-transfer-protocol/\" target=\"_self\">https://www.cerberusftp.com/blog/how-secure-is-ftp-how-you-can-mitigate-the-risks-of-using-file-transfer-protocol/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.solarwinds.com/serv-u/tutorials/ftp-commands-for-linux-unix\" target=\"_self\">https://www.solarwinds.com/serv-u/tutorials/ftp-commands-for-linux-unix</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.integrate.io/blog/5-tips-on-avoiding-ftp-security-issues/\" target=\"_self\">https://www.integrate.io/blog/5-tips-on-avoiding-ftp-security-issues/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dl.acm.org/doi/10.1145/197177.197182\" target=\"_self\">https://dl.acm.org/doi/10.1145/197177.197182</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.semanticscholar.org/paper/9c716b7b0c69477651eef5839b81f06bbc200f17\" target=\"_self\">https://www.semanticscholar.org/paper/9c716b7b0c69477651eef5839b81f06bbc200f17</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ieeexplore.ieee.org/document/6868868/\" target=\"_self\">https://ieeexplore.ieee.org/document/6868868/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.semanticscholar.org/paper/1aed7e0d450134ef83fb932401c09daeb12c7ae7\" target=\"_self\">https://www.semanticscholar.org/paper/1aed7e0d450134ef83fb932401c09daeb12c7ae7</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"http://link.springer.com/10.1007/978-3-642-22185-9_11\" target=\"_self\">http://link.springer.com/10.1007/978-3-642-22185-9_11</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.semanticscholar.org/paper/d5cc64bd33521f2bcd018576061ce5642dc17963\" target=\"_self\">https://www.semanticscholar.org/paper/d5cc64bd33521f2bcd018576061ce5642dc17963</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.semanticscholar.org/paper/0fb68996db0da2413b16b3ccce218d2984cf116b\" target=\"_self\">https://www.semanticscholar.org/paper/0fb68996db0da2413b16b3ccce218d2984cf116b</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.fortinet.com/resources/cyberglossary/file-transfer-protocol-ftp-meaning\" target=\"_self\">https://www.fortinet.com/resources/cyberglossary/file-transfer-protocol-ftp-meaning</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://httpd.apache.org/mod_ftp/ftp/ftp_intro.html\" target=\"_self\">https://httpd.apache.org/mod_ftp/ftp/ftp_intro.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.hostinger.com/in/tutorials/what-is-ftp\" target=\"_self\">https://www.hostinger.com/in/tutorials/what-is-ftp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://builtin.com/software-engineering-perspectives/file-transfer-protocol\" target=\"_self\">https://builtin.com/software-engineering-perspectives/file-transfer-protocol</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"http://www.ijert.org/view-pdf/13745/study-and-analysis-of-aodv-and-dsdv-routing-protocols-over-zigbee-network-for-different-topologies-under-ftp-traffic-pattern\" target=\"_self\">http://www.ijert.org/view-pdf/13745/study-and-analysis-of-aodv-and-dsdv-routing-protocols-over-zigbee-network-for-different-topologies-under-ftp-traffic-pattern</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/25.1.231\" target=\"_self\">https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/25.1.231</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://en.wikipedia.org/wiki/File_Transfer_Protocol\" target=\"_self\">https://en.wikipedia.org/wiki/File_Transfer_Protocol</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/php/php_ref_ftp.asp\" target=\"_self\">https://www.w3schools.com/php/php_ref_ftp.asp</a>\nFTP\nUDP is a connectionless, unreliable protocol that has no flow and error control. It uses port numbers to multiplex data from the application layer. UDP is a simple, connectionless and unreliable transport-layer protocol.\nIt does not add anything to the services of IP except for providing process-to-process communication.\nUDP performs a very limited error checking.\nUDP packets are called&nbsp;Datagrams&nbsp;and have fixed size header of 8 Bytes.\nIn UDP a process (an application program) sends a chunk of bytes to UDP for delivery.\nUDP adds its own header to this chunk of data, which is then called a user datagram, and delivers it to IP for transmission.\nThe process may deliver several chunks of data to UDP, but UDP treats each chunk independently without seeing any connection between them.\nIt is not usually used for process that needs to send bulk data, such as FTP.\nThe trivial File Transport Protocol (TFTP) includes flow and error control.\nMulticasting capabilities are embedded in the UDP software but not in TCP software.\nUDP is used for some route update protocols such as Routing Information Protocol (RIP).\nUDP is used in conjunction with Real Time Transport Protocol (RTP) to provide a transport-layer mechanism for real-time data.\nShow Answer&nbsp;TFTP, or Trivial File Transfer Protocol, is a simple high-level protocol for transferring data servers use to boot diskless workstations, X-terminals, and routers by using User Data Protocol (UDP).The Real-time Transport Protocol is a network protocol used to deliver streaming audio and video media over the internet, thereby enabling the Voice Over Internet Protocol (VoIP).<br><img src=\"cn/img/10.png\" target=\"_self\">\nSource Port Number:\n16-bit long field containing the port number used by the process running on the source. (value can be from 0 to 65,535).\nDestination Port Number:\n16-bits field containing the port number of the process running on the destination.\nLength:\n16-bit field defines the total length of the user datagram (Header + Data).\nChecksum:\nUsed to detect errors (checksum) over entire datagram. (Header + Data).\nAlthough UDP checksum should be based on the UDP header and payload (data coming from the application layer), but the designers have also added a part of IP header (only those fields not changing by the routers).\nThis ensures that those fields have not been changed from source to destination.\nThe calculation of the checksum and its inclusion in a user datagram is optional.\nIf the checksum is not calculated this field is filled with 0s.\n<br><img alt=\"CN/img/9.png\" src=\"cn/img/9.png\" target=\"_self\">UDP\nTCP operates at the transport layer (Layer 4) and provides a reliable, ordered, and error-checked communication service between applications running on different hosts connected via an IP network Like UDP, TCP uses port numbers as transport layer Address.\nIf an application can use both UDP and TCP, the same port number is assigned to this application.\nTCP is described as a stream-oriented protocol, it means that it treats the data being sent between two applications as a continuous, ordered sequence of bytes (or octets), rather than as a series of distinct messages or packets.\nTCP creates an environment in which the two processes seem to be connected by an imaginary “tube” that carries their data across the Internet.\n<br><img src=\"cn/img/11.png\" target=\"_self\">\nBuffers are needed for storage, because the sending and receiving processes may not produce and consume data at the same speed.\nThere are to buffers, one for each direction\nOne way to implement a buffer is to use a circular array of 1-Byte locations, as shown\nNormally the buffers are hundreds or thousands of Bytes, depending on the implementation.\n<br><img src=\"cn/img/12.png\" target=\"_self\">\nAt sending side, the buffer has three types of locations:\nThe white section contains empty locations that can be filled by the sending process (producer).\nThe grey area holds Bytes that have been sent but not yet acknowledged. (TCP keeps the Bytes in the buffer until it receives an acknowledgement).\nThe colored area are Bytes to be send by sending TCP.\nHowever, TCP may be able to send only part of this colored section, due to the slowness of the receiving process or congestion in the network.\nThe circular shape is due to the fact that after Bytes in the grey locations are acknowledged, the location is recycled and available for use by sending process. The operation of the buffer at the receiver site is simpler.\nThe circular buffer is divided into two areas (white and colored).\nThe white area contains empty locations to be filled by Bytes received from the network.\nThe colored sections contain received Bytes that can be consumed by receiving process.\nWhen a Byte is consumed by the receiving process, the location is recycled and added to the pool of empty locations.\nTCP (Transmission Control Protocol) implements several key mechanisms to provide reliable data transmission over an unreliable IP network. The process of converting a continuous byte stream into discrete segments is fundamental to TCP's operation.TCP operates on a stream-oriented model where applications send data as a continuous stream of bytes. However, the underlying IP layer requires data to be packaged into discrete packets. To bridge this gap, TCP groups bytes together into units called segments.<br><img alt=\"TCPsegmentflow.png\" src=\"cn/img/tcpsegmentflow.png\" target=\"_self\">The segmentation process works as follows:\nTCP accepts data from the application as a stream of bytes.\nIt divides this data into chunks and adds a TCP header to create TCP segments.\nEach segment is then encapsulated into an IP datagram for transmission.\nSegments are not necessarily the same size and can carry hundreds of bytes.\nThe TCP implementation collects bytes from the bytestream one by one and places them into a TCP segment. When the segment reaches a fixed maximum segment size (MSS), it is sent, and a new segment is started. If data is ready to send but doesn't fill a complete segment, a timer ensures the segment is sent even if not full.Since sending and receiving processes cannot produce and consume data at the same speed, TCP uses buffers for storage. Each TCP connection maintains:\nSending buffer: Contains bytes waiting to be sent, bytes sent but not yet acknowledged, and empty locations.\nReceiving buffer: Contains received bytes waiting for the application to consume them and empty locations.\nTCP provides full-duplex communication where data can flow in both directions simultaneously. Each TCP endpoint maintains both a sending buffer and receiving buffer, allowing segments to be transmitted in both directions concurrently.TCP establishes a virtual connection before data exchange through a three-step process:\nTCP at process A informs TCP at process B and gets approval.\nBoth TCPs exchange data in both directions.\nAfter data exchange is complete and buffers are empty, both TCPs destroy their buffers.\nThe connection is virtual rather than physical - TCP segments can be sent out of order, lost, or corrupted, and may take different paths to reach the destination.TCP ensures reliability through an acknowledgment mechanism that verifies safe data arrival. It uses sequence numbers, acknowledgments, checksums, timers, and retransmission to ensure correct and in-order delivery.TCP employs a sophisticated numbering system for tracking data:Byte Numbering:\nTCP numbers all data bytes transmitted in a connection.\nNumbering is independent in each direction.\nThe starting number is randomly chosen between 0 and 2³²-1, not necessarily starting from 0.\nFor example, if the random number is 1,057 and 6,000 bytes are to be sent, bytes are numbered from 1,057 to 7,056.\nSequence Numbers:\nAfter bytes are numbered, TCP assigns a sequence number to each segment.\nThe sequence number for each segment represents the number of the first byte carried in that segment.\nThese sequence numbers enable the receiver to detect lost packets, reorder out-of-sequence segments, and eliminate duplicates.\nThis comprehensive system allows TCP to provide reliable, ordered data delivery despite operating over an unreliable network layer, making it suitable for applications requiring guaranteed data integrity.TCP (Transmission Control Protocol)TCP is a connection-oriented protocol that provides reliable, ordered data transmission between devices. The concepts you've outlined accurately describe TCP's fundamental mechanisms for managing communication sessions.TCP supports full-duplex communication, meaning both parties can send and receive data simultaneously. This bidirectional capability is enabled by TCP maintaining two separate buffers - one for sending and one for receiving - with independent control over each data stream. Unlike half-duplex communication where sending and receiving happen alternately, full-duplex enables concurrent transmission and reception, similar to a telephone conversation where both parties can speak and listen at the same time.Each TCP connection uses separate sequence numbering for each direction of communication. The sequence number indicates how much data has been sent during the TCP session, while the acknowledgment number is sent by the receiver to indicate it has received cumulative data and is ready for the next segment.TCP acknowledgments are cumulative. When a receiver sends an acknowledgment number, it confirms receipt of all bytes up to that point in sequence. For example, if the acknowledgment number is 5643, it means the receiver has successfully received all bytes from the beginning up to byte 5642.Calculation Example:\nClient sends segment with seq=1, length=669 bytes\nServer responds with ack=670 (1 + 669 = 670)\nClient sends next segment with seq=670, length=1460 bytes\nServer responds with ack=2130 (670 + 1460 = 2130)\nThe acknowledgment number represents the next expected byte number, calculated as: ACK = previous sequence number + number of bytes received.The TCP segment is the fundamental unit of data transfer in TCP communication. Understanding its structure is crucial for comprehending how TCP achieves reliable data transmission.<br><img alt=\"TCPHeader.png\" src=\"cn/img/tcpheader.png\" target=\"_self\">A TCP segment consists of two main parts:\nHeader: 20-60 bytes containing control information.\nData: Application layer data (payload). Minimum size: 20 bytes (when no options are present).\nMaximum size: 60 bytes (when options field is fully utilized).\nOptions field: Can add up to 40 bytes of additional information.\nSource Port Address (16 bits)\nIdentifies the port number of the sending application.\nAllows the receiving system to know which application sent the data.\nRange: 0-65,535.\nDestination Port Address (16 bits)\nSpecifies the port number of the receiving application.\nEnables proper delivery to the correct application on the destination host.\nRange: 0-65,535.\nSequence Number (32 bits)\nIndicates the byte number assigned to the first byte of data in this segment.\nUsed for ordering segments and detecting lost packets.\nEssential for TCP's reliable delivery mechanism.\nAcknowledgment Number (32 bits)\nSpecifies the next byte number the sender expects to receive.\nFollows the formula: If byte x was successfully received, acknowledgment = x+1.\nEnables cumulative acknowledgment mechanism.\nHeader Length/Data Offset (4 bits)\nIndicates the TCP header length in 32-bit words.\nValue range: 5 to 15. 5 × 4 = 20 bytes (minimum header).\n15 × 4 = 60 bytes (maximum header). Tells the receiver where the data portion begins.\nReserved Field (6 bits)\nCurrently unused bits set to zero.\nReserved for future protocol enhancements.\nMust be ignored by current implementations.\nThe control field contains six flags that manage TCP connection states and data handling:<br><img alt=\"TCPHeaderFlags.png\" src=\"cn/img/tcpheaderflags.png\" target=\"_self\">Window Size (16 bits)\nSpecifies the number of bytes the receiver can accept.\nMaximum value: 65,535 bytes (unless extended by options).\nImplements TCP's flow control mechanism.\nPrevents sender from overwhelming the receiver.\nChecksum (16 bits)\nContains error detection information for the entire segment.\nCalculated using the same procedure as UDP.\nCovers both header and data portions.\nEnsures data integrity during transmission.\nUrgent Pointer (16 bits)\nValid only when URG flag is set.\nPoints to the last byte of urgent data in the segment.\nCalculation: Sequence Number + Urgent Pointer = Last urgent byte position.\nEnables priority data transmission.\nOptions Field (0-40 bytes)\nProvides extensibility for additional TCP features.\nCommon options include: Maximum Segment Size (MSS).\nWindow scaling.\nTimestamps.\nSelective acknowledgments. The control flags work together to manage TCP connections:\nConnection establishment: Uses SYN flags.\nData transfer: Uses ACK flags for acknowledgments.\nConnection termination: Uses FIN flags.\nMultiple fields ensure reliable transmission:\nSequence numbers provide ordering.\nAcknowledgment numbers confirm receipt.\nChecksums detect corruption.\nWindow size prevents overflow.\nSeveral fields enhance performance:\nWindow size enables flow control.\nUrgent pointer allows priority data.\nOptions field supports advanced features.\nThis comprehensive header structure enables TCP to provide reliable, ordered, and error-checked data transmission while maintaining efficient flow control and connection management capabilities.TCP is a connection-oriented protocol that establishes a virtual path between source and destination. This virtual connection ensures reliable data delivery through sequence numbering, acknowledgments, and retransmission mechanisms. The full-duplex nature of TCP allows both parties to send data simultaneously in both directions.The three-way handshake is fundamental to TCP connection establishment, involving three distinct steps that synchronize both communicating endpoints.Step 1: SYN (Synchronize)\nThe client initiates the connection by sending a SYN segment to the server. This segment contains:\nSource and destination port numbers\nThe client's Initial Sequence Number (ISN) - a randomly chosen 32-bit number\nSYN flag set to 1, ACK flag set to 0\nWindow size and maximum segment size parameters\nStep 2: SYN-ACK (Synchronize-Acknowledge)\nThe server responds with a segment serving dual purposes:\nAcknowledgment: Uses the ACK flag set to 1 and acknowledgment number equal to client's ISN + 1\nSynchronization: Includes the server's own ISN for data flowing from server to client\nThe server advertises its window size and maximum segment size\nStep 3: ACK (Acknowledge)\nThe client sends the final acknowledgment:\nACK flag set to 1\nAcknowledgment number equal to server's ISN + 1\nConfirms the server's readiness and establishes the connection\nData transmission can begin with this segment\nTCP uses a four-way handshake for termination because it's actually two pairs of two-way handshakes. Since TCP is full-duplex, each direction of the connection must be closed independently. When one side sends a FIN, it only closes communication in one direction - the sender can no longer transmit data but can still receive data from the other side.Step 1: Initial FIN\nThe initiating party (client or server) sends a FIN segment to signal it has no more data to send.Step 2: ACK Response\nThe receiving party acknowledges the FIN with an ACK segment. The acknowledgment number equals the sequence number from the FIN plus 1.Step 3: Second FIN\nThe receiving party sends its own FIN segment when it has finished sending data in its direction.Step 4: Final ACK\nThe original initiator acknowledges the second FIN with an ACK segment, completing the termination.Between steps 2 and 3, the connection exists in a half-closed state. During this period:\nThe initial sender cannot transmit new data but can receive.\nThe other party can continue sending data until ready to close its side.\nThis allows for complete data transmission before full closure.\nTCP also supports immediate connection termination using RST (reset) segments, which differs from the graceful four-way handshake. RST segments are sent in specific scenarios:When RST is Used:\nConnection request to a non-existent port.\nAbnormal connection conditions requiring immediate termination.\nDetection of idle connections that need cleanup.\nSecurity threats detected by firewalls.\nProtocol violations or unexpected packets.\nRST Behavior:\nA TCP reset immediately terminates the connection. Unlike the graceful FIN process, RST causes both endpoints to immediately close the connection and discard any undelivered data.The four-way handshake ensures graceful termination where all data is properly delivered and acknowledged before closure. This prevents data loss and allows applications to complete their operations cleanly.In contrast, RST provides abrupt termination for error conditions or security situations where immediate closure is necessary, even if it means losing data in transit.The four-way process reflects TCP's commitment to reliable communication, ensuring that both parties can complete their data transmission obligations before the connection fully terminates.TCP<br><img alt=\"CN/img/1.png\" src=\"cn/img/1.png\" target=\"_self\">\nDelivery of frames between two neighboring nodes over a link by data-link layer. Delivery of data-grams between two hosts by network layer.\nBut communication on Internet is not defined as the exchanged of data between two nodes or between two hosts… Real communication takes place between two processes (application programs). But at a single time many processes are running at source and destination. A mechanism is required to deliver data from one of these processes running on the source host to the corresponding process running on the destination host.\nTransport layer is responsible for process-to-process delivery. The client-server paradigm is a common model used in computer networks and distributed applications where two types of processes communicate: a client and a server.\nClient:&nbsp;A process (program) running on a local computer that requests a service or resource. Server:&nbsp;A process running on a remote (or sometimes the same) computer that provides the requested service or resource.Note that both the process have the same name.Request-Response Pattern:&nbsp;The client initiates communication by sending a request to the server. The server waits for such requests and responds by providing the requested service or data. This interaction follows a request-response pattern. How It Works:&nbsp;The client process sends a request to the server process, typically over a network. The server process receives the request, processes it, and sends back a response. The client receives the response and uses the data or service accordingly. Example:&nbsp;For example, when you use a web browser (client) to access a website, your browser sends a request to the web server. The server processes this request and sends back the webpage to your browser.\nLocal host ( client )\nLocal process ( client )\nRemote host ( server )\nRemote process ( server )\nOperating systems today support both multi-user and multi-programming environments. A server and client both can run several programs at the same time.<br><img alt=\"CN/img/4.png\" src=\"cn/img/4.png\" target=\"_self\">\nAddressing in computer networks, especially at the transport layer, is the method used to deliver data from one specific process on a host to another specific process on a different host.\nIt involves two key identifiers at each end of the communication:\nIP Address\nPort Number\nIP Address\nIdentifies the host (computer or device) uniquely on the network.\nUsed by the network layer to deliver packets from one host to another. Example:&nbsp;192.168.1.1Port Number\nIdentifies the specific process (application or service) running on the host.\nUsed by the transport layer to distinguish among multiple processes running on the same host. Example:&nbsp;80 (for HTTP), 443 (for HTTPS), 25 (for SMTP)In the Internet model, the port numbers are 16-bit integers between 0 and 65,535.Port numbers allow multiplexing and demultiplexing of data to/from applications.<br><img alt=\"CN/img/3.png\" src=\"cn/img/3.png\" target=\"_self\">\nTo uniquely identify a process on a host, we combine the IP address and port number. This combination is known as a socket address.\nThe IP header contains the IP address, the UDP or TCP header contains the port numbersExample:&nbsp;192.168.1.1:80 (IP address + port 80, typically for HTTP server). Both client and server have socket addresses to uniquely identify the communicating processes. <br><img alt=\"CN/img/8.png\" src=\"cn/img/8.png\" target=\"_self\"><br><img src=\"cn/img/9.png\" target=\"_self\">These categories help manage port assignments and avoid conflicts between different applications and services. The server process must also define itself with a port number, this port number is however cannot be chosen randomly. If the computer at the server site runs a server process and assigns a random port number. The process at the client that wants to access that server and use its services will NOT know the port number. One solution is that the host send a special packet and request the port number, but this requires more overhead. Servers use well-known ports so clients know where to send requests (e.g., web servers use port 80). Clients typically use dynamic or ephemeral ports, which are assigned temporarily for the duration of a connectionExample:&nbsp;A Daytime client process, can use an ephemeral (temporary) port number 52,000 to identify itself. The Daytime server process must use the well-known (permanent) port number 13.<br><img src=\"cn/img/2.png\" target=\"_self\"> <br><img src=\"cn/img/5.png\" target=\"_self\">\nHost A sends a packet to announce wish for connection establishment and includes its initial information about traffic from A to B.\nHost B sends a packet to acknowledge (confirm) the request of A.\nHost B sends a packet that includes its initialization information about traffic from B to A.\nHost A sends a packet to acknowledge (confirm) the request of B.\nIt is a 4 step process but can also be 3 step. As step 2 and 3 can be combined into one.(Host B confirms the request form Host A and sends its own request)\nEach connection request needs to have a sequence number to recover from the loss or duplication of the packet.\nEach acknowledgement needs to have an acknowledgement number as well, for the same reason.\nThe first sequence number in each direction must be a random for each connection establishment.\nA sender cannot create several connections that start with the same sequence (e.g. 1) The reason is to prevent a situation called&nbsp;playback.\nExample&nbsp;In bank transaction a customer makes a connection and requests a transfer of $1 million to a third party. If the network somehow duplicates the transaction after the first connection is closed, the bank may assume that there is a new connection and transfer another&nbsp;$1 million to third party.This would probably not happen if the protocol required that the sender use a different sequence number each time it made a new connection. The bank would recognize a repeated sequence number and know that the request was a duplicate.\nUsing a sequence number for each connection requires that the receiver keep a history of sequence numbers for each remote host for a specific time.\n<br><img src=\"cn/img/7.png\" target=\"_self\">\nAny of the two parties involved in exchanging data can close the connection.\nWhen connection in one direction is terminated, the other party can continue sending data in the other direction.\nSo 4-actions are needed to close the connection in both directions.\nIt can't be converted into 3 step process as both parties may not wish to terminate the communication at the same time. Host A sends a packet announcing its wish for connection termination.\nHost B sends segment acknowledgement (confirming) the request of A.\nAfter this connection is closed in one direction, but not in the other.3. Host B can continue sending data to host A.\nWhen host B finishes sending its own data, it sends a segment indicate that it wants to close the connection.\nHost A acknowledges (confirms) the request of B. How can we make a connection-oriented transport layer over a connectionless network-layer protocol such as IP?\nAnswer\nThe transport layer services can be reliable or unreliable.\nIf the application-layer program needs the reliability, we use a reliable transport-layer protocol by implementing flow and error control at the transport-layer. (e.g. TCP) Means a slower and complex service.\nIf the application program does NOT need reliability, (because it uses its own flow and error control (real-time applications)), then an unreliable protocol can be used. (e.g. UDP) IF the data-link layer is reliable and has flow control and error control, do we need this at the transport layer too?\nAnswer\nThe image below shows that error-control at the data-link layer does not guarantee error control at the transport layer.<br>\n<img src=\"cn/img/6.png\" target=\"_self\"> Process-To-Process","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"WWW HTTP","level":1,"id":"WWW_HTTP_0"},{"heading":"Architecture of the WWW","level":3,"id":"Architecture_of_the_WWW_0"},{"heading":"Key Components","level":3,"id":"Key_Components_0"},{"heading":"Browser Components:","level":4,"id":"Browser_Components_0"},{"heading":"Server Role:","level":4,"id":"Server_Role_0"},{"heading":"Uniform Resource Locator (URL)","level":4,"id":"Uniform_Resource_Locator_(URL)_0"},{"heading":"HyperText Transfer Protocol (HTTP)","level":2,"id":"HyperText_Transfer_Protocol_(HTTP)_0"},{"heading":"Connection Management:","level":3,"id":"Connection_Management_0"},{"heading":"Connection Types:","level":3,"id":"Connection_Types_0"},{"heading":"HTTP Security","level":3,"id":"HTTP_Security_0"},{"heading":"HTTP Messages and Structure","level":3,"id":"HTTP_Messages_and_Structure_0"},{"heading":"Request Message Structure:","level":4,"id":"Request_Message_Structure_0"},{"heading":"Response Message Structure:","level":4,"id":"Response_Message_Structure_0"},{"heading":"Common HTTP Methods:","level":4,"id":"Common_HTTP_Methods_0"},{"heading":"HTTP Status Codes:","level":4,"id":"HTTP_Status_Codes_0"},{"heading":"HTTP Request Header Names","level":4,"id":"HTTP_Request_Header_Names_0"},{"heading":"HTTP Response Header Names","level":4,"id":"HTTP_Response_Header_Names_0"},{"heading":"Proxy Servers","level":3,"id":"Proxy_Servers_0"},{"heading":"Web Page Types","level":3,"id":"Web_Page_Types_0"},{"heading":"HTTP Structure Image","level":3,"id":"HTTP_Structure_Image_0"},{"heading":"Examples","level":3,"id":"Examples_0"},{"heading":"Retrieving a Document (Example)","level":4,"id":"Retrieving_a_Document_(Example)_0"},{"heading":"Using the PUT Method to Post a Web Page","level":4,"id":"Using_the_PUT_Method_to_Post_a_Web_Page_0"},{"heading":"Illustrative Scenario: Cookie Usage on BestToys.com","level":4,"id":"Illustrative_Scenario_Cookie_Usage_on_BestToys.com_0"},{"heading":"Citations:","level":3,"id":"Citations_0"},{"heading":"HTTPstructureexp","level":1,"id":"HTTPstructureexp_0"},{"heading":"HTTP Message Structure Overview","level":2,"id":"HTTP_Message_Structure_Overview_0"},{"heading":"Request Message Structure","level":2,"id":"Request_Message_Structure_1"},{"heading":"Response Message Structure","level":2,"id":"Response_Message_Structure_1"},{"heading":"Formatting Requirements","level":2,"id":"Formatting_Requirements_0"},{"heading":"Key Design Features","level":2,"id":"Key_Design_Features_0"},{"heading":"Telnet","level":1,"id":"Telnet_0"},{"heading":"Understanding Telnet (Terminal Network Protocol)","level":1,"id":"Understanding_Telnet_(Terminal_Network_Protocol)_0"},{"heading":"What is Telnet?","level":2,"id":"What_is_Telnet?_0"},{"heading":"How Telnet Works","level":2,"id":"How_Telnet_Works_0"},{"heading":"Basic Architecture","level":3,"id":"Basic_Architecture_0"},{"heading":"Network Virtual Terminal (NVT)","level":3,"id":"Network_Virtual_Terminal_(NVT)_0"},{"heading":"Operating Modes","level":3,"id":"Operating_Modes_0"},{"heading":"Telnet Commands","level":3,"id":"Telnet_Commands_0"},{"heading":"Data Transmission","level":3,"id":"Data_Transmission_0"},{"heading":"Error Handling","level":3,"id":"Error_Handling_0"},{"heading":"Example Usage Scenarios","level":2,"id":"Example_Usage_Scenarios_0"},{"heading":"Security Considerations","level":2,"id":"Security_Considerations_0"},{"heading":"Modern Alternatives","level":2,"id":"Modern_Alternatives_0"},{"heading":"Conclusion","level":2,"id":"Conclusion_0"},{"heading":"Email","level":1,"id":"Email_0"},{"heading":"Email Architecture","level":2,"id":"Email_Architecture_0"},{"heading":"User Agent Functions","level":3,"id":"User_Agent_Functions_0"},{"heading":"Composing Messages:","level":4,"id":"Composing_Messages_0"},{"heading":"Reading Messages:","level":4,"id":"Reading_Messages_0"},{"heading":"Replying to Messages:","level":4,"id":"Replying_to_Messages_0"},{"heading":"Forwarding Messages:","level":4,"id":"Forwarding_Messages_0"},{"heading":"Handling Mailboxes:","level":4,"id":"Handling_Mailboxes_0"},{"heading":"User Agent Types","level":3,"id":"User_Agent_Types_0"},{"heading":"Email Message Structure","level":3,"id":"Email_Message_Structure_0"},{"heading":"Email Protocols","level":3,"id":"Email_Protocols_0"},{"heading":"SMTP (Simple Mail Transfer Protocol)","level":4,"id":"SMTP_(Simple_Mail_Transfer_Protocol)_0"},{"heading":"POP3 (Post Office Protocol version 3)","level":4,"id":"POP3_(Post_Office_Protocol_version_3)_0"},{"heading":"IMAP4 (Internet Mail Access Protocol version 4)","level":4,"id":"IMAP4_(Internet_Mail_Access_Protocol_version_4)_0"},{"heading":"MIME (Multipurpose Internet Mail Extensions)","level":4,"id":"MIME_(Multipurpose_Internet_Mail_Extensions)_0"},{"heading":"MIME (Multipurpose Internet Mail Extensions):","level":5,"id":"MIME_(Multipurpose_Internet_Mail_Extensions)_1"},{"heading":"MIME Headers (Five Key Fields):","level":5,"id":"MIME_Headers_(Five_Key_Fields)_0"},{"heading":"Common MIME Types and Subtypes (Table 26.1 Overview):","level":5,"id":"Common_MIME_Types_and_Subtypes_(Table_26.1_Overview)_0"},{"heading":"Content-Transfer-Encoding Types (Table 26.2 Overview):","level":5,"id":"Content-Transfer-Encoding_Types_(Table_26.2_Overview)_0"},{"heading":"Web-Based Email","level":3,"id":"Web-Based_Email_0"},{"heading":"Email Addressing","level":3,"id":"Email_Addressing_0"},{"heading":"Security Considerations","level":3,"id":"Security_Considerations_1"},{"heading":"Email Client Features","level":3,"id":"Email_Client_Features_0"},{"heading":"Example","level":3,"id":"Example_0"},{"heading":"Citations:","level":3,"id":"Citations_1"},{"heading":"Standard Clint Services Protocol ","level":2,"id":"Standard_Clint_Services_Protocol__0"},{"heading":"Standard Clint Services Protocol ","level":2,"id":"Standard_Clint_Services_Protocol__1"},{"heading":"FTP","level":1,"id":"FTP_0"},{"heading":"How FTP Works","level":3,"id":"How_FTP_Works_0"},{"heading":"Creation of a Data Connection","level":4,"id":"Creation_of_a_Data_Connection_0"},{"heading":"Key Features","level":3,"id":"Key_Features_0"},{"heading":"FTP Commands","level":3,"id":"FTP_Commands_0"},{"heading":"Responses In FTP","level":3,"id":"Responses_In_FTP_0"},{"heading":"Security Concerns","level":3,"id":"Security_Concerns_0"},{"heading":"Secure Alternatives","level":3,"id":"Secure_Alternatives_0"},{"heading":"Best Practices","level":3,"id":"Best_Practices_0"},{"heading":"Current Usage","level":3,"id":"Current_Usage_0"},{"heading":"Citations:","level":3,"id":"Citations_2"},{"heading":"FTP","level":1,"id":"FTP_1"},{"heading":"How FTP Works","level":3,"id":"How_FTP_Works_1"},{"heading":"Creation of a Data Connection","level":4,"id":"Creation_of_a_Data_Connection_1"},{"heading":"Key Features","level":3,"id":"Key_Features_1"},{"heading":"FTP Commands","level":3,"id":"FTP_Commands_1"},{"heading":"Responses In FTP","level":3,"id":"Responses_In_FTP_1"},{"heading":"Security Concerns","level":3,"id":"Security_Concerns_1"},{"heading":"Secure Alternatives","level":3,"id":"Secure_Alternatives_1"},{"heading":"Best Practices","level":3,"id":"Best_Practices_1"},{"heading":"Current Usage","level":3,"id":"Current_Usage_1"},{"heading":"Citations:","level":3,"id":"Citations_3"},{"heading":"UDP","level":1,"id":"UDP_0"},{"heading":"UDP (User Datagram Protocol)","level":1,"id":"UDP_(User_Datagram_Protocol)_0"},{"heading":"If the UDP is so powerless why would a process wants to use it?","level":4,"id":"If_the_UDP_is_so_powerless_why_would_a_process_wants_to_use_it?_0"},{"heading":"TFTP","level":6,"id":"TFTP_0"},{"heading":"RTP","level":6,"id":"RTP_0"},{"heading":"Datagrams","level":2,"id":"Datagrams_0"},{"heading":"Well Known Ports For UDP","level":2,"id":"Well_Known_Ports_For_UDP_0"},{"heading":"TCP","level":1,"id":"TCP_0"},{"heading":"TCP ( Transmission Control Protocol )","level":1,"id":"TCP_(_Transmission_Control_Protocol_)_0"},{"heading":"TCP Buffers","level":2,"id":"TCP_Buffers_0"},{"heading":"Sender Side Buffer:","level":3,"id":"Sender_Side_Buffer_0"},{"heading":"Receiver Side Buffer:","level":3,"id":"Receiver_Side_Buffer_0"},{"heading":"TCP Segmentation and Services","level":2,"id":"TCP_Segmentation_and_Services_0"},{"heading":"Bytes and Segments","level":3,"id":"Bytes_and_Segments_0"},{"heading":"Buffering and Flow Control","level":3,"id":"Buffering_and_Flow_Control_0"},{"heading":"Full-Duplex Service","level":2,"id":"Full-Duplex_Service_0"},{"heading":"Connection-Oriented Service","level":3,"id":"Connection-Oriented_Service_0"},{"heading":"Reliable Service","level":3,"id":"Reliable_Service_0"},{"heading":"Numbering System","level":2,"id":"Numbering_System_0"},{"heading":"TCP Full-Duplex Communication","level":2,"id":"TCP_Full-Duplex_Communication_0"},{"heading":"Sequence and Acknowledgment Numbers","level":2,"id":"Sequence_and_Acknowledgment_Numbers_0"},{"heading":"Cumulative Acknowledgments","level":3,"id":"Cumulative_Acknowledgments_0"},{"heading":"TCP Segment Structure and Header Fields","level":1,"id":"TCP_Segment_Structure_and_Header_Fields_0"},{"heading":"TCP Segment Composition","level":2,"id":"TCP_Segment_Composition_0"},{"heading":"Header Size Variations","level":2,"id":"Header_Size_Variations_0"},{"heading":"TCP Header Fields Breakdown","level":2,"id":"TCP_Header_Fields_Breakdown_0"},{"heading":"Port Information (32 bits total)","level":3,"id":"Port_Information_(32_bits_total)_0"},{"heading":"Sequence Management (64 bits total)","level":3,"id":"Sequence_Management_(64_bits_total)_0"},{"heading":"Header Control Information","level":3,"id":"Header_Control_Information_0"},{"heading":"Control Flags (6 bits)","level":3,"id":"Control_Flags_(6_bits)_0"},{"heading":"Flow Control and Error Detection","level":3,"id":"Flow_Control_and_Error_Detection_0"},{"heading":"Special Data Handling","level":3,"id":"Special_Data_Handling_0"},{"heading":"Practical Applications","level":3,"id":"Practical_Applications_0"},{"heading":"Connection Management","level":4,"id":"Connection_Management_1"},{"heading":"Data Reliability","level":4,"id":"Data_Reliability_0"},{"heading":"Performance Optimization","level":4,"id":"Performance_Optimization_0"},{"heading":"TCP Connection-Oriented Protocol","level":1,"id":"TCP_Connection-Oriented_Protocol_0"},{"heading":"Three-Way Handshake Process","level":2,"id":"Three-Way_Handshake_Process_0"},{"heading":"Why Four Steps Are Required","level":2,"id":"Why_Four_Steps_Are_Required_0"},{"heading":"Four-Way Handshake Process","level":2,"id":"Four-Way_Handshake_Process_0"},{"heading":"Half-Closed Connection State","level":2,"id":"Half-Closed_Connection_State_0"},{"heading":"TCP Reset (RST) - Abrupt Termination","level":2,"id":"TCP_Reset_(RST)_-_Abrupt_Termination_0"},{"heading":"Graceful vs Abrupt Termination","level":2,"id":"Graceful_vs_Abrupt_Termination_0"},{"heading":"Process-To-Process","level":1,"id":"Process-To-Process_0"},{"heading":"Process-To-Process Delivery","level":1,"id":"Process-To-Process_Delivery_0"},{"heading":"Types of Delivery","level":2,"id":"Types_of_Delivery_0"},{"heading":"Node to Node Delivery","level":3,"id":"Node_to_Node_Delivery_0"},{"heading":"Host to Host Delivery","level":3,"id":"Host_to_Host_Delivery_0"},{"heading":"Process to Process Delivery","level":3,"id":"Process_to_Process_Delivery_0"},{"heading":"Client Server Paradigm","level":3,"id":"Client_Server_Paradigm_0"},{"heading":"For communication we must define the following:","level":4,"id":"For_communication_we_must_define_the_following_0"},{"heading":"Addressing","level":2,"id":"Addressing_0"},{"heading":"IP Address + Port Number = Socket Address","level":3,"id":"IP_Address_+_Port_Number_=_Socket_Address_0"},{"heading":"Port Number Categories","level":4,"id":"Port_Number_Categories_0"},{"heading":"Connectionless vs Connection-Oriented Service","level":2,"id":"Connectionless_vs_Connection-Oriented_Service_0"},{"heading":"Connection Establishment","level":3,"id":"Connection_Establishment_0"},{"heading":"Steps:","level":4,"id":"Steps_0"},{"heading":"Sequence Number and Acknowledgment Number","level":4,"id":"Sequence_Number_and_Acknowledgment_Number_0"},{"heading":"Connection Termination","level":3,"id":"Connection_Termination_0"},{"heading":"Steps:","level":4,"id":"Steps_1"},{"heading":"Reliable vs Unreliable","level":2,"id":"Reliable_vs_Unreliable_0"}],"links":["cn/standard-clint-service-protocols/httpstructureexp.html","cn/standard-clint-service-protocols/httpstructureexp.html","cn/udp.html","cn/tcp.html","cn/udp.html","cn/tcp.html"],"author":"","coverImageURL":".","fullURL":"cn/untitled.html","pathToRoot":"..","attachments":["cn/standard-clint-service-protocols/img/emailworkingbrowser.html","cn/standard-clint-service-protocols/img/emailnonpersistent.html","cn/standard-clint-service-protocols/img/emailpersistent.html","cn/standard-clint-service-protocols/img/httpproxy.html","cn/standard-clint-service-protocols/img/httpstruct.html","cn/standard-clint-service-protocols/img/httpeg2.html","cn/standard-clint-service-protocols/img/httpeg1.html","cn/standard-clint-service-protocols/img/emailegcookie.html","cn/standard-clint-service-protocols/img/telnet.html","cn/standard-clint-service-protocols/img/telnet_nvt.html","cn/standard-clint-service-protocols/img/emailarct.html","cn/standard-clint-service-protocols/img/emailuseragent.html","cn/standard-clint-service-protocols/img/emailmessagestruct.html","cn/standard-clint-service-protocols/img/emailprotocol.html","cn/standard-clint-service-protocols/img/mime5.html","cn/standard-clint-service-protocols/img/mims4.html","cn/standard-clint-service-protocols/img/mims1.html","cn/standard-clint-service-protocols/img/mims3.html","cn/standard-clint-service-protocols/img/mims2.html","cn/standard-clint-service-protocols/img/webemail.html","cn/standard-clint-service-protocols/img/emailaddress.html","cn/standard-clint-service-protocols/img/emaileg1.html","cn/standard-clint-service-protocols/img/emaileg2.html","cn/standard-clint-service-protocols/img/ftp.html","cn/standard-clint-service-protocols/img/ftpeg.html","cn/standard-clint-service-protocols/img/ftpcmd.html","cn/img/10.html","cn/img/9.html","cn/img/11.html","cn/img/12.html","cn/img/tcpsegmentflow.html","cn/img/tcpheader.html","cn/img/tcpheaderflags.html","cn/img/1.html","cn/img/4.html","cn/img/3.html","cn/img/8.html","cn/img/2.html","cn/img/5.html","cn/img/7.html","cn/img/6.html"],"createdTime":1748853032910,"modifiedTime":1752027272218,"sourceSize":2895,"sourcePath":"CN/Untitled.canvas","exportPath":"cn/untitled.html","showInTree":true,"treeOrder":133,"backlinks":[],"type":"canvas"},"cn/untitled-1.html":{"title":"Untitled 1","icon":"","description":"<a class=\"internal-link\" data-href=\"CSMACD.md\" href=\"cn/csmacd.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"CSMA.md\" href=\"cn/csma.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"SlottedALOHA.md\" href=\"cn/slottedaloha.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"PureALOHA.md\" href=\"cn/purealoha.html\" target=\"_self\" rel=\"noopener nofollow\"></a>Random access protocols are a category of multiple access methods where stations independently decide when to transmit, without centralized control. These protocols are designed to manage contention and collisions in shared communication channels. In this no station is superior. Here's a detailed breakdown:The foundation of random access protocols, featuring:\nDecentralized transmission: Stations send frames whenever ready1 Collision handling: If collision detected, stations wait random time before retransmitting Vulnerable time: 2 × frame transmission time (Tfr) Maximum throughput: Only 18.4% efficiency due to high collision probability1 Example: If two stations transmit simultaneously, both frames collide and become corrupted. Each waits random backoff time before retrying.An improved version with:\nTime slots: Transmission allowed only at slot boundaries Reduced vulnerable time: Equal to Tfr (halved compared to pure ALOHA) Throughput boost: 36.8% maximum efficiency1 Synchronization requirement: All stations must agree on slot boundaries Introduces channel sensing before transmission:\nListen-before-talk: Stations check channel activity first Three persistence methods: 1-persistent: Transmit immediately if idle Non-persistent: Wait random time if busy p-persistent: Probabilistic transmission in idle slots Hidden terminal problem: Collisions still occur due to propagation delay1 Vulnerability example: Station B starts transmitting at t1. Station C at t2 (t2 &gt; t1) also transmits before B's signal arrives, causing collision1.Used in wired Ethernet networks:\nCollision detection: Stations monitor channel during transmission Jamming signal: Sent to notify all stations of collision Binary exponential backoff: Colliding stations wait random time before retry Minimum frame size: Critical for collision detection: Minimum&nbsp;frame&nbsp;size=2×Propagation&nbsp;delay×Bandwidth\\text{Minimum frame size} = 2 \\times \\text{Propagation delay} \\times \\text{Bandwidth}Minimum&nbsp;frame&nbsp;size=2×Propagation&nbsp;delay×Bandwidth Example: For 10 Mbps network with 25.6μs delay: 2×25.6μs×10Mbps=512&nbsp;bits&nbsp;(64&nbsp;bytes)[1]2 \\times 25.6\\mu s \\times 10\\text{Mbps} = 512\\text{ bits (64 bytes)}[1]2×25.6μs×10Mbps=512&nbsp;bits&nbsp;(64&nbsp;bytes)[1]\nUsed in wireless networks (Wi-Fi):\nThree collision avoidance mechanisms: Interframe Space (IFS): Priority-based waiting periods\nContention Window: Random backoff timer slots\nACKs: Mandatory acknowledgments for successful transmission Energy sensing: Differentiates between idle/busy states through energy levels Virtual carrier sensing: Uses NAV (Network Allocation Vector) for reservation Process flow:\nWait IFS period if channel idle\nEnter contention window with random backoff\nTransmit if channel remains idle after backoff\nWait for ACK timeout1\nThese protocols demonstrate an evolution from simple contention-based systems (ALOHA) to sophisticated collision handling mechanisms (CSMA/CD/CA), each addressing specific network requirements and physical layer constraints. The choice of protocol depends on network type (wired/wireless), latency tolerance, and efficiency requirements.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/collection_2176a485-c612-4054-bbcf-09d953e91fae/d591dd59-c771-43f1-aec1-9438cc3206c2/lecture-Multiple-Access-upload-14.2.2021.pptx\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/collection_2176a485-c612-4054-bbcf-09d953e91fae/d591dd59-c771-43f1-aec1-9438cc3206c2/lecture-Multiple-Access-upload-14.2.2021.pptx</a>\n<br>Answer from Perplexity: <a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">pplx.ai/share</a>RandomAccess<br><a class=\"internal-link\" data-href=\"OSI.md\" href=\"cn/osi.html\" target=\"_self\" rel=\"noopener nofollow\"></a>A network topology defines how devices (nodes) are interconnected in a network. Each type has unique strengths and weaknesses suited for specific use cases.<br><img alt=\"Topologies.jpg\" src=\"cn/img/topologies.jpg\" target=\"_self\">Structure: All devices share a single communication line (central bus).\nAdvantages:\n<br>Inexpensive and simple to set up<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. <br>Suitable for small networks<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a>. <br>Minimal cabling required<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a>.\nDisadvantages: <br>A single bus failure disrupts the entire network<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>. <br>Performance degrades with high traffic or added nodes<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. <br>Limited cable length and security risks (all nodes see transmitted data)<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a>. Structure: Devices connect to a central hub or switch.\nAdvantages:\n<br>Easy to troubleshoot and isolate faults<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>. <br>Adding/removing nodes doesn’t affect the network<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a>. <br>Centralized management improves security<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>.\nDisadvantages: <br>Hub failure disables the entire network<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>. <br>Higher setup and maintenance costs<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a>. <br>Performance depends on hub capacity<a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. Structure: Nodes form a closed loop with unidirectional data flow.\nAdvantages:\n<br>Predictable performance with token-based protocols<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. <br>No central hub required<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>. <br>Handles moderate traffic better than bus topology<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>.\nDisadvantages: <br>Single node or link failure disrupts the network<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>. <br>Complex to scale or modify (requires network shutdown)<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. Structure: Two concentric rings for bidirectional data flow.\nAdvantages:\n<br>Redundant paths enhance fault tolerance<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>. <br>Reduced collision risk<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>.\nDisadvantages: <br>Higher complexity and cost<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>. <br>Still vulnerable to multiple failures<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>. Structure: Each node connects directly to every other node.\nAdvantages:\n<br>High reliability with multiple data paths<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a>. <br>Robust under heavy traffic<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a>. <br>Enhanced security through dedicated links<a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>.\nDisadvantages: <br>Extremely high cabling and setup costs<a data-tooltip-position=\"top\" aria-label=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>. <br>Complex to configure and maintain<a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. Structure: Hierarchical mix of bus and star topologies.\nAdvantages:\n<br>Scalable for large networks (e.g., corporate offices)<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a>. <br>Easy fault isolation in branches<a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://intellipaat.com/blog/network-topology/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">5</a>. <br>Supports mixed media (cables, wireless)<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a>.\nDisadvantages: <br>Backbone failure cripples the network<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">3</a>. <br>High installation and maintenance costs<a data-tooltip-position=\"top\" aria-label=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">4</a>. Small networks: Use Bus or Star for simplicity and low cost. High reliability: Mesh or Dual Ring for redundancy. Large enterprises: Tree topology offers scalable hierarchy. Legacy systems: Ring suits deterministic, low-collision needs. Choose a topology based on budget, scalability requirements, and fault tolerance needs.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/\" target=\"_self\">https://instrumentationtools.com/advantages-and-disadvantages-of-network-topologies/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/\" target=\"_self\">https://www.comparitech.com/net-admin/network-topologies-advantages-disadvantages/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.connectwise.com/blog/rmm/what-is-network-topology\" target=\"_self\">https://www.connectwise.com/blog/rmm/what-is-network-topology</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geektonight.com/network-topology-advantages-disadvantages/\" target=\"_self\">https://www.geektonight.com/network-topology-advantages-disadvantages/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://intellipaat.com/blog/network-topology/\" target=\"_self\">https://intellipaat.com/blog/network-topology/</a>\n<br>Answer from Perplexity: <a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">pplx.ai/share</a><br>Topologies“Communication networks/TypesofConnection.md” could not be found.Create new noteSwap file...RemoveCommunication networks/TypesofConnection.md<img src=\"cn/img/osi1.png\" draggable=\"false\" target=\"_self\">OSI1.png<img src=\"cn/img/osi2.png\" draggable=\"false\" target=\"_self\">OSI2.png<img src=\"cn/img/osi3.png\" draggable=\"false\" target=\"_self\">OSI3.png<br><a class=\"internal-link\" data-href=\"OSI3.png\" href=\"cn/img/osi3.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"TCP IP.md\" href=\"cn/tcp-ip.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"OSI2.png\" href=\"cn/img/osi2.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"OSI1.png\" href=\"cn/img/osi1.html\" target=\"_self\" rel=\"noopener nofollow\"></a>### OSI model\nThe OSI (Open Systems Interconnection) Model is a conceptual framework that standardizes and defines the functions of telecommunication and networking systems. It divides network communications into seven distinct layers, each with specific responsibilities that work together to facilitate data transmission between devices.\nOpen System: It is set of protocols allowing diff. systems to communicate\nPurpose: It facilitates system communication without modifying hardware or software\nStructure: It is a seven layer architecture each defining a specific part of information transfer process of network Each layer communicates with the same layer on the other machine following a set of rules called protocols\nWithin a machine each layer relies on the service of layer below it and provides service to the layer above it\nThe processes that communicate between layers are called per to per processes\n<br><img alt=\"OSI11.png\" src=\"cn/img/osi11.png\" target=\"_self\">The Physical Layer is the lowest layer of the OSI model and deals with the physical connection between devices. It defines the hardware specifications for devices and the transmission medium. The physical layer is responsible for movements of individual bits from one hop (node) to the next.Functions: Transmitting raw bit streams: Sending binary data through physical media like cables or wireless signals. Defining network connections: Establishing how devices are physically linked and the type of transmission medium used (e.g., Ethernet, Wi-Fi). Setting communication direction: Controlling whether data flows in one direction (simplex), both ways at different times (half-duplex), or simultaneously (full-duplex). Managing signal characteristics: Handling aspects such as voltage levels, bits per second, and maximumtransmission distances to ensure reliable data transfer. This concise overview highlights the essential roles of the Physical Layer in enabling network communication\nthrough physical means.<br><img alt=\"OSI12.png\" src=\"cn/img/osi12.png\" target=\"_self\">The Data Link Layer handles node-to-node data transfer, packaging data into frames for transmission across the physical layer. Functions: Framing: Packages data into frames with clear start and end indicators, enabling accurate identification of individual data units. Error Handling: Detects errors using methods like checksums or CRC, and either corrects them or requests retransmission to ensure data integrity. Flow Control: Manages the rate at which data is sent to prevent overwhelming the receiver, employing mechanisms such as sliding window techniques. Physical Addressing: Utilizes MAC addresses to identify devices on a network, ensuring data is directed to the correct destination. Header Addition: Includes headers in frames containing sender and receiver MAC addresses, error checking codes, and control information for efficient routing. Access Management: Implements protocols to regulate access to shared communication channels, preventing collisions and ensuring orderly data transmission. This layer consists of two sublayers:\nMedia Access Control (MAC): Provides flow control and multiplexing for device transmissions over a network Logical Link Control (LLC): Provides flow and error control over the physical medium and identifies line protocols\n<br><img alt=\"OSI13.png\" src=\"cn/img/osi13.png\" target=\"_self\"><br><img alt=\"OSI14.png\" src=\"cn/img/osi14.png\" target=\"_self\">The Network Layer is responsible for routing data packets between different networks. The network layer is responsible for the delivery of individual packets from the source host to the destination host.Functions: Routing Data: Finding the best path for data packets to travel between nodes efficiently. Packet Handling: Segmenting large data into smaller packets, if necessary, and reassembling them at the destination. Logical Addressing: Using IP addresses and headers to enable communication across different networks. Congestion Control: Managing network traffic to prevent overload and ensure smooth data flow. <br>This layer primarily uses Internet Protocol (IPv4 and IPv6) to facilitate data transfer from one node to another across different networks<a data-tooltip-position=\"top\" aria-label=\"https://www.ibm.com/think/topics/osi-model\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.ibm.com/think/topics/osi-model\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://aws.amazon.com/what-is/osi-model/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://aws.amazon.com/what-is/osi-model/\" target=\"_self\">4</a>.<br><img alt=\"OSI15.png\" src=\"cn/img/osi15.png\" target=\"_self\"><br><img alt=\"OSI16.png\" src=\"cn/img/osi16.png\" target=\"_self\">The Transport Layer ensures end-to-end communication and reliable data delivery between devices on different hosts. The transport layer is responsible for the delivery\nof a message from one process to another.Functions: Data Handling: Segmentation and Reassembly: Breaks large data into manageable segments for transmission and reconstructs them at the destination.\nSequencing: Uses sequence numbers to ensure segments are reassembled in the correct order, even if they arrive out of sequence. Error Management: Error Detection: Employs mechanisms like checksums to detect corrupted data.\nRecovery: Requests retransmission of lost or damaged segments, ensuring data integrity. Flow Control: Manages data flow to prevent network congestion and receiver overflow, often using techniques like sliding window protocols. Multiplexing and Port Assignment: Allows multiple applications to communicate simultaneously over the same connection.\nAssigns unique port numbers to each application, directing data to the correct destination using sockets (IP address + port). Services: Connection-oriented (e.g., TCP): Establishes a reliable connection through a three-way handshake, ensuring data is delivered in order with acknowledgments, suitable for applications needing reliability.\nConnectionless (e.g., UDP): Sends data without establishing a connection, prioritizing speed over reliability, ideal for real-time applications where some packet loss is acceptable. <br>Common protocols include TCP (connection-oriented) and UDP (connectionless)<a data-tooltip-position=\"top\" aria-label=\"https://aws.amazon.com/what-is/osi-model/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://aws.amazon.com/what-is/osi-model/\" target=\"_self\">4</a><a data-tooltip-position=\"top\" aria-label=\"https://www.shiksha.com/online-courses/articles/osi-model-explained/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.shiksha.com/online-courses/articles/osi-model-explained/\" target=\"_self\">6</a>.<br><img alt=\"OSI17.png\" src=\"cn/img/osi17.png\" target=\"_self\"><br><img alt=\"OSI18.png\" src=\"cn/img/osi18.png\" target=\"_self\">The Session Layer establishes, maintains, and terminates communication sessions between applications.Functions: Dialogue Control (Session Management): The Session Layer is responsible for establishing, maintaining, and terminating connections or sessions between devices. This involves initiating interactions, ensuring smooth communication, and properly closing the connection once it is no longer needed. Checkpointing and Recovery: To handle interruptions effectively, the Session Layer implements checkpointing. This process involves periodically saving the state of a session so that if an interruption occurs, the session can resume from the last saved point rather than starting over. This enhances efficiency and reduces data loss during disruptions. Authentication and Reconnection Management: Ensuring security is paramount, the Session Layer manages authentication to verify the identities of devices or users before allowing them to join a session. This prevents unauthorized access and ensures secure communication.\nAdditionally, it handles reconnections, enabling devices that lose their connection temporarily to reconnect without losing progress, thanks to checkpointing. Data Synchronization: The Session Layer synchronizes data exchange between devices to maintain consistency. It ensures that data sent by one device is properly received and acknowledged by the other, preventing discrepancies and ensuring both ends are in sync. Session Direction Control: This layer controls the direction of communication, which can be: Simplex: Data flows in one direction only.\nHalf-duplex: Devices take turns sending and receiving data.\nFull-duplex: Both devices can send and receive data simultaneously. Implementation Considerations: The Session Layer's functions are typically managed through protocols that determine how often checkpoints are set, usually automatically based on predefined criteria or network conditions.\nAuthentication methods vary but commonly include mechanisms like passwords, tokens, or digital certificates to ensure security.\nThe choice of session direction (simplex, half-duplex, full-duplex) is influenced by both network conditions and application requirements. For instance, applications requiring simultaneous data exchange, such as video calls, use full-duplex communication. <br>This layer is particularly important for file transfer protocols, remote desktop connections, and online gaming where synchronized sessions are critical<a data-tooltip-position=\"top\" aria-label=\"https://www.radware.com/cyberpedia/application-security/the-osi-model-breaking-down-its-seven-layers/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.radware.com/cyberpedia/application-security/the-osi-model-breaking-down-its-seven-layers/\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.shiksha.com/online-courses/articles/osi-model-explained/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.shiksha.com/online-courses/articles/osi-model-explained/\" target=\"_self\">6</a>.<br><img alt=\"OSI19.png\" src=\"cn/img/osi19.png\" target=\"_self\">The Presentation Layer manages data translation, encryption, and compression.Functions:\nEncryption/Decryption: Provides secure encryption and decryption for data protection.\nData Translation: Facilitates seamless conversion between application and network formats.\nCompression: Implements compression to optimize bandwidth usage and improve efficiency.\nCharacter Set Conversion: Manages character set conversion to ensure compatibility across different systems.\nFormat Standardization: Ensures data is formatted consistently for mutual understanding by sender and receiver. <br>This layer works with various data formats like HTML, JSON, and CSV<a data-tooltip-position=\"top\" aria-label=\"https://aws.amazon.com/what-is/osi-model/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://aws.amazon.com/what-is/osi-model/\" target=\"_self\">4</a>.<br><img alt=\"OSI20.png\" src=\"cn/img/osi20.png\" target=\"_self\">The Application Layer is the closest to the end user and provides network services directly to applications. The application layer is responsible for providing services to the user.Functions:\nEnables Application Interaction: Provides interfaces for applications to access network services. Lets apps like web browsers or email clients connect to network services.\nIdentifies Communication Partners: Facilitates the recognition of communication endpoints. Identifies which devices are communicating with each other.\nManages Resource Availability: Determines the availability of resources required for communication. Makes sure the network has what it needs for communication (like bandwidth).\nSynchronizes Communication: Manages timing and flow of data exchange. Keeps data flowing smoothly between devices.\nServices Provided:\nNetwork Virtual Terminal: Emulates terminals for remote login access. Lets you log in to a computer from far away, like using a terminal. File Management: Enables file operations (access, modify, retrieve) on remote systems. Allows you to access, edit, and manage files on another computer over the internet. Mail Services: Facilitates email handling, including storage and forwarding. Directory Services: Provides access to distributed directories containing global information about objects and services. Provides access to databases that store info about devices, users, and services on the network. <br>This layer is concerned with the specific type of application itself and its standardized communication methods<a data-tooltip-position=\"top\" aria-label=\"https://aws.amazon.com/what-is/osi-model/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://aws.amazon.com/what-is/osi-model/\" target=\"_self\">4</a>.<br><img alt=\"OSI21.png\" src=\"cn/img/osi21.png\" target=\"_self\">Data communication in the OSI model follows a specific flow:\nThe sender's application layer passes data down through each layer\nEach layer adds its own headers and addressing information\nData moves down the stack until it's transmitted through the physical medium\nAt the receiver's end, each layer processes the data according to relevant headers\nData moves up the layers, being unpacked at each step\n<br>Finally, the application at the receiving end receives the data<a data-tooltip-position=\"top\" aria-label=\"https://aws.amazon.com/what-is/osi-model/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://aws.amazon.com/what-is/osi-model/\" target=\"_self\">4</a>\nThis layered approach allows complex data communications to occur seamlessly between applications on different devices, regardless of the underlying hardware and software implementations.OSIThe&nbsp;TCP/IP protocol suite&nbsp;is the foundation of modern networking, enabling communication and data transfer across the internet and other networks. It is both a protocol suite (a collection of protocols) and a layered communication model.\nTCP&nbsp;(Transmission Control Protocol) ensures reliable, ordered, and error-checked delivery of data between applications.\nIP&nbsp;(Internet Protocol) handles addressing and routing, ensuring data packets are sent to the correct destination.\nTCP/IP is a practical, scalable, and non-proprietary model that supports interoperability across diverse networks and devices The layers in the TCP/IP protocol suite do not exactly match those in the OSI model\nThe original TCP/IP protocol suite was defined as having four layers: host-to-network, internet, transport, and application.\nHowever, when TCP/IP is compared to OSI, we can say that the TCP/IP protocol suite is made of five layers: physical, data link, network, transport, and application. Reference Model:&nbsp;Both the OSI as well as the TCP/IP are reference models. This means that we can take a reference or help from the specification of these two models during implementing the network.\nLayered Architecture:&nbsp;Both the OSI and TCP/IP model have a layered architecture. Each layer provides different functionalities in the network. The OSI model has generally 7 layers, while the TCP/IP has 5 layers.\nProtocols: Both the OSI as well as the TCP/IP model makes use of different protocols in different layers for the proper implementation of the model over the network.\nFunctionalities:&nbsp;The layers of the OSI and the TCP/IP model provides approximately the same functionality. The Application layer of the TCP/IP model acts as the upper three layers(Application, Presentation, and Session layer) of the OSI model, while the Internet layer in the TCP/IP model acts as the Network layer of the OSI model. Rest of the layers in both the models works the same.\nThe OSI model and the TCP/IP model differ significantly in terms of structure, development, functionality, and practical application. Below is a detailed comparison of their dissimilarities. Layer Structure OSI Model: Consists of seven layers: Physical, Data Link, Network, Transport, Session, Presentation, and Application.\nTCP/IP Model: Has four layers: Network Access, Internet, Transport, and Application. It combines the OSI model’s Application, Presentation, and Session layers into a single Application layer and merges the Physical and Data Link layers into the Network Access layer. Development Approach OSI Model: Developed as a theoretical framework by the International Organization for Standardization (ISO) to standardize networking concepts before implementation. It is protocol-independent.\nTCP/IP Model: Created by DARPA as a practical framework based on existing protocols to meet the immediate needs of reliable communication over the internet. It is protocol-dependent. Conceptual vs Practical OSI Model: A conceptual model used as guidance for network design and understanding. It focuses on defining services, interfaces, and protocols clearly.\nTCP/IP Model: A practical implementation used for real-world networking. It lacks clear separation between services, interfaces, and protocols. Protocol Specification OSI Model: Protocol-independent; allows flexibility to implement custom protocols as needed.\nTCP/IP Model: Protocol-specific; relies on predefined protocols like TCP and IP. Replacing or modifying protocols is complex. Reliability OSI Model: The transport layer guarantees delivery of packets through connection-oriented communication.\nTCP/IP Model: The transport layer supports both connection-oriented (TCP) and connectionless (UDP) communication but does not guarantee delivery of packets. Layer Functions OSI Model: Distinctly separates the Presentation and Session layers for tasks like encryption, compression, and synchronization.\nTCP/IP Model: Does not have separate Presentation or Session layers; these functions are handled within the Application layer. Documentation OSI Model: Well-documented with clear specifications for services, interfaces, and protocols.\nTCP/IP Model: Less formally documented; specifications are not as detailed or standardized. Network Focus OSI Model: Designed as a universal model applicable to various types of networks beyond the internet.\nTCP/IP Model: Focuses specifically on internet-based communication architecture. Ease of Setup OSI Model: Easier to set up due to its standardized approach and modularity.\nTCP/IP Model: More complex to configure because it is tightly coupled with specific protocols and internet architecture. Modularity OSI Model: Highly modular with seven distinct layers providing clear functionality separation.\nTCP/IP Model: Less modular due to fewer layers (four), combining functionalities into broader categories like the Application layer. Connection Mechanisms OSI Model: Lacks specialized mechanisms for secure connections.\nTCP/IP Model: Implements mechanisms like the three-way handshake in TCP for reliable and secure connections. Summary Table“Pasted image 20250306051622.png” could not be found.“Pasted image 20250306051539.png” could not be found.The TCP/IP model consists of four layers, each with specific roles and associated protocols:1. Application Layer\nFunction: Directly interacts with software applications to provide network services to end users.\nProtocols: HTTP (Hypertext Transfer Protocol): Web browsing\nFTP (File Transfer Protocol): File transfers\nSMTP (Simple Mail Transfer Protocol): Email\nDNS (Domain Name System): Resolves domain names into IP addresses Example: When you browse a website, HTTP operates at this layer to fetch web pages.\n2. Transport Layer\nFunction: Ensures reliable communication between sender and receiver by segmenting data into packets, managing flow control, error correction, and sequencing.\nKey Protocols: TCP: Connection-oriented protocol ensuring reliable data transmission.\nUDP (User Datagram Protocol): Connectionless protocol for faster but less reliable communication (e.g., video streaming). Example: TCP ensures all parts of an email are received in the correct order.\n3. Internet Layer\nFunction: Handles addressing, routing, and delivering packets across multiple networks.\nKey Protocols: IP: Provides logical addressing (IP addresses) for devices.\nICMP (Internet Control Message Protocol): Used for error reporting and diagnostics (e.g., ping). Example: The IP protocol ensures that packets from a sender in one network reach the recipient in another network.\n4. Network Access Layer (or Link Layer)\nFunction: Manages the physical transmission of data over hardware like Ethernet or Wi-Fi. Converts data into electrical signals or radio waves for transmission.\nKey Protocols: Ethernet: Local area network communication.\nARP (Address Resolution Protocol): Maps IP addresses to physical MAC addresses. Example: This layer ensures your computer's network card can send data over a wired or wireless connection.\nHow TCP/IP Works Data from an application is passed down through the layers: The Application Layer generates the data.\nThe Transport Layer segments it into packets and assigns sequence numbers.\nThe Internet Layer adds source and destination IP addresses for routing.\nThe Network Access Layer converts packets into signals for transmission. At the receiving end: The process is reversed as packets move up the layers to reassemble the original message. This encapsulation and decapsulation process ensures reliable communication between devices.Advantages of TCP/IP\nInteroperability: Works across different hardware platforms and operating systems.\nScalability: Supports small local networks to large global networks like the internet.\nReliability: Features like error correction and retransmission ensure accurate delivery.\nFlexibility: Can adapt to various technologies like Ethernet, Wi-Fi, or fiber optics.\nReal-Life Example When you send an email:\nAt the Application Layer, SMTP formats your message.\nAt the Transport Layer, TCP segments it into packets with sequence numbers.\nAt the Internet Layer, IP assigns addresses for routing.\nAt the Network Access Layer, Ethernet transmits it over a physical medium.\nAt the recipient's end, these steps are reversed to deliver your email intact.In conclusion, TCP/IP is indispensable for modern networking due to its reliability, scalability, and compatibility with diverse systems. It underpins everything from web browsing to file transfers and video streaming.TCP IPMost local-area networks use a 48-bit (6-byte) physical address written as 12 hexadecimal digits; every byte (2 hexadecimal digits) is separated by a colon, as shown below:\n07:01:02:01:2C:4BA 6-byte (12 hexadecimal digits) physical address.A port address is a 16-bit address represented by one decimal number as shown:\n753A 16-bit port address represented as one single number.The physical addresses change from hop to hop,\nbut the logical and port addresses usually remain the same.<br>We use the concept of layers in our daily life. As an example, let us consider two friends who communicate through postal mail. The process of sending a letter to a friend would be complex if there were no services available from the post office.<img src=\"cn/img/layeredexample.png\" draggable=\"false\" target=\"_self\">Layeredexample.png Well-defined interfaces and layer functions provide modularity to a network. As long as a layer provides the expected services to the layer above it, the specific implementation of its functions can be modified or replaced without requiring changes to the surrounding layers. The seven layers can be thought of as belonging to three subgroups. Layers 1, 2, and 3-physical, data link, and network-are the network support layers; they deal with the physical aspects of moving data from one device to another (such as electrical specifications, physical connections, physical addressing, and transport timing and reliability). Layers 5, 6, and 7-session, presentation, and application-can be&nbsp;thought of as the user support layers; they allow interoperability&nbsp;among unrelated software systems. The upper OSI layers are almost always implemented in software; lower layers are a combination of hardware and software, except for the physical layer, which is mostly hardware. A packet (header and data) at level 7 is encapsulated in a packet at level 6. The whole packet at level 6 is encapsulated in a packet at level 5, and so on. In other words, the data portion of a packet at level N - 1 carries the whole packet (data and header and maybe trailer) from level N. “Pasted image 20250306055232.png” could not be found.The image illustrates the two main functionalities of the Data Link Layer in the OSI model, divided into two sublayers:\nData Link Control DLC This corresponds to the Logical Link Control LLC sublayer. Multiple-Access Resolution This corresponds to the Media Access Control MAC sublayer.\nHere’s what each part represents:1 Data Link Control LLC This portion of the Data Link Layer focuses on ensuring reliable communication between devices when there is a dedicated link. Its main tasks include:\nFlow Control Regulates the data flow to prevent a fast sender from overwhelming a slow receiver.\nError Detection and Correction Identifies and corrects errors in transmitted frames.\nFraming Encapsulates data from the Network Layer into frames for transmission.\nProtocol Multiplexing Allows multiple network protocols to coexist by identifying which protocol should handle incoming data.\nFor example, in a point-to-point connection, LLC ensures that data is transmitted error-free and in sequence.2 Multiple-Access Resolution MAC This functionality is essential when multiple devices share the same communication medium. The MAC sublayer ensures that devices access the shared medium without interference or collisions. Its responsibilities include:\nMedia Access Coordination Determines which device can transmit data at any given time using protocols like CSMA/CD or CSMA/CA.\nAddressing Uses unique MAC addresses to identify devices on a local network.\nCollision Handling Resolves conflicts when multiple devices attempt to transmit simultaneously.\nFor example, in a wireless network, MAC ensures that devices take turns transmitting data to avoid collisions.Why This Division The separation into these two sublayers allows the Data Link Layer to handle both dedicated and shared communication scenarios efficiently:\nThe LLC/DLC manages higher-level tasks like flow and error control.\nThe MAC focuses on resolving access conflicts in shared environments, such as Ethernet or Wi-Fi networks.\nThis layered approach simplifies design and ensures flexibility across different types of networks.<br><a class=\"internal-link\" data-href=\"Topologies.md\" href=\"cn/topologies.html\" target=\"_self\" rel=\"noopener nofollow\"></a>### What is a Computer Network ?\nA computer network is a collection of interconnected devices, often referred to as nodes, that communicate with each other to share resources, exchange data, and enable collaboration. These devices can include computers, printers, servers, and other hardware capable of sending or receiving data. The connections between these devices are established through communication links such as cables, fiber optics, or wireless signals1.\nNodes: Devices like computers, printers, and routers that participate in the network.\nLinks: The communication pathways (e.g., cables, radio waves) that connect nodes.\nTransmission Medium: The physical or wireless means by which data travels.\nProtocols: Rules and standards that govern communication between devices to ensure compatibility.\nData communication refers to the exchange of data between two or more devices through a transmission medium such as cables, fiber optics, or radio waves. It is a fundamental aspect of computer networks and telecommunications.The effectiveness of a data communication system is determined by four main characteristics: Delivery: Ensures data reaches the correct destination. Example: When you send an email, the email server ensures it is delivered to the intended recipient's inbox and not to someone else's account. Accuracy: Guarantees that the transmitted data remains unaltered. Example: When downloading a software update, error-checking mechanisms like checksums ensure that the file downloaded is identical to the original file on the server, without corruption. Timeliness: Data must be delivered within an acceptable time frame, especially critical for real-time audio and video. Example: During a live video conference on platforms like Zoom, audio and video streams must arrive in real-time to maintain a smooth conversation without delays. Jitter: Refers to variations in packet arrival time, which can affect the quality of audio or video transmissions. Example: In streaming services like Netflix, if packets arrive with varying delays (jitter), it can cause buffering or interruptions in the playback of a movie. A typical data communication system consists of five components:\nMessage: The information to be transmitted (e.g., text, audio, video).\nSender: The device that initiates the communication (e.g., computer, camera).\nReceiver: The device that receives the message (e.g., monitor, smartphone).\nTransmission Medium: The physical path through which the message travels (e.g., cables, wireless signals).\nProtocol: A set of rules governing communication between devices to ensure compatibility and understanding1.\nData flow can occur in three modes:\nSimplex: Unidirectional communication; one device transmits while the other only receives (e.g., keyboards and monitors).\nHalf-Duplex: Both devices can transmit and receive, but not simultaneously (e.g., walkie-talkies).\nFull-Duplex: Both devices can transmit and receive simultaneously (e.g., telephone networks)1.\nData can be transmitted in two formats:\nAnalog Data: Continuous signals representing information.\nDigital Data: Discrete signals with distinct values2.\nThe medium used for data transmission includes:\nWired media like twisted-pair cables, coaxial cables, and fiber optics.\nWireless media like radio waves and satellite links1.\nProtocols are essential for ensuring successful communication between devices. They define rules for:\nSyntax (data format)\nSemantics (meaning of bits)\nTiming (data transfer speed and synchronization)3.\nExamples of widely used protocols include:\nTCP/IP for internet communications\nFTP for file transfers\nHTTP for web browsing.\nDataCommunicationCSMA/CD is a network protocol used in wired Ethernet networks to manage access to a shared communication channel. It enhances the basic CSMA protocol by adding a mechanism for detecting and handling collisions when multiple devices attempt to transmit data simultaneously. This ensures efficient use of the channel while minimizing data loss due to collisions.<br><img alt=\"CSMACD2.png\" src=\"cn/img/csmacd2.png\" target=\"_self\"><br><img alt=\"CSMACD4.png\" src=\"cn/img/csmacd4.png\" target=\"_self\"> Carrier Sensing: Before transmitting, a device listens to the channel to check if it is idle (no ongoing transmission).\nIf the channel is busy, the device waits until it becomes free. Data Transmission: Once the channel is idle, the device begins transmitting its frame. Collision Detection: While transmitting, the device continuously monitors the channel for collisions. A collision occurs when two or more devices transmit simultaneously, causing signal interference.\nCollisions are detected by observing abnormal energy levels or corrupted signals on the channel. Collision Handling: Upon detecting a collision, the device immediately stops transmitting and sends a jamming signal to notify all other devices about the collision.\nThe jamming signal prevents other devices from transmitting during this period. Random Backoff: After sending the jamming signal, the device waits for a random amount of time (calculated using a binary exponential backoff algorithm) before attempting to retransmit.\nThis randomness reduces the likelihood of repeated collisions. <br><img alt=\"CSMACD1.png\" src=\"cn/img/csmacd1.png\" target=\"_self\"><br><img alt=\"CSMACD3.png\" src=\"cn/img/csmacd3.png\" target=\"_self\"> Half-Duplex Communication: Devices can either send or receive data at any given time but not both simultaneously. Collision Detection Mechanism: Collisions are detected during transmission, allowing devices to stop and retry rather than wasting bandwidth on corrupted data. Minimum Frame Size: To ensure collision detection works properly, frames must be long enough for collisions to be detected before transmission completes.\nThe minimum frame size is calculated as: [\n\\text{Minimum Frame Size} = 2 \\times \\text{Propagation Delay} \\times \\text{Bandwidth}\n]\nFor example, in a 10 Mbps Ethernet network with a maximum propagation delay of 25.6 μs:\n[\n2 \\times 25.6 \\mu s \\times 10 \\text{ Mbps} = 512 \\text{ bits (64 bytes)}\n] Efficient Collision Handling: Collisions are detected early, preventing wasted bandwidth on corrupted frames. Improved Channel Utilization: The protocol ensures that only one device transmits at a time, reducing contention. Simple Implementation: CSMA/CD is relatively easy to implement in wired networks like Ethernet. Not Suitable for Wireless Networks: Collision detection relies on energy levels, which are difficult to monitor in wireless networks due to signal attenuation over distance. Performance Degradation with High Traffic: As more devices contend for access, collisions increase, leading to reduced efficiency. Half-Duplex Restriction: Devices cannot send and receive data simultaneously, limiting throughput compared to full-duplex systems. CSMA/CD is primarily used in wired Ethernet networks (IEEE 802.3 standard) where multiple devices share a common medium, such as coaxial cables or twisted-pair wires.Imagine three computers (A, B, and C) connected via Ethernet:\nComputer A begins transmitting data after sensing an idle channel.\nWhile A is transmitting, Computer B also senses an idle channel (due to propagation delay) and starts transmitting.\nA collision occurs as signals from A and B interfere with each other.\nBoth computers detect the collision and send jamming signals.\nAfter waiting for random backoff times, A and B retry their transmissions.\nCSMA/CD was revolutionary in managing contention in shared communication channels for wired networks like Ethernet. However, as network traffic increased and full-duplex communication became standard, CSMA/CD's limitations led to its replacement by more advanced protocols in modern networks.<br>[1] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=o0GXIHK-4Qo\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=o0GXIHK-4Qo\" target=\"_self\">YouTube Video</a><br>\n[2] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=hyvDRVfYnKw\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=hyvDRVfYnKw\" target=\"_self\">YouTube Video</a><br>\n[3] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=c2OLbhWKxMk\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=c2OLbhWKxMk\" target=\"_self\">YouTube Video</a><br>\n[4] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=4LjpltCSd30\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=4LjpltCSd30\" target=\"_self\">YouTube Video</a><br>\n[5] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=28P3Fv2j8qU\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=28P3Fv2j8qU\" target=\"_self\">YouTube Video</a><br>\n[6] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=xGzDbJz-AJ8\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=xGzDbJz-AJ8\" target=\"_self\">YouTube Video</a><br>\n[7] <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=Q9t6q5MUcmQ\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=Q9t6q5MUcmQ\" target=\"_self\">YouTube Video</a><br>\n[8] <a data-tooltip-position=\"top\" aria-label=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/collection_2176a485-c612-4054-bbcf-09d953e91fae/d591dd59-c771-43f1-aec1-9438cc3206c2/lecture-Multiple-Access-upload-14.2.2021.pptx\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/collection_2176a485-c612-4054-bbcf-09d953e91fae/d591dd59-c771-43f1-aec1-9438cc3206c2/lecture-Multiple-Access-upload-14.2.2021.pptx\" target=\"_self\">Lecture Slides</a> <br>Answer sourced from Perplexity: <a class=\"internal-link\" data-href=\"pplx.ai/share\" href=\".html\" target=\"_self\" rel=\"noopener nofollow\">pplx.ai/share</a>CSMACDPure ALOHA is one of the earliest random access protocols used in computer networks to enable multiple devices to share a single communication channel. It operates on a simple principle: devices can transmit data whenever they have a message to send, without checking whether the channel is free. This decentralized approach makes it easy to implement but also leads to inefficiencies due to frequent collisions.<br><img alt=\"PureALOHA1.png\" src=\"cn/img/purealoha1.png\" target=\"_self\">The operation of Pure ALOHA can be summarized in the following steps:\nTransmission Anytime: Nodes transmit frames whenever they have data to send, without waiting for the channel to be idle.\nCollisions: If two or more nodes transmit simultaneously, their frames collide, resulting in data corruption.\nAcknowledgment: After transmitting a frame, the sender waits for an acknowledgment from the receiver. If no acknowledgment is received within a specified time, the sender assumes that the frame was destroyed due to collision.\nRetransmission: The sender waits for a random amount of time before retransmitting the frame. This randomness reduces the chances of repeated collisions.\n<br><img alt=\"PureALOHA2.png\" src=\"cn/img/purealoha2.png\" target=\"_self\">The vulnerable period in Pure ALOHA is two frame times (2T). This is the time during which collisions can occur between two frames:\nIf one frame starts at , another frame starting within to will collide with it.\nThis large vulnerable period contributes to frequent collisions.\nThroughput (( S )) measures the efficiency of successful transmissions in Pure ALOHA and is calculated using the formula:Where:\n( G ): Offered load (average number of transmission attempts per unit time).\n( e ): Euler's constant (). Occurs when ( G = 0.5 ).\nMaximum throughput is:\nThis means that only 18.4% of the channel capacity is utilized effectively in Pure ALOHA.\nSimplicity: Easy to implement with minimal overhead, as devices can transmit immediately when they have data.\nReal-Time Transmission: Suitable for applications requiring immediate data transmission, such as voice and video communications. Frequent Collisions: The lack of coordination leads to high collision rates and inefficiency.\nLow Throughput: With a maximum efficiency of only 18.4%, it performs poorly in high-load networks.\nNo Contention Management: There are no mechanisms for prioritizing devices or managing congestion, which can lead to network instability under heavy traffic.\nPure ALOHA is best suited for simple networks with low traffic and latency requirements, such as early satellite communication systems or small-scale setups where simplicity outweighs efficiency concerns.Slotted ALOHA improves upon Pure ALOHA by introducing time slots, reducing collision probability and increasing throughput efficiency.While Pure ALOHA laid the foundation for modern random access protocols, its inefficiency due to high collision rates limits its practical use today. It has been largely replaced by more advanced protocols like Slotted ALOHA and CSMA/CD that offer better performance and reliability.PureALOHACarrier Sense Multiple Access (CSMA) is a contention-based protocol used in computer networks to manage access to a shared communication channel. It improves upon earlier protocols like ALOHA by introducing a mechanism to reduce collisions, which occur when multiple devices transmit data simultaneously.<br><img alt=\"CSMA1.png\" src=\"cn/img/csma1.png\" target=\"_self\"><br><img alt=\"CSMA2.png\" src=\"cn/img/csma2.png\" target=\"_self\">\nBefore transmitting data, a device listens to the communication channel (carrier) to check if it is idle or busy. If the channel is idle, the device proceeds with transmission. If it is busy, the device waits until it becomes idle. Multiple devices share the same communication medium and compete for access. Although CSMA reduces the chances of collisions, they can still occur due to propagation delays (the time it takes for signals to travel across the network). CSMA comes in different variants based on how devices behave when they sense that the channel is busy:\nThe device transmits immediately after the channel becomes idle. This approach increases the likelihood of collisions if multiple devices are waiting for the channel to become free at the same time. The device waits for a random amount of time before checking the channel again if it is busy. This reduces collisions but increases delay. The device transmits with a probability p when the channel is idle. If it does not transmit, it waits for the next time slot and repeats the process.<br>\n<img alt=\"CSMA3.png\" src=\"cn/img/csma3.png\" target=\"_self\">\n<br><img alt=\"CSMA4.png\" src=\"cn/img/csma4.png\" target=\"_self\">\nCollision Reduction: By sensing the carrier before transmitting, CSMA reduces the likelihood of collisions compared to ALOHA protocols. Efficient Use of Channel: Idle channels are quickly utilized without unnecessary delays. Simplicity: Easy to implement in networks with shared communication media. Collisions Still Occur: Due to propagation delays, two devices may sense an idle channel and transmit simultaneously, causing a collision. Wasted Bandwidth: Collisions result in wasted bandwidth as corrupted frames must be retransmitted. Performance Degrades with High Traffic: As more devices contend for access, collisions increase, leading to reduced efficiency. CSMA is widely used in wired and wireless networks where multiple devices share a common medium:\nEthernet networks (CSMA/CD variant). Wireless networks like Wi-Fi (CSMA/CA variant). Used in wired Ethernet networks. Devices monitor the channel during transmission and stop immediately if a collision is detected. After detecting a collision, they wait for a random backoff time before retrying. Used in wireless networks like Wi-Fi. Devices use mechanisms like random backoff timers and acknowledgments to avoid collisions before they occur. Imagine five computers connected to a shared communication medium:\nComputer A wants to send data to Computer B. Before transmitting, A senses whether the medium is idle or busy. If idle, A transmits its data frame; if busy, A waits until the medium becomes free. If another computer (e.g., Computer C) also starts transmitting at nearly the same time as A, their frames collide, leading to data corruption. In such cases, both A and C will wait for random backoff times before retransmitting their frames. CSMA is a foundational protocol that balances simplicity and efficiency by introducing carrier sensing to reduce collisions in shared communication channels. While it has limitations under high traffic conditions, its variants like CSMA/CD and CSMA/CA address these issues and remain integral to modern wired and wireless networking systems. <br><a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=8wptjECeGA8\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=8wptjECeGA8\" target=\"_self\">YouTube Video 1</a> <br><a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=gLaL8NntOsc\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=gLaL8NntOsc\" target=\"_self\">YouTube Video 2</a> <br><a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=MAZi6VoekYw\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=MAZi6VoekYw\" target=\"_self\">YouTube Video 3</a> <br><a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=IftFvfSywCQ\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=IftFvfSywCQ\" target=\"_self\">YouTube Video 4</a> <br><a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=o0GXIHK-4Qo\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=o0GXIHK-4Qo\" target=\"_self\">YouTube Video 5</a> <br><a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=MvzEnj2ZnIo\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=MvzEnj2ZnIo\" target=\"_self\">YouTube Video 6</a> <br><a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">Perplexity Answer</a> CSMASlotted ALOHA is an enhancement of the Pure ALOHA protocol that aims to reduce collisions and improve efficiency in shared communication channels. It introduces time synchronization by dividing the channel into discrete time slots, allowing stations to transmit only at the beginning of these slots.<br><img alt=\"SlottedALOHA1.png\" src=\"cn/img/slottedaloha1.png\" target=\"_self\">\nTime Slots: The channel is divided into equal-sized time slots, and stations can only begin transmission at the start of a slot. This synchronization reduces the chances of overlapping transmissions.\nCollision Detection: If two or more stations transmit during the same slot, their frames collide, resulting in corrupted data.\nAcknowledgment: After transmitting a frame, a station waits for an acknowledgment from the receiver. If no acknowledgment is received, the station assumes collision occurred.\nRetransmission: Stations wait for a random amount of time before retransmitting their frames, reducing repeated collisions.\n<br><img alt=\"SlottedALOHA2.png\" src=\"cn/img/slottedaloha2.png\" target=\"_self\">\nSynchronization: All stations must agree on the timing of slots to ensure transmissions align with slot boundaries.\nReduced Vulnerable Time: The vulnerable period for collisions is reduced to one frame time (T), compared to two frame times (2T) in Pure ALOHA.\nRandom Backoff: After a collision, stations select a random backoff time before retrying, minimizing repeated collisions.\nThroughput ((S)) measures the efficiency of successful transmissions and is calculated using:Where:\n(G): Offered load (average number of transmission attempts per unit time).\n(e): Euler's constant . Occurs when (G = 1).\nMaximum throughput is:\nThis means that Slotted ALOHA achieves up to 36.8% efficiency, which is double that of Pure ALOHA.\nImproved Efficiency: The use of time slots reduces collision probability and increases throughput.\nSimplicity: Easy to implement with minimal overhead.\nBetter Performance: Suitable for networks with moderate traffic loads. Synchronization Requirement: All stations must synchronize their clocks to align with slot boundaries, which adds complexity.\nCollisions Still Occur: While reduced, collisions are not eliminated entirely.\nLimited Throughput: Efficiency remains relatively low compared to other protocols like CSMA/CD.\nSlotted ALOHA is used in systems where simplicity and moderate efficiency are acceptable, such as:\nEarly satellite communication systems.\nRFID (Radio Frequency Identification) systems for inventory tracking.\nSlotted ALOHA improves upon Pure ALOHA by introducing synchronization and reducing collision probability, making it more efficient for shared communication channels. However, its performance is still limited compared to more advanced protocols like CSMA/CD or CSMA/CA.<br>SlottedALOHA<img src=\"cn/img/multipleaccess.png\" draggable=\"false\" target=\"_self\">MultipleAccess.png","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"RandomAccess","level":1,"id":"RandomAccess_0"},{"heading":"Pure ALOHA","level":2,"id":"Pure_ALOHA_0"},{"heading":"Slotted ALOHA","level":2,"id":"Slotted_ALOHA_0"},{"heading":"CSMA (Carrier Sense Multiple Access)","level":2,"id":"CSMA_(Carrier_Sense_Multiple_Access)_0"},{"heading":"CSMA/CD (Collision Detection)","level":2,"id":"CSMA/CD_(Collision_Detection)_0"},{"heading":"CSMA/CA (Collision Avoidance)","level":2,"id":"CSMA/CA_(Collision_Avoidance)_0"},{"heading":"Citations:","level":3,"id":"Citations_0"},{"heading":"Topologies","level":1,"id":"Topologies_0"},{"heading":"Network Topologies","level":3,"id":"Network_Topologies_0"},{"heading":"1. Bus Topology","level":2,"id":"1._Bus_Topology_0"},{"heading":"2. Star Topology","level":2,"id":"2._Star_Topology_0"},{"heading":"3. Ring Topology","level":2,"id":"3._Ring_Topology_0"},{"heading":"<strong>Dual Ring Topology</strong>","level":2,"id":"**Dual_Ring_Topology**_0"},{"heading":"4. Mesh Topology","level":2,"id":"4._Mesh_Topology_0"},{"heading":"5. Tree Topology","level":2,"id":"5._Tree_Topology_0"},{"heading":"<strong>Summary Table</strong>","level":2,"id":"**Summary_Table**_0"},{"heading":"<strong>Key Takeaways</strong>","level":2,"id":"**Key_Takeaways**_0"},{"heading":"Citations:","level":3,"id":"Citations_1"},{"heading":"OSI","level":1,"id":"OSI_0"},{"heading":"Layered Architecture:","level":5,"id":"Layered_Architecture_0"},{"heading":"Layer 1: Physical Layer","level":2,"id":"Layer_1_Physical_Layer_0"},{"heading":"Layer 2: Data Link Layer","level":2,"id":"Layer_2_Data_Link_Layer_0"},{"heading":"Layer 3: Network Layer","level":2,"id":"Layer_3_Network_Layer_0"},{"heading":"Layer 4: Transport Layer","level":2,"id":"Layer_4_Transport_Layer_0"},{"heading":"Layer 5: Session Layer","level":2,"id":"Layer_5_Session_Layer_0"},{"heading":"Layer 6: Presentation Layer","level":2,"id":"Layer_6_Presentation_Layer_0"},{"heading":"Layer 7: Application Layer","level":2,"id":"Layer_7_Application_Layer_0"},{"heading":"How Communication Happens in the OSI Model","level":2,"id":"How_Communication_Happens_in_the_OSI_Model_0"},{"heading":"TCP IP","level":1,"id":"TCP_IP_0"},{"heading":"Overview of TCP/IP:","level":5,"id":"Overview_of_TCP/IP_0"},{"heading":"OSI and TCP IP:","level":4,"id":"OSI_and_TCP_IP_0"},{"heading":"Similarities between the OSI and TCP/IP:","level":4,"id":"Similarities_between_the_OSI_and_TCP/IP_0"},{"heading":"Dissimilarities between the OSI and the TCP/IP:","level":4,"id":"Dissimilarities_between_the_OSI_and_the_TCP/IP_0"},{"heading":"Layers of the TCP/IP Model","level":4,"id":"Layers_of_the_TCP/IP_Model_0"},{"heading":"Physical Address","level":3,"id":"Physical_Address_0"},{"heading":"Physical Address","level":3,"id":"Physical_Address_1"},{"heading":"LAYERED TASKS","level":4,"id":"LAYERED_TASKS_0"},{"heading":"More About Layered Architecture","level":3,"id":"More_About_Layered_Architecture_0"},{"heading":"Two Parts of Data Link Layer","level":3,"id":"Two_Parts_of_Data_Link_Layer_0"},{"heading":" Multiple Access","level":1,"id":"_Multiple_Access_0"},{"heading":"Random Access","level":1,"id":"Random_Access_0"},{"heading":"Control Access","level":1,"id":"Control_Access_0"},{"heading":"DataCommunication","level":1,"id":"DataCommunication_0"},{"heading":"Key Components of a Computer Network","level":2,"id":"Key_Components_of_a_Computer_Network_0"},{"heading":"Data Communication Overview","level":3,"id":"Data_Communication_Overview_0"},{"heading":"Key Characteristics of Data Communication","level":4,"id":"Key_Characteristics_of_Data_Communication_0"},{"heading":"Components of Data Communication","level":4,"id":"Components_of_Data_Communication_0"},{"heading":"Modes of Data Flow","level":4,"id":"Modes_of_Data_Flow_0"},{"heading":"Transmission Types","level":4,"id":"Transmission_Types_0"},{"heading":"Transmission Mediums","level":4,"id":"Transmission_Mediums_0"},{"heading":"Protocols in Data Communication","level":4,"id":"Protocols_in_Data_Communication_0"},{"heading":"CSMACD","level":1,"id":"CSMACD_0"},{"heading":"Carrier Sense Multiple Access with Collision Detection (CSMA/CD)","level":1,"id":"Carrier_Sense_Multiple_Access_with_Collision_Detection_(CSMA/CD)_0"},{"heading":"How CSMA/CD Works","level":2,"id":"How_CSMA/CD_Works_0"},{"heading":"Key Features","level":2,"id":"Key_Features_0"},{"heading":"Advantages","level":2,"id":"Advantages_0"},{"heading":"Limitations","level":2,"id":"Limitations_0"},{"heading":"Applications","level":2,"id":"Applications_0"},{"heading":"Example Scenario","level":2,"id":"Example_Scenario_0"},{"heading":"Comparison with Other Protocols","level":2,"id":"Comparison_with_Other_Protocols_0"},{"heading":"Conclusion","level":2,"id":"Conclusion_0"},{"heading":"Citations","level":2,"id":"Citations_2"},{"heading":"PureALOHA","level":1,"id":"PureALOHA_0"},{"heading":"Pure ALOHA Protocol","level":1,"id":"Pure_ALOHA_Protocol_0"},{"heading":"Working Principle","level":2,"id":"Working_Principle_0"},{"heading":"Vulnerable Period","level":2,"id":"Vulnerable_Period_0"},{"heading":"Throughput Calculation","level":2,"id":"Throughput_Calculation_0"},{"heading":"Maximum Throughput:","level":3,"id":"Maximum_Throughput_0"},{"heading":"Advantages","level":2,"id":"Advantages_1"},{"heading":"Limitations","level":2,"id":"Limitations_1"},{"heading":"Applications","level":2,"id":"Applications_1"},{"heading":"Comparison with Slotted ALOHA","level":2,"id":"Comparison_with_Slotted_ALOHA_0"},{"heading":"Conclusion","level":2,"id":"Conclusion_1"},{"heading":"CSMA","level":1,"id":"CSMA_0"},{"heading":"Carrier Sense Multiple Access (CSMA)","level":1,"id":"Carrier_Sense_Multiple_Access_(CSMA)_0"},{"heading":"Key Components of CSMA","level":2,"id":"Key_Components_of_CSMA_0"},{"heading":"1. Carrier Sense","level":3,"id":"1._Carrier_Sense_0"},{"heading":"2. Multiple Access","level":3,"id":"2._Multiple_Access_0"},{"heading":"3. Collision Handling","level":3,"id":"3._Collision_Handling_0"},{"heading":"Types of CSMA Protocols","level":2,"id":"Types_of_CSMA_Protocols_0"},{"heading":"1. 1-Persistent CSMA","level":3,"id":"1._1-Persistent_CSMA_0"},{"heading":"2. Non-Persistent CSMA","level":3,"id":"2._Non-Persistent_CSMA_0"},{"heading":"3. p-Persistent CSMA (used in slotted channels)","level":3,"id":"3._p-Persistent_CSMA_(used_in_slotted_channels)_0"},{"heading":"Advantages of CSMA","level":2,"id":"Advantages_of_CSMA_0"},{"heading":"Limitations of CSMA","level":2,"id":"Limitations_of_CSMA_0"},{"heading":"Applications","level":2,"id":"Applications_2"},{"heading":"Variants of CSMA","level":2,"id":"Variants_of_CSMA_0"},{"heading":"1. CSMA/CD (Collision Detection)","level":3,"id":"1._CSMA/CD_(Collision_Detection)_0"},{"heading":"2. CSMA/CA (Collision Avoidance)","level":3,"id":"2._CSMA/CA_(Collision_Avoidance)_0"},{"heading":"Example Scenario","level":2,"id":"Example_Scenario_1"},{"heading":"Conclusion","level":2,"id":"Conclusion_2"},{"heading":"Citations","level":2,"id":"Citations_3"},{"heading":"SlottedALOHA","level":1,"id":"SlottedALOHA_0"},{"heading":"Slotted ALOHA Protocol","level":1,"id":"Slotted_ALOHA_Protocol_0"},{"heading":"How Slotted ALOHA Works","level":2,"id":"How_Slotted_ALOHA_Works_0"},{"heading":"Key Features","level":2,"id":"Key_Features_1"},{"heading":"Throughput Calculation","level":2,"id":"Throughput_Calculation_1"},{"heading":"Maximum Throughput:","level":3,"id":"Maximum_Throughput_1"},{"heading":"Advantages","level":2,"id":"Advantages_2"},{"heading":"Limitations","level":2,"id":"Limitations_2"},{"heading":"Applications","level":2,"id":"Applications_3"},{"heading":"Comparison with Pure ALOHA","level":2,"id":"Comparison_with_Pure_ALOHA_0"},{"heading":"Conclusion","level":2,"id":"Conclusion_3"}],"links":["cn/csmacd.html","cn/csma.html","cn/slottedaloha.html","cn/purealoha.html","cn/osi.html","cn/img/osi3.html","cn/tcp-ip.html","cn/img/osi2.html","cn/img/osi1.html","cn/topologies.html",".html"],"author":"","coverImageURL":"cn/img/topologies.jpg","fullURL":"cn/untitled-1.html","pathToRoot":"..","attachments":["cn/img/topologies.html","cn/img/osi1.html","cn/img/osi2.html","cn/img/osi3.html","cn/img/osi11.html","cn/img/osi12.html","cn/img/osi13.html","cn/img/osi14.html","cn/img/osi15.html","cn/img/osi16.html","cn/img/osi17.html","cn/img/osi18.html","cn/img/osi19.html","cn/img/osi20.html","cn/img/osi21.html","cn/img/layeredexample.html","cn/img/csmacd2.html","cn/img/csmacd4.html","cn/img/csmacd1.html","cn/img/csmacd3.html","cn/img/purealoha1.html","cn/img/purealoha2.html","cn/img/csma1.html","cn/img/csma2.html","cn/img/csma3.html","cn/img/csma4.html","cn/img/slottedaloha1.html","cn/img/slottedaloha2.html","cn/img/multipleaccess.html"],"createdTime":1748855387036,"modifiedTime":1752027274458,"sourceSize":10872,"sourcePath":"CN/Untitled 1.canvas","exportPath":"cn/untitled-1.html","showInTree":true,"treeOrder":134,"backlinks":[],"type":"canvas"},"d3,js/untitled.html":{"title":"Untitled","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"d3,js/untitled.html","pathToRoot":"..","attachments":[],"createdTime":1751045990758,"modifiedTime":1751045990758,"sourceSize":0,"sourcePath":"D3,js/Untitled.md","exportPath":"d3,js/untitled.html","showInTree":true,"treeOrder":136,"backlinks":[],"type":"markdown"},"eng/narration.html":{"title":"Narration","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"eng/narration.html","pathToRoot":"..","attachments":[],"createdTime":1750323788641,"modifiedTime":1750352540047,"sourceSize":0,"sourcePath":"Eng/Narration.md","exportPath":"eng/narration.html","showInTree":true,"treeOrder":138,"backlinks":[],"type":"markdown"},"eng/para-jumbles.html":{"title":"Para Jumbles","icon":"","description":"Para jumbles are paragraph puzzles where sentences need to be rearranged in logical order. Here are key strategies to master them:Opening Sentence Indicators:\nLook for sentences that introduce a new concept, person, or idea with broad, general statements.\nSentences often start with indefinite articles \"a\" or \"an\" when introducing something new.\nThe opening sentence should not extend previous ideas but make a fresh beginning.\nClosing Sentence Indicators:\nWords like \"thus,\" \"hence,\" \"therefore,\" \"eventually,\" or \"finally\" typically signal concluding sentences.\nClosing sentences provide concluding remarks, summaries, or refer back to earlier ideas.\nThey often end with a generalized tone and won't introduce new concepts.\nSeveral indicators help eliminate sentences as potential opening lines:\nPronouns: Never start with \"this,\" \"that,\" \"those,\" \"he,\" \"she,\" \"it,\" or \"they\" as these refer to previously mentioned nouns.\nConnecting words: Sentences beginning with \"and,\" \"but,\" \"yet,\" \"however,\" \"moreover,\" \"furthermore\" cannot be first.\nDefinite articles: The article \"the\" often indicates the noun was previously mentioned, suggesting it's not the opening sentence.\nReference words: Sentences with referential words like \"these,\" \"those\" typically follow introductory sentences.\nMandatory Pairs: The key to solving para jumbles is identifying connected sentence pairs.Noun-Pronoun Connections:\nNouns always come before pronouns in logical sequence.\nFirst reference uses the actual noun, subsequent references use pronouns.\nEnsure gender and number agreement between nouns and pronouns.\nCause-Effect Relationships:\nLook for cause-and-effect pairs using words like \"because,\" \"if...then,\" \"consequently,\" \"hence,\" \"therefore.\"\nThe cause sentence typically precedes the effect sentence.\nTransition Word Connections:\nAdding information: Moreover, additionally, furthermore, likewise\nContrasting: However, nevertheless, but, yet\nSequencing: First, then, next, meanwhile, later\nConcluding: Therefore, thus, finally, in conclusion\nChronological Approach:\nFollow past to present to future tense when dealing with time-based content.\nArrange activities in the order they logically occur.\nGeneral to Specific Flow:\nStart with generalized statements followed by specific details and examples.\nFull forms come before abbreviations (e.g., \"Prime Minister\" before \"P.M.\").\nStrategic Approach:\nDon’t look at options first - arrange sentences mentally, then find the matching option.\nUse elimination technique by identifying which options contain your identified pairs.\nFocus on finding 2-3 sentences that definitely go together, then eliminate options that don't have those links.\nBy following these systematic approaches and looking for these specific indicators, you can effectively solve even the most challenging para jumble questions. The key is practice and developing an eye for these logical connections between sentences.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Tips and Tricks for Para Jumbles","level":1,"id":"Tips_and_Tricks_for_Para_Jumbles_0"},{"heading":"Identifying Opening and Closing Sentences","level":2,"id":"Identifying_Opening_and_Closing_Sentences_0"},{"heading":"Reasons Why Sentences Cannot Come First","level":2,"id":"Reasons_Why_Sentences_Cannot_Come_First_0"},{"heading":"Making Connections - The Pairing Strategy","level":2,"id":"Making_Connections_-_The_Pairing_Strategy_0"},{"heading":"General Rules and Strategies","level":2,"id":"General_Rules_and_Strategies_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"eng/para-jumbles.html","pathToRoot":"..","attachments":[],"createdTime":1750414477024,"modifiedTime":1750415139943,"sourceSize":3273,"sourcePath":"Eng/Para Jumbles.md","exportPath":"eng/para-jumbles.html","showInTree":true,"treeOrder":139,"backlinks":[],"type":"markdown"},"exercise/exercise.html":{"title":"Exercise","icon":"","description":"\nPush-ups 🔥 - <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.instagram.com/p/DBsXHsCPMM9/?igsh=MTRzYXp0Y2IxOGRucg\" target=\"_self\">https://www.instagram.com/p/DBsXHsCPMM9/?igsh=MTRzYXp0Y2IxOGRucg</a> <br>Chest Press Variations 💯 - <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.instagram.com/reel/DBJD_OboGvU/?igsh=MW5ibTkwdGI3Nmxkdg\" target=\"_self\">https://www.instagram.com/reel/DBJD_OboGvU/?igsh=MW5ibTkwdGI3Nmxkdg</a> <br>Chest Workout Routine 🏋️‍♂️ - <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.instagram.com/share/reel/_twyIO0Ip\" target=\"_self\">https://www.instagram.com/share/reel/_twyIO0Ip</a> <br>Upper Chest Focus ⬆️ - <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.instagram.com/reel/DGA2ii8SeNp/?igsh=MTFpc2s1Mjc0dDMybw\" target=\"_self\">https://www.instagram.com/reel/DGA2ii8SeNp/?igsh=MTFpc2s1Mjc0dDMybw</a> <br>Core Strengthening 💪 - <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.instagram.com/reel/C--ClSOogL9/?igsh=MTg4eXB1ODV3ODFraA\" target=\"_self\">https://www.instagram.com/reel/C--ClSOogL9/?igsh=MTg4eXB1ODV3ODFraA</a> <br>Ab Crunches 🎯 - <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.instagram.com/reel/DCl9m6KuVqd/?igsh=YWJzYm9hYWZyeHdu\" target=\"_self\">https://www.instagram.com/reel/DCl9m6KuVqd/?igsh=YWJzYm9hYWZyeHdu</a> <br>Plank Variations 🏃‍♂️ - <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.instagram.com/reel/DB_w2WFCp3Q/?igsh=MW8xejhwcTFsNHp5aA\" target=\"_self\">https://www.instagram.com/reel/DB_w2WFCp3Q/?igsh=MW8xejhwcTFsNHp5aA</a> <br>Lower Ab Workout ⬇️ - <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.instagram.com/reel/DKPeLFxpZ0z/?igsh=MXVkMjlxM3dlcWRiMA\" target=\"_self\">https://www.instagram.com/reel/DKPeLFxpZ0z/?igsh=MXVkMjlxM3dlcWRiMA</a> <br>Six-Pack Routine 🎪 - <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.instagram.com/reel/DKOZ4HWOi-Z/?igsh=MXR3dzgwam96OG9pbw%3D%3D\" target=\"_self\">https://www.instagram.com/reel/DKOZ4HWOi-Z/?igsh=MXR3dzgwam96OG9pbw%3D%3D</a> <br>Full Ab Circuit 🔄 - <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.instagram.com/reel/DKKXFlJv1ZT/?igsh=MTRwcjN0ZjBiaWZocw\" target=\"_self\">https://www.instagram.com/reel/DKKXFlJv1ZT/?igsh=MTRwcjN0ZjBiaWZocw</a> <br>Oblique Exercises 📐 - <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.instagram.com/reel/DJLSHmWPpV2/?igsh=MTg0bzYzb2d2eHVxcg%3D%3D\" target=\"_self\">https://www.instagram.com/reel/DJLSHmWPpV2/?igsh=MTg0bzYzb2d2eHVxcg%3D%3D</a> ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Chest 💪","level":2,"id":"Chest_💪_0"},{"heading":"Abs 🔥","level":2,"id":"Abs_🔥_0"},{"heading":"Side Abs 🌟","level":2,"id":"Side_Abs_🌟_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"exercise/exercise.html","pathToRoot":"..","attachments":[],"createdTime":1749833095645,"modifiedTime":1749882503194,"sourceSize":1959,"sourcePath":"Exercise/Exercise.md","exportPath":"exercise/exercise.html","showInTree":true,"treeOrder":141,"backlinks":[],"type":"markdown"},"exercise/fat.html":{"title":"fat","icon":"","description":"Removing belly fat, particularly visceral fat which surrounds internal organs, is crucial for overall health due to its links to various conditions like high blood pressure, type 2 diabetes, heart disease, dementia, and certain cancers. It's important to understand that you cannot target fat loss in a specific area like the belly; instead, overall weight loss will lead to a reduction in fat from all parts of your body, including your midsection. Here's a comprehensive approach to removing belly fat: Achieve a Calorie Deficit To lose deep belly fat, you need to lose weight overall by burning more calories than you consume.\nThis involves eating and drinking fewer calories than you burn, and then adjusting for long-term weight maintenance. A doctor or nutritionist can help you do this safely. Regular Physical Activity Aerobic or Cardio Exercise: Incorporate at least minutes of moderate aerobic exercise into your daily routine at least days a week ( minutes total per week). Examples include walking at a quick pace, running, biking, rowing, swimming, cycling, or group fitness classes. Studies show these exercises help reduce belly and liver fat.\nHigh-Intensity Interval Training (HIIT): HIIT involves short bursts of intense exercise mixed with lower-intensity moves and rest periods. Research indicates HIIT helps control weight and improves overall physical condition. Examples include jumping jacks, burpees, pushups, jump squats, and high knees.\nWeight and Resistance Training: This is an important part of burning belly fat because muscles burn more calories than fat even at rest, thus boosting metabolism. Resistance training can increase lean weight while decreasing fat. Examples include bicep curls, lunges, squats, and tricep kickbacks.\nSpecific Abdominal Exercises: While they won't spot-reduce fat, exercises like planks, bicycle crunches, abdominal crunches, and leg lifts can strengthen and tone your stomach muscles as part of an overall exercise routine.\nIntensity Matters: To burn fat, focus on moderate to vigorous movement that speeds up your breathing and heart rate. As you become more fit, you'll need to increase intensity to continue losing weight. Dietary Adjustments No Magic Foods: There are no specific foods or \"magic diets\" that burn belly fat, such as apple cider vinegar or protein shakes. However, when you lose weight on any diet, belly fat usually goes first.\nIncrease Fiber: Getting enough fiber, especially viscous soluble fiber, can help you feel full longer, which may prevent overeating. Experts recommend grams of fiber per calories (e.g., grams for a -calorie daily diet). Choose whole-grain bread instead of white, brown rice instead of white, and sweet potatoes instead of white.\nHydration: Drinking plenty of water can aid overall weight loss, which includes belly fat, by improving hydration for exercise, assisting the body's fat-burning process, and serving as a zero-calorie substitute for high-calorie beverages.\nLimit Sugary Foods, Alcohol, and Trans Fats: These contribute significantly to abdominal fat gain. Alcohol intake, in particular, can increase abdominal fat.\nHigh-Protein Diet: A high-protein diet (over grams per pound of body weight per day) may be effective for reducing weight and abdominal fat.\nHealthy Eating Plate: Focus on diet quality by making half your plate vegetables and fruits, choosing healthy plant oils in moderation (like olive and canola oil), and drinking water, coffee, or tea instead of sugary drinks. Prioritize Sleep Getting to hours of quality sleep per night is important for overall health and can significantly impact visceral fat.\nLack of sufficient sleep is associated with greater visceral fat mass and can negatively impact weight-loss programs. Poor sleep may lead to increased appetite-stimulating hormones and cravings for junk food. Manage Stress Chronic, unchecked stress can affect your entire body, including your waistline, by causing the release of cortisol, a hormone linked to excess belly fat.\nManaging stress through activities like yoga, meditation, or deep breathing can help lower cortisol levels. Medical and Non-Surgical Options Bariatric Surgery and Injectable Medications: These treatments, such as semaglutide (Wegovy) and tirzepatide (Zepbound), can cause all-over weight loss, including reductions in deep belly fat. Bariatric surgery is known to improve metabolic syndrome and reduce visceral adiposity.\nLiposuction: This cosmetic procedure removes subcutaneous fat but does not offer the same health benefits as bariatric surgery and does not target visceral fat. It may even lead to fat being stored in visceral tissue if weight is regained.\nNon-Invasive Body Contouring: Treatments like cryolipolysis (fat freezing), ultrasound cavitation, or radio frequency can target stubborn fat areas when combined with a healthy lifestyle, but they do not treat bloating. Emerald Laser is another non-surgical option that uses low-level laser technology to disrupt fat cells, which are then naturally metabolized by the body's lymphatic system. Important Considerations:\nWeight loss for women tends to be slower than for men due to differences in lean muscle mass, and hormonal changes during menopause can make it harder to lose weight around the belly. Strength training becomes even more important during menopause to maintain muscle mass.\nIt's a gradual process; you cannot lose belly fat overnight.\nIf you are struggling with stubborn pockets of fat, seeking help from practitioners who provide individualized advice is recommended.\nIf you are starting a new exercise program or have concerns about significant fat gain, it's advisable to check with your healthcare provider.\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Removing Belly Fat","level":2,"id":"Removing_Belly_Fat_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"exercise/fat.html","pathToRoot":"..","attachments":[],"createdTime":1752945200365,"modifiedTime":1754242661276,"sourceSize":5974,"sourcePath":"Exercise/fat.md","exportPath":"exercise/fat.html","showInTree":true,"treeOrder":142,"backlinks":[],"type":"markdown"},"exercise/lifestyle.html":{"title":"LifeStyle","icon":"","description":"This YouTube video by Fit Tuber (Vivek) presents 5 evidence-based strategies to reduce belly fat without requiring extensive diet plans or workouts. The methods focus on simple modifications to eating habits and lifestyle that can significantly impact fat loss.Key Benefits: Increases fat-cutting chances by .How it works: Adding acids to meals reduces glucose spikes in the blood, which directly correlates to less body fat storage.Practical applications:\nApple cider vinegar: tablespoon diluted in a tall glass of water before meals reduces glucose spike by .\nLemon juice: Consuming lemon water before meals or adding lemon to food reduces glycemic load by .\nCurd/buttermilk: Lactic acid provides similar benefits.\nPickles: Homemade pickles with meals show similar effects.\nKey Benefits: Can increase fat loss chances by just by changing meal sequence.The science: Starting with vegetables creates a protective fiber mesh in intestines that slows absorption of subsequent foods.Optimal eating order:\nSalad first (vegetables, carrots, cucumber)\nProtein (chicken, tofu, dal)\nCarbohydrates (rice, roti, bread)\nAdditional tip: Eat desserts after full meals, not before, to stabilize sugar levels.Key Benefits: -minute light movement after meals is superior to -minute exercise at any other time.The mechanism: Light movement helps muscles utilize glucose immediately after eating, preventing fat storage.Recommended activities:\nLight walking for minutes\nDoing dishes or cleaning\nSitting in vajrasana (as recommended in Ayurveda)\nImportant: Avoid rigorous exercise immediately after meals.Key Benefits: Combining carbs with other nutrients reduces body fat storage chances by .The problem: Eating carbohydrates alone causes higher glucose spikes compared to when combined with proteins, fats, and fiber.Smart strategies:\nAdd bran to wheat flour (atta) for rotis.\nCombine biscuits with cashews for healthy fats and protein.\nChoose whole grains over refined grains like maida.\nAdd a teaspoon of ghee to curry (Ayurvedic recommendation).\nKey Benefits: Most important and easiest strategy for fat loss.Hormonal impact of poor sleep:\nLeptin (satiety hormone) decreases by .\nGhrelin (hunger hormone) increases by .\nResult: People eat - extra calories per sitting.\nCravings impact: Sleep-deprived individuals crave starchy and sugary foods like pizza, chocolate, and ice cream.Statistical evidence: Night shift workers have higher obesity risk.Daily routine suggestions:\nMorning: Apple cider vinegar in water before breakfast.\nMeals: Start with salad, add curd to lunch, sprinkle lemon on dinner.\nSnacks: Choose foods with fiber, protein, and fats rather than just carbs.\nPost-meal: Light movement for minutes.\nSleep: Maintain regular sleep schedule and quality.\nThe presenter emphasizes that these simple modifications can significantly boost fat loss rates without major dietary overhauls, making them practical for busy lifestyles.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Summary: 5 Proven Ways to Burn Belly Fat","level":1,"id":"Summary_5_Proven_Ways_to_Burn_Belly_Fat_0"},{"heading":"The 5 Strategies (Ranked by Priority)","level":2,"id":"The_5_Strategies_(Ranked_by_Priority)_0"},{"heading":"#5: Add an Acid to Your Food","level":3,"id":"#5_Add_an_Acid_to_Your_Food_0"},{"heading":"#4: Get the Order Right","level":3,"id":"#4_Get_the_Order_Right_0"},{"heading":"#3: Move After Eating","level":3,"id":"#3_Move_After_Eating_0"},{"heading":"#2: Don't Eat Naked Carbs","level":3,"id":"#2_Don't_Eat_Naked_Carbs_0"},{"heading":"#1: Don't Compromise on Sleep","level":3,"id":"#1_Don't_Compromise_on_Sleep_0"},{"heading":"Quick Implementation Summary","level":2,"id":"Quick_Implementation_Summary_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"exercise/lifestyle.html","pathToRoot":"..","attachments":[],"createdTime":1751985148709,"modifiedTime":1751987751379,"sourceSize":3685,"sourcePath":"Exercise/LifeStyle.md","exportPath":"exercise/lifestyle.html","showInTree":true,"treeOrder":143,"backlinks":[],"type":"markdown"},"java/new-folder/frmcoursesyllabusipdownload.html":{"title":"frmCourseSyllabusIPDownload","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"java/new-folder/frmcoursesyllabusipdownload.html","pathToRoot":"../..","attachments":["java/new-folder/frmcoursesyllabusipdownload.html"],"createdTime":1748082333668,"modifiedTime":1748082340714,"sourceSize":196575,"sourcePath":"Java/New folder/frmCourseSyllabusIPDownload.pdf","exportPath":"java/new-folder/frmcoursesyllabusipdownload.html","showInTree":true,"treeOrder":157,"backlinks":[],"type":"attachment"},"java/new-folder/java-practise-qns.html":{"title":"Java practise qns","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"java/new-folder/java-practise-qns.html","pathToRoot":"../..","attachments":["java/new-folder/java-practise-qns.html"],"createdTime":1748417177184,"modifiedTime":1748443888935,"sourceSize":366194,"sourcePath":"Java/New folder/Java practise qns.pdf","exportPath":"java/new-folder/java-practise-qns.html","showInTree":true,"treeOrder":159,"backlinks":[],"type":"attachment"},"java/arraylength.html":{"title":"arrayLength","icon":"","description":"In Java, there are different ways to find the length of an array depending on the type of array you're working with.For regular arrays in Java, you use the length property (note: it's a property, not a method, so no parentheses):int[] numbers = {1, 2, 3, 4, 5};\nint arrayLength = numbers.length;\nSystem.out.println(\"Array length: \" + arrayLength); // Output: 5\n// Integer array\nint[] intArray = new int[10];\nSystem.out.println(\"Integer array length: \" + intArray.length); // Output: 10 // String array\nString[] stringArray = {\"Hello\", \"World\", \"Java\"};\nSystem.out.println(\"String array length: \" + stringArray.length); // Output: 3 // Character array\nchar[] charArray = {'a', 'b', 'c', 'd'};\nSystem.out.println(\"Character array length: \" + charArray.length); // Output: 4\nFor ArrayList and other collection classes, you use the size() method:import java.util.ArrayList; ArrayList&lt;String&gt; list = new ArrayList&lt;&gt;();\nlist.add(\"Apple\");\nlist.add(\"Banana\");\nlist.add(\"Cherry\");\nint listSize = list.size();\nSystem.out.println(\"ArrayList size: \" + listSize); // Output: 3 Don't use parentheses with regular arrays: array.length() is incorrect\nDon't forget parentheses with collections: list.size is incorrect\nRemember that array length is immutable - once an array is created, its length cannot be changed\npublic class ArrayLengthExample { public static void main(String[] args) { // Regular array int[] scores = {85, 90, 78, 92, 88}; System.out.println(\"Number of scores: \" + scores.length); // Using length in a loop for (int i = 0; i &lt; scores.length; i++) { System.out.println(\"Score \" + (i + 1) + \": \" + scores[i]); } // Enhanced for loop (no need for length) for (int score : scores) { System.out.println(\"Score: \" + score); } }\n}\nThe length property is one of the most fundamental aspects of working with arrays in Java, and it's essential for loops, bounds checking, and array manipulation operations.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Finding Array Length in Java","level":1,"id":"Finding_Array_Length_in_Java_0"},{"heading":"Regular Arrays (Primitive and Object Arrays)","level":2,"id":"Regular_Arrays_(Primitive_and_Object_Arrays)_0"},{"heading":"Examples with Different Array Types","level":2,"id":"Examples_with_Different_Array_Types_0"},{"heading":"ArrayList and Other Collections","level":2,"id":"ArrayList_and_Other_Collections_0"},{"heading":"Key Differences to Remember","level":2,"id":"Key_Differences_to_Remember_0"},{"heading":"Common Mistakes to Avoid","level":2,"id":"Common_Mistakes_to_Avoid_0"},{"heading":"Practical Example","level":2,"id":"Practical_Example_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/arraylength.html","pathToRoot":"..","attachments":[],"createdTime":1752134139951,"modifiedTime":1752134144177,"sourceSize":2739,"sourcePath":"Java/arrayLength.md","exportPath":"java/arraylength.html","showInTree":true,"treeOrder":163,"backlinks":[],"type":"markdown"},"java/arrays.html":{"title":"Arrays","icon":"","description":"Java arrays are fundamental data structures that enable you to store a fixed collection of elements of the same type in contiguous memory locations. They provide a simple yet efficient way to group related data items, and their usage spans from basic storage and manipulation to more complex applications such as multi-dimensional data representation and variable-length arguments in methods1.An array in Java is a finite collection of variables of a single type that are identified by a common name and indexed by integers starting at 01.Arrays can be declared using either of the following syntaxes:dataType[] arrayName;\ndataType arrayName[];\nFor example:int[] marks;\nThis statement declares an array variable without allocating memory for its elements, meaning marks initially holds a null reference^1.Memory is allocated to an array using the new keyword along with specifying the size (i.e., the number of elements) in square brackets. For example:marks = new int[5];\nThis creates an array capable of holding 5 integers, with each element automatically initialized to its default value (0 for numeric types)^1.Arrays can also be initialized with a list of values at the time of declaration. For example:int[] numbers = {10, 20, 30, 40, 50};\nThis not only declares the array but also assigns the specified values to its elements^1.Individual elements are accessed using their index in square brackets. Since array indexing starts at 0, the first element is at index 0 and the last element is at index array.length - 1. For example:marks[0] = 10;\nSystem.out.println(\"First mark: \" + marks[0]);\nThis sets the first element of the array to 10 and then prints it^1.Once an array is created, its size is fixed and cannot be altered. This is why arrays are best used when the required amount of data is known in advance^1.When an array is allocated, Java initializes its elements to default values:\nNumeric types (e.g., int, double) default to 0.\nchar types default to the null character ('\\u0000').\nboolean types default to false.\nObject references default to null^1.\nMulti-dimensional arrays in Java are essentially arrays of arrays. They are typically used to represent tabular data (such as matrices)^1.A two-dimensional array can be created as follows:Javaint[][] matrix = new int[4][5];\nThis creates a 2D array with 4 rows and 5 columns, where every element is accessible using a pair of indices, for instance, matrix[1][2]^1.You can create multi-dimensional arrays with rows of different lengths. First, allocate memory for the first dimension and then assign each row individually:int[][] jaggedArray = new int[4][];\njaggedArray[0] = new int[1];\njaggedArray[1] = new int[2];\njaggedArray[2] = new int[3];\njaggedArray[3] = new int[4];\nEach row is allocated separately, allowing the array to be “jagged” in structure^1.Arrays can be passed as parameters to methods, which allows for modular manipulation of data. For example:public void printArray(int[] arr) { for (int i : arr) { System.out.println(i); }\n}\nHere, an array is passed into the method printArray for processing^1.Methods in Java can also return arrays. For instance:public int[] getMarks() { int[] marks = {85, 90, 95}; return marks;\n}\nThis approach enables methods to send back collections of values^1.To create an independent copy of an array, the clone() method can be used:int[] original = {1, 2, 3};\nint[] copy = original.clone();\nThis produces a new array with the same values, independently stored in memory^1.Java supports methods that take a variable number of arguments using the varargs syntax. It is declared as follows:public void addNumbers(int... numbers) { int sum = 0; for (int num : numbers) { sum += num; } System.out.println(\"Sum: \" + sum);\n}\nVarargs allow the caller to pass either an array or a sequence of individual values^1.In summary, arrays in Java are powerful data structures that efficiently store fixed-size collections of elements of the same type. They enable the management of both simple data sets and complex multi-dimensional structures while offering flexible usage patterns—such as passing by reference, cloning, and using varargs—that enhance their usability in various programming scenarios^1.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Java Arrays: Fundamentals and Usage","level":1,"id":"Java_Arrays_Fundamentals_and_Usage_0"},{"heading":"Definition and Declaration","level":2,"id":"Definition_and_Declaration_0"},{"heading":"What is an Array?","level":3,"id":"What_is_an_Array?_0"},{"heading":"Declaration Syntax:","level":3,"id":"Declaration_Syntax_0"},{"heading":"Creating and Initializing Arrays","level":2,"id":"Creating_and_Initializing_Arrays_0"},{"heading":"Memory Allocation:","level":3,"id":"Memory_Allocation_0"},{"heading":"Initialization at Declaration:","level":3,"id":"Initialization_at_Declaration_0"},{"heading":"Accessing and Modifying Array Elements","level":2,"id":"Accessing_and_Modifying_Array_Elements_0"},{"heading":"Element Access:","level":3,"id":"Element_Access_0"},{"heading":"Array Properties","level":2,"id":"Array_Properties_0"},{"heading":"Fixed Size:","level":3,"id":"Fixed_Size_0"},{"heading":"Default Values:","level":3,"id":"Default_Values_0"},{"heading":"Multi-Dimensional Arrays","level":2,"id":"Multi-Dimensional_Arrays_0"},{"heading":"Concept:","level":3,"id":"Concept_0"},{"heading":"Creation of Two-Dimensional Arrays:","level":3,"id":"Creation_of_Two-Dimensional_Arrays_0"},{"heading":"Jagged Arrays:","level":3,"id":"Jagged_Arrays_0"},{"heading":"Arrays as Method Arguments and Return Types","level":2,"id":"Arrays_as_Method_Arguments_and_Return_Types_0"},{"heading":"Passing Arrays to Methods:","level":3,"id":"Passing_Arrays_to_Methods_0"},{"heading":"Returning Arrays from Methods:","level":3,"id":"Returning_Arrays_from_Methods_0"},{"heading":"Array Cloning and Varargs","level":2,"id":"Array_Cloning_and_Varargs_0"},{"heading":"Cloning Arrays:","level":3,"id":"Cloning_Arrays_0"},{"heading":"Variable Length Argument Lists (Varargs):","level":3,"id":"Variable_Length_Argument_Lists_(Varargs)_0"},{"heading":"Citations:","level":2,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/arrays.html","pathToRoot":"..","attachments":[],"createdTime":1748443233334,"modifiedTime":1748443233338,"sourceSize":5170,"sourcePath":"Java/Arrays.md","exportPath":"java/arrays.html","showInTree":true,"treeOrder":164,"backlinks":[],"type":"markdown"},"java/assertion.html":{"title":"Assertion","icon":"","description":" assert Expression1; Expression1: A boolean expression. If false, an AssertionError is thrown with no detail message. assert Expression1 : Expression2; Expression1: A boolean expression.\nExpression2: Provides a detail message for the AssertionError. This message is used in the AssertionError's constructor. Disabled by Default: Assertions are disabled by default in Java. You must explicitly enable them to use them.\nError Handling: When an assertion fails, Java throws an AssertionError. The program halts at that point.\nDetailed Error Messages: The form with the message (Expression2) is crucial for providing context when an assertion fails. Enabling: Use the -ea or -enableassertions flag when running your Java program:\nDisabling: Use the -da or -disableassertions flag: Unreachable Code: Verifying that code segments that should never be executed are truly unreachable (e.g., default cases in switch statements).\nInternal Invariants: Checking conditions and assumptions within your code during development.\nPost-Conditions: Verifying conditions after a function executes.\nPrivate Methods: Ensuring conditions are met within private methods.\nReplacing Comments: Replacing comments that document assumptions with more robust assertions. User Input Validation: Use proper exception handling (e.g., IllegalArgumentException).\nPublic Method Argument Checks: Use exceptions like IllegalArgumentException or NullPointerException.\nRegular Error Handling: Assertions are for development and testing, not production error handling.\nExternal Data Validation: Checking database connections or URL existence, etc. double calculateInterest(int amt, double roi, int years) { assert amt &gt; 0 : \"Amount must be positive\"; assert roi &gt; 0 : \"Rate of interest must be positive\"; assert years &gt; 0 : \"Years must be positive\"; double interest = (amt * roi * years) / 100; return interest;\n} Early Bug Detection: Helps catch errors early.\nEasier Debugging: AssertionError provides a clear indication of the error’s source.\nData Validation: Verifies that functions receive correct data.\nCode Clarity: Makes assumptions explicit.\nNo Production Overhead: Can be disabled in production. Provide Meaningful Messages: Include descriptive messages to aid debugging.\nFocus on Internal Logic: Use assertions for internal invariants, not external conditions.\nReview Periodically: Ensure assertions are still relevant and useful.\nKeep Conditions Simple: Avoid complex assertion conditions.\nDon't Rely on Them for Critical Logic: They can be disabled at runtime. <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/3d0db501-5398-4b32-b959-524d44cf51ca/Assertion.pdf\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/3d0db501-5398-4b32-b959-524d44cf51ca/Assertion.pdf</a> <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/ref_keyword_assert.asp\" target=\"_self\">https://www.w3schools.com/java/ref_keyword_assert.asp</a> <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.oracle.com/javase/8/docs/technotes/guides/language/assert.html\" target=\"_self\">https://docs.oracle.com/javase/8/docs/technotes/guides/language/assert.html</a> <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ioflood.com/blog/assert-java/\" target=\"_self\">https://ioflood.com/blog/assert-java/</a> <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://codegym.cc/groups/posts/java-assertions\" target=\"_self\">https://codegym.cc/groups/posts/java-assertions</a> <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.browserstack.com/guide/assert-in-java\" target=\"_self\">https://www.browserstack.com/guide/assert-in-java</a> <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/assertions\" target=\"_self\">https://www.programiz.com/java-programming/assertions</a> <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.datacamp.com/doc/java/assert\" target=\"_self\">https://www.datacamp.com/doc/java/assert</a> <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://junit.org/junit5/docs/5.0.1/api/org/junit/jupiter/api/Assertions.html\" target=\"_self\">https://junit.org/junit5/docs/5.0.1/api/org/junit/jupiter/api/Assertions.html</a> <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackoverflow.com/questions/2758224/what-are-assertions-in-java-and-when-should-they-be-used\" target=\"_self\">https://stackoverflow.com/questions/2758224/what-are-assertions-in-java-and-when-should-they-be-used</a> <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.lambdatest.com/blog/asserttrue-in-java/\" target=\"_self\">https://www.lambdatest.com/blog/asserttrue-in-java/</a> ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Java Assertions: A Comprehensive Guide","level":1,"id":"Java_Assertions_A_Comprehensive_Guide_0"},{"heading":"Definition and Purpose","level":2,"id":"Definition_and_Purpose_0"},{"heading":"Syntax","level":2,"id":"Syntax_0"},{"heading":"How Assertions Work","level":2,"id":"How_Assertions_Work_0"},{"heading":"Enabling and Disabling Assertions","level":2,"id":"Enabling_and_Disabling_Assertions_0"},{"heading":"When to Use Assertions","level":2,"id":"When_to_Use_Assertions_0"},{"heading":"When NOT to Use Assertions","level":2,"id":"When_NOT_to_Use_Assertions_0"},{"heading":"Example","level":2,"id":"Example_0"},{"heading":"Benefits","level":2,"id":"Benefits_0"},{"heading":"Best Practices","level":2,"id":"Best_Practices_0"},{"heading":"Citations","level":2,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/assertion.html","pathToRoot":"..","attachments":[],"createdTime":1748016213311,"modifiedTime":1748362312487,"sourceSize":4742,"sourcePath":"Java/Assertion.md","exportPath":"java/assertion.html","showInTree":true,"treeOrder":165,"backlinks":[],"type":"markdown"},"java/classes.html":{"title":"Classes","icon":"","description":"<a class=\"internal-link\" data-href=\"Instanceof.md\" href=\"java/instanceof.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"Instanceof.md\" href=\"java/instanceof.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"Instanceof.md\" href=\"java/instanceof.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"Instanceof.md\" href=\"java/instanceof.html\" target=\"_self\" rel=\"noopener nofollow\"></a># Java Classes and ObjectsJava classes are blueprints for creating objects and form the backbone of object-oriented programming (OOP) in Java. They allow you to encapsulate data and behavior into a single unit, making your code modular, reusable, and easier to maintain.<br>A class in Java defines the properties (data members or fields) and behaviors (methods) for the objects created from it. Think of a class as a template or a recipe, where you specify what attributes an object will have and what operations can be performed on it. <a data-tooltip-position=\"top\" aria-label=\"https://www.tutorialspoint.com/java/java_object_classes.htm\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_object_classes.htm\" target=\"_self\">Tutorialspoint</a>A typical Java class includes:\nFields (Instance Variables): Variables that hold the state of an object.\nMethods: Functions defined within a class that describe the behaviors or operations an object can perform.\nConstructors: Special methods used to initialize objects when they are created.\n<br>Access Modifiers: Keywords like public, private, and protected which control the visibility and accessibility of the class members, contributing to encapsulation. <a data-tooltip-position=\"top\" aria-label=\"https://www.geekster.in/articles/java-classes-and-object/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geekster.in/articles/java-classes-and-object/\" target=\"_self\">Geekster</a>\nYou start by declaring a class with the keyword class, followed by its name. For example:public class Car { // Fields (attributes) String model; String color; int year; // Constructor to initialize the object public Car(String model, String color, int year) { this.model = model; this.color = color; this.year = year; } // Method to display car details public void displayDetails() { System.out.println(\"Model: \" + model); System.out.println(\"Color: \" + color); System.out.println(\"Year: \" + year); }\n}\n<br>In this example, the Car class is defined with three fields and a constructor that initializes these fields. The displayDetails() method outputs the state of a Car object. <a data-tooltip-position=\"top\" aria-label=\"https://www.scholarhat.com/tutorial/java/java-class-and-object\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scholarhat.com/tutorial/java/java-class-and-object\" target=\"_self\">Scholarhat</a>Once a class is defined, you create objects (instances) of that class using the new keyword:Javapublic class Main { public static void main(String[] args) { // Creating an object of the Car class Car myCar = new Car(\"Toyota\", \"Red\", 2022); // Calling a method on the object myCar.displayDetails(); }\n}\n<br>Here, the object myCar is an instance of the Car class, and its fields are initialized as specified by the constructor. You can then invoke its methods to perform operations, such as displaying its details. <a data-tooltip-position=\"top\" aria-label=\"https://www.w3schools.com/java/java_classes.asp\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_classes.asp\" target=\"_self\">W3Schools</a>Java classes not only serve as templates for objects but also implement fundamental OOP concepts:\n<br>Encapsulation: By using access modifiers, classes hide internal states from external access, exposing only the necessary parts (typically via public methods). This protects data integrity and prevents external interference. <a data-tooltip-position=\"top\" aria-label=\"https://stackify.com/oops-concepts-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackify.com/oops-concepts-in-java/\" target=\"_self\">Stackify</a> <a data-tooltip-position=\"top\" aria-label=\"https://www.geekster.in/articles/java-classes-and-object/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geekster.in/articles/java-classes-and-object/\" target=\"_self\">Geekster</a>\n<br>Inheritance: Classes can be extended to create subclasses that inherit attributes and methods of a parent class. This promotes code reuse and establishes a natural hierarchy among objects. For instance, a Sensor class might be extended by an Accelerometer class, adding new methods while inheriting common functionalities. <a data-tooltip-position=\"top\" aria-label=\"https://pythonnumericalmethods.studentorg.berkeley.edu/notebooks/chapter07.03-Inheritance-Encapsulation-and-Polymorphism.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pythonnumericalmethods.studentorg.berkeley.edu/notebooks/chapter07.03-Inheritance-Encapsulation-and-Polymorphism.html\" target=\"_self\">Berkeley</a>\n<br>Polymorphism: With polymorphism, Java allows a single interface to represent different underlying forms (data types). For example, a method defined in a superclass can be overridden in a subclass to perform differently based on the object instance. <a data-tooltip-position=\"top\" aria-label=\"https://pythonnumericalmethods.studentorg.berkeley.edu/notebooks/chapter07.03-Inheritance-Encapsulation-and-Polymorphism.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pythonnumericalmethods.studentorg.berkeley.edu/notebooks/chapter07.03-Inheritance-Encapsulation-and-Polymorphism.html\" target=\"_self\">Berkeley</a>\n<br>Abstraction: Classes enable you to represent complex systems by exposing only the necessary components, thereby simplifying complex realities into manageable models. <a data-tooltip-position=\"top\" aria-label=\"https://stackify.com/oops-concepts-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackify.com/oops-concepts-in-java/\" target=\"_self\">Stackify</a> Plan Your Class Design: Determine the necessary fields and behaviors when designing a class. This helps in structuring the code logically.\nUse Constructors Wisely: Constructors ensure that objects are correctly initialized when they are created.\nLeverage Access Modifiers: Use private for fields that should not be accessed directly, and provide public getters and setters as needed.\n<br>Keep Responsibilities Focused: Aim for each class to have a single responsibility, which leads to better code maintainability and easier debugging. <a data-tooltip-position=\"top\" aria-label=\"https://www.geekster.in/articles/java-classes-and-object/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geekster.in/articles/java-classes-and-object/\" target=\"_self\">Geekster</a>\nJava classes and objects are fundamental to both simple programs and large-scale applications, enhancing code organization and fostering code reuse. With a solid understanding of classes and their role in encapsulating data and behaviors, you'll be well-equipped to build robust, modular Java applications.In summary, mastering the theory and practical use of Java classes is crucial for effective programming in Java, and understanding key OOP concepts like encapsulation, inheritance, and polymorphism will greatly improve the clarity and efficiency of your code.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"What is a Java Class?","level":2,"id":"What_is_a_Java_Class?_0"},{"heading":"Components of a Java Class","level":2,"id":"Components_of_a_Java_Class_0"},{"heading":"Creating a Class and Using It","level":2,"id":"Creating_a_Class_and_Using_It_0"},{"heading":"Defining a Class","level":3,"id":"Defining_a_Class_0"},{"heading":"Creating an Object","level":3,"id":"Creating_an_Object_0"},{"heading":"Core OOP Principles Illustrated by Classes","level":2,"id":"Core_OOP_Principles_Illustrated_by_Classes_0"},{"heading":"Practical Tips for Using Java Classes","level":2,"id":"Practical_Tips_for_Using_Java_Classes_0"}],"links":["java/instanceof.html","java/instanceof.html","java/instanceof.html","java/instanceof.html"],"author":"","coverImageURL":"","fullURL":"java/classes.html","pathToRoot":"..","attachments":[],"createdTime":1748441320569,"modifiedTime":1749740357812,"sourceSize":5719,"sourcePath":"Java/Classes.md","exportPath":"java/classes.html","showInTree":true,"treeOrder":166,"backlinks":[],"type":"markdown"},"java/constructor.html":{"title":"Constructor","icon":"","description":"A constructor in Java is a special type of method used to initialize objects. It is called when an instance of a class is created using the new keyword. Constructors have the same name as the class and don’t have any return type, not even void.public class Student { // Constructor public Student() { System.out.println(\"A new student object is created\"); }\n}\nIf you don’t create any constructor in your class, Java automatically provides a default constructor that initializes member variables to their default values. numeric data types are set to 0 char data types are set to null character(‘’) reference variables are set to null boolean are set to false public class Book { String title; // Will be initialized to null int pages; // Will be initialized to 0 // Default constructor is implicitly provided by Java\n}\nThese constructors accept parameters, allowing you to initialize object fields with specific values.public class Employee { private String name; private int id; // Parameterized constructor public Employee(String name, int id) { this.name = name; this.id = id; }\n}\nA copy constructor creates a new object as a copy of an existing object.public class Point { private int x, y; public Point(int x, int y) { this.x = x; this.y = y; } // Copy constructor public Point(Point p) { this.x = p.x; this.y = p.y; }\n}\nLike methods, constructors can be overloaded by changing the parameter list.public class Rectangle { private double length; private double width; // Constructor 1: No parameters (default values) public Rectangle() { length = 1.0; width = 1.0; } // Constructor 2: Same length and width public Rectangle(double side) { length = side; width = side; } // Constructor 3: Different length and width public Rectangle(double length, double width) { this.length = length; this.width = width; }\n}\nYou can call one constructor from another using this().public class Person { private String name; private int age; private String address; // Primary constructor public Person(String name, int age, String address) { this.name = name; this.age = age; this.address = address; } // Calls the primary constructor public Person(String name, int age) { this(name, age, \"Unknown\"); } // Calls the second constructor public Person(String name) { this(name, 0); }\n}\nPrivate constructors prevent instantiation from outside the class. They're commonly used in:public class DatabaseConnection { private static DatabaseConnection instance; // Private constructor private DatabaseConnection() { // Initialize connection } public static DatabaseConnection getInstance() { if (instance == null) { instance = new DatabaseConnection(); } return instance; }\n}\npublic class MathUtils { // Private constructor to prevent instantiation private MathUtils() { throw new AssertionError(\"Utility class should not be instantiated\"); } public static int add(int a, int b) { return a + b; }\n}\nConstructors initialize instance variables when objects are created, while static blocks initialize static variables when the class is loaded.public class Configuration { private String name; private static String appName; // Static initialization block - runs when class is loaded static { appName = \"MyApplication\"; System.out.println(\"Class loaded: \" + appName); } // Constructor - runs when object is created public Configuration(String name) { this.name = name; System.out.println(\"Object created: \" + this.name); }\n}\nConstructors can throw exceptions if initialization fails.public class FileReader { private String fileName; private java.io.FileInputStream stream; public FileReader(String fileName) throws java.io.FileNotFoundException { this.fileName = fileName; this.stream = new java.io.FileInputStream(fileName); }\n} Keep constructors simple and focused on initialization.\nUse constructor overloading for flexibility.\nInitialize all relevant fields.\nImplement validation in constructors when necessary.\nUse constructor chaining to avoid code duplication.\nConsider providing builder patterns for classes with many optional parameters.\nDon't call overridable methods from constructors.\npublic class BankAccount { private String accountNumber; private String accountHolder; private double balance; private static int lastAccountNumber = 1000; // Static block static { // Could initialize from a database or configuration System.out.println(\"BankAccount class loaded\"); } // Primary constructor public BankAccount(String accountHolder, double initialDeposit) { if (initialDeposit &gt;= 0) { this.accountHolder = accountHolder; this.balance = initialDeposit; this.accountNumber = \"BA\" + (++lastAccountNumber); } else { throw new IllegalArgumentException(\"Initial deposit cannot be negative\"); } } public void deposit(double amount) { if (amount &gt; 0) { balance += amount; } } public boolean withdraw(double amount) { if (amount &gt; 0 &amp;&amp; balance &gt;= amount) { balance -= amount; return true; } return false; } public double getBalance() { return balance; } public String getAccountInfo() { return \"Account: \" + accountNumber + \", Holder: \" + accountHolder + \", Balance: $\" + balance; }\n}\nConstructors are fundamental to Java programming as they ensure objects are properly initialized before use. By mastering the various types and patterns of constructors, you can create more robust and maintainable Java applications.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"What are Constructors?","level":2,"id":"What_are_Constructors?_0"},{"heading":"Types of Constructors","level":2,"id":"Types_of_Constructors_0"},{"heading":"Default Constructor","level":3,"id":"Default_Constructor_0"},{"heading":"Parameterized Constructor","level":3,"id":"Parameterized_Constructor_0"},{"heading":"Copy Constructor","level":3,"id":"Copy_Constructor_0"},{"heading":"Constructor Overloading","level":2,"id":"Constructor_Overloading_0"},{"heading":"Constructor Chaining","level":2,"id":"Constructor_Chaining_0"},{"heading":"Private Constructors","level":2,"id":"Private_Constructors_0"},{"heading":"Singleton Pattern","level":3,"id":"Singleton_Pattern_0"},{"heading":"Utility Classes","level":3,"id":"Utility_Classes_0"},{"heading":"Static Initialization Blocks vs Constructors","level":2,"id":"Static_Initialization_Blocks_vs_Constructors_0"},{"heading":"Constructor with Exception Handling","level":2,"id":"Constructor_with_Exception_Handling_0"},{"heading":"Best Practices for Constructors","level":2,"id":"Best_Practices_for_Constructors_0"},{"heading":"Real-World Example: A Complete Class","level":2,"id":"Real-World_Example_A_Complete_Class_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/constructor.html","pathToRoot":"..","attachments":[],"createdTime":1748441912752,"modifiedTime":1748441912753,"sourceSize":6847,"sourcePath":"Java/Constructor.md","exportPath":"java/constructor.html","showInTree":true,"treeOrder":167,"backlinks":[],"type":"markdown"},"java/contructorchainingwithsuper.html":{"title":"ContructorChainingWithSuper","icon":"","description":"Constructor chaining using the super keyword in Java enables subclasses to invoke parent class constructors, ensuring proper initialization of inherited members before executing subclass-specific code. This mechanism maintains the hierarchy of object creation in inheritance.\nIf a parent class has a default constructor (no-args), Java automatically inserts super() in the child constructor26.\nFor parent classes with only parameterized constructors, subclasses must explicitly call super(...) with matching arguments56. Parent class constructors execute before child constructors. For example:\nclass Parent { Parent() { System.out.println(\"Parent initialized\"); }\n}\nclass Child extends Parent { Child() { // Implicit super() added here System.out.println(\"Child initialized\"); }\n} Output:\nParent initialized\nChild initialized This ensures parent fields are ready before child logic runs26. First Statement Requirement: super(...) must be the first line in a subclass constructor236.\nNo Dual Invocation: A constructor cannot use both super() and this()—only one can occupy the first line56.\nMandatory Explicit Call: If the parent lacks a default constructor, all child constructors must explicitly invoke a parent parameterized constructor56.\nclass Vehicle { Vehicle(String type) { System.out.println(\"Vehicle: \" + type); }\n}\nclass Car extends Vehicle { Car() { super(\"Sedan\"); // Explicit call to parameterized parent constructor System.out.println(\"Car initialized\"); }\n}\nOutput:PlaintextVehicle: Sedan\nCar initialized\nHere, super(\"Sedan\") bypasses the default parent constructor, which doesn’t exist^5.class Grandparent { Grandparent() { System.out.println(\"Grandparent\"); }\n}\nclass Parent extends Grandparent { Parent() { // Implicit super() calls Grandparent() System.out.println(\"Parent\"); }\n}\nclass Child extends Parent { Child() { // Implicit super() calls Parent() System.out.println(\"Child\"); }\n}\nOutput:PlaintextGrandparent\nParent\nChild\nChaining propagates up the inheritance hierarchy automatically^2.\nCustom Initialization: Pass subclass parameters to parent constructors for tailored object setup.\nValidation Reuse: Leverage parent validation logic before child-specific checks.\nFramework Compliance: Ensure compatibility with libraries requiring specific parent initialization sequences.\nBy adhering to these rules, super-based chaining maintains Java’s object-oriented integrity while minimizing redundancy.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Constructor Chaining with <code>super</code> in Java","level":1,"id":"Constructor_Chaining_with_`super`_in_Java_0"},{"heading":"Key Principles of <code>super</code>-Based Chaining","level":2,"id":"Key_Principles_of_`super`-Based_Chaining_0"},{"heading":"Implicit vs. Explicit Calls:","level":3,"id":"Implicit_vs._Explicit_Calls_0"},{"heading":"Order of Execution:","level":3,"id":"Order_of_Execution_0"},{"heading":"Rules for Using <code>super</code>","level":2,"id":"Rules_for_Using_`super`_0"},{"heading":"Examples of Constructor Chaining with <code>super</code>","level":2,"id":"Examples_of_Constructor_Chaining_with_`super`_0"},{"heading":"Case 1: Parameterized Parent Constructor","level":3,"id":"Case_1_Parameterized_Parent_Constructor_0"},{"heading":"Case 2: Multi-Level Inheritance","level":3,"id":"Case_2_Multi-Level_Inheritance_0"},{"heading":"Common Errors and Solutions","level":2,"id":"Common_Errors_and_Solutions_0"},{"heading":"When to Use <code>super</code> Chaining","level":2,"id":"When_to_Use_`super`_Chaining_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/contructorchainingwithsuper.html","pathToRoot":"..","attachments":[],"createdTime":1748443332801,"modifiedTime":1748443332804,"sourceSize":3837,"sourcePath":"Java/ContructorChainingWithSuper.md","exportPath":"java/contructorchainingwithsuper.html","showInTree":true,"treeOrder":168,"backlinks":["java/superkeyword.html"],"type":"markdown"},"java/contructorchainingwiththis.html":{"title":"ContructorChainingWithThis","icon":"","description":"Constructor chaining in Java using the this keyword allows multiple constructors within the same class to call each other, enabling code reuse and centralized initialization. This approach streamlines object creation by ensuring common setup tasks are handled efficiently.\nSame-Class Invocation: The this() statement calls another constructor within the same class, passing required parameters. It must be the first line in the constructor26. Order of Execution: When an object is created, the called constructor triggers the chained constructor first. Control returns to the original constructor after completion28. Example:public class Employee { // Default constructor Employee() { this(\"John Doe\", 1001); // Calls parameterized constructor System.out.println(\"Default constructor executed\"); } // Parameterized constructor Employee(String name, int id) { System.out.println(\"Parameterized constructor: \" + name + \", ID: \" + id); } public static void main(String[] args) { new Employee(); // Triggers default constructor }\n}\nOutput:PlaintextParameterized constructor: John Doe, ID: 1001\nDefault constructor executed\nHere, the default constructor delegates initialization to the parameterized constructor using this(\"John Doe\", 1001)^4.\nFirst Statement: this() must be the first line in a constructor^3.\nNo Recursive Chaining: A constructor cannot invoke itself directly or indirectly^8.\nMandatory Termination: At least one constructor in the chain must not use this() to prevent infinite loops^6. Reduces Redundancy: Avoids repeating initialization code across multiple constructors^2.\nFlexibility: Allows creating objects with varying parameter sets while maintaining a single source of truth for critical setup logic^8.\nMaintainability: Changes to initialization logic need only be made in one constructor^5.\nFor instance, in a BankAccount class, a no-argument constructor could chain to a parameterized constructor with default values, ensuring consistent initialization without duplicating validation code^8.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Constructor Chaining in Java","level":1,"id":"Constructor_Chaining_in_Java_0"},{"heading":"How <code>this</code> Keyword Enables Constructor Chaining","level":2,"id":"How_`this`_Keyword_Enables_Constructor_Chaining_0"},{"heading":"Key Rules for Using <code>this</code>","level":2,"id":"Key_Rules_for_Using_`this`_0"},{"heading":"Benefits of Constructor Chaining","level":2,"id":"Benefits_of_Constructor_Chaining_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/contructorchainingwiththis.html","pathToRoot":"..","attachments":[],"createdTime":1748443303984,"modifiedTime":1748443303990,"sourceSize":2374,"sourcePath":"Java/ContructorChainingWithThis.md","exportPath":"java/contructorchainingwiththis.html","showInTree":true,"treeOrder":169,"backlinks":["java/thiskeyword.html"],"type":"markdown"},"java/default-values.html":{"title":"Default values","icon":"","description":"In Java, default values are automatically assigned to variables when they are declared but not explicitly initialized. These default values ensure that variables have a predictable initial state, which helps prevent unexpected behavior in programs.Java assigns specific default values to primitive data types:Numeric Types:\nbyte: 0\nshort: 0\nint: 0\nlong: 0L\nfloat: 0.0f\ndouble: 0.0d\nBoolean Type:\nboolean: false\nCharacter Type:\nchar: '\\u0000' (null character)\nFor all reference types, including objects and arrays, the default value is null[1][3]. Instance Variables: Default values are automatically assigned to instance variables (non-static fields) of a class[4][6]. Static Variables: Class variables (static fields) also receive default values when not explicitly initialized[4]. Local Variables: It's crucial to note that local variables (variables declared within methods) do not receive default values. They must be explicitly initialized before use, or the compiler will generate an error[3]. Here's a simple example demonstrating default values:public class DefaultValueExample { static byte b; static short s; static int i; static long l; static float f; static double d; static boolean bool; static char c; static String str; public static void main(String[] args) { System.out.println(\"byte: \" + b); System.out.println(\"short: \" + s); System.out.println(\"int: \" + i); System.out.println(\"long: \" + l); System.out.println(\"float: \" + f); System.out.println(\"double: \" + d); System.out.println(\"boolean: \" + bool); System.out.println(\"char: \" + c); System.out.println(\"String: \" + str); }\n}\nThis program will output the default values for each data type[6].\nPredictability: Default initialization ensures consistent behavior across different Java environments.\nError Prevention: It helps prevent null pointer exceptions and other issues related to uninitialized variables.\nCode Simplification: In many cases, default values eliminate the need for explicit initialization, making code cleaner and more concise.\nUnderstanding default values in Java is essential for writing robust and error-free code, especially when working with class fields and complex data structures.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Default Values for Primitive Data Types","level":2,"id":"Default_Values_for_Primitive_Data_Types_0"},{"heading":"Default Values for Reference Types","level":2,"id":"Default_Values_for_Reference_Types_0"},{"heading":"Important Considerations","level":2,"id":"Important_Considerations_0"},{"heading":"Example","level":2,"id":"Example_0"},{"heading":"Benefits of Default Initialization","level":2,"id":"Benefits_of_Default_Initialization_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/default-values.html","pathToRoot":"..","attachments":[],"createdTime":1748441320634,"modifiedTime":1748441320635,"sourceSize":2559,"sourcePath":"Java/Default values.md","exportPath":"java/default-values.html","showInTree":true,"treeOrder":170,"backlinks":[],"type":"markdown"},"java/enums.html":{"title":"Enums","icon":"","description":"<a class=\"internal-link\" data-href=\"EnumsScope.md\" href=\"java/enumsscope.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"EnumsScope.md\" href=\"java/enumsscope.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"EnumsScope.md\" href=\"java/enumsscope.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"EnumsScope.md\" href=\"java/enumsscope.html\" target=\"_self\" rel=\"noopener nofollow\"></a># Enums in JavaEnums in Java are a powerful feature introduced in JDK 1.5 that allow developers to define a fixed set of named constants, improving code clarity and type safety. They function as a specialized class type with predefined instances, making them ideal for representing concepts like days of the week, months, or states. Fixed Constants: Enums represent a finite, predefined set of values. For example:\npublic enum Season { SUMMER, WINTER, SPRING } Here, Season can only take one of the three declared values1. Type Safety: Enums prevent invalid assignments by restricting variables to the declared constants. For instance, a Season variable cannot hold values like \"RAINY\"1. Implicit Properties: Enum constants are public, static, and final by default.\nThey can not use new keyword.\nThey extend java.lang.Enum, so they cannot inherit from other classes1. public enum MonthWithDays { JANUARY(31), FEBRUARY(28), MARCH(31); int days; MonthWithDays(int days) { this.days = days; }\n} Enums can have fields and constructors. Each constant (e.g., JANUARY) initializes these fields during declaration^1. The compiler automatically adds the values() method, which returns an array of all enum constants:\nfor (Season s : Season.values()) { System.out.println(s);\n} Output: Plaintext\nSUMMER\nWINTER\nSPRING Enums can define methods or declare abstract methods that each constant must implement:\npublic enum Operation { ADD { public double apply(double a, double b) { return a + b; } }, SUBTRACT { public double apply(double a, double b) { return a - b; } }; public abstract double apply(double a, double b);\n} Enums work seamlessly with switch statements:\nswitch (season) { case SUMMER: System.out.println(\"Hot\"); break; case WINTER: System.out.println(\"Cold\"); break;\n} Enums cannot be instantiated using new due to private constructors^1. Can be declared inside or outside a class.\nNested enums can be private, but standalone enums must be public or package-private^1.\nMultiple enums can coexist in the same class^1. Enums can implement interfaces but cannot extend classes^1.\npublic enum MonthWithDays { JANUARY(31), FEBRUARY(28), MARCH(31); int days; MonthWithDays(int days) { this.days = days; }\n} // Usage\nfor (MonthWithDays month : MonthWithDays.values()) { System.out.println(month + \": \" + month.days + \" days\");\n}\nOutput:PlaintextJANUARY: 31 days\nFEBRUARY: 28 days\nMARCH: 31 days Representing states (e.g., OrderStatus { PENDING, SHIPPED, DELIVERED }).\nDefining options in menus or configuration settings.\nSimplifying switch-case logic with type-safe constants.\nEnums enhance code readability and reduce errors by enforcing valid values at compile time. Their integration with Java’s object-oriented features makes them indispensable for modeling fixed, related constants^1.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Key Characteristics of Enums","level":2,"id":"Key_Characteristics_of_Enums_0"},{"heading":"Enum Features and Usage","level":2,"id":"Enum_Features_and_Usage_0"},{"heading":"Basic Structure","level":3,"id":"Basic_Structure_0"},{"heading":"Constructors and Fields:","level":3,"id":"Constructors_and_Fields_0"},{"heading":"Traversal with <code>values()</code>","level":3,"id":"Traversal_with_`values()`_0"},{"heading":"Advanced Capabilities","level":2,"id":"Advanced_Capabilities_0"},{"heading":"Methods and Abstract Methods:","level":3,"id":"Methods_and_Abstract_Methods_0"},{"heading":"Switch Compatibility:","level":3,"id":"Switch_Compatibility_0"},{"heading":"Important Considerations","level":2,"id":"Important_Considerations_0"},{"heading":"Instantiation:","level":3,"id":"Instantiation_0"},{"heading":"Scope and Declaration:","level":3,"id":"Scope_and_Declaration_0"},{"heading":"Interfaces:","level":3,"id":"Interfaces_0"},{"heading":"Practical Example: Enum with Constructor","level":2,"id":"Practical_Example_Enum_with_Constructor_0"},{"heading":"Common Use Cases","level":2,"id":"Common_Use_Cases_0"},{"heading":"Citations:","level":2,"id":"Citations_0"}],"links":["java/enumsscope.html","java/enumsscope.html","java/enumsscope.html","java/enumsscope.html"],"author":"","coverImageURL":"","fullURL":"java/enums.html","pathToRoot":"..","attachments":[],"createdTime":1748443253304,"modifiedTime":1749740357869,"sourceSize":3732,"sourcePath":"Java/Enums.md","exportPath":"java/enums.html","showInTree":true,"treeOrder":171,"backlinks":[],"type":"markdown"},"java/enumsscope.html":{"title":"EnumsScope","icon":"","description":"In Java, enums have specific rules regarding their declaration and scope. Here’s a breakdown based on your queries:Yes, but only if it is nested inside another class. Top-level enums (declared in their own .java file) must be public or package-private (no access modifier). However, when declared inside a class, enums can be marked private:public class MyClass { private enum Status { ACTIVE, INACTIVE } // Valid\n}\nKey Points:\nEnums are implicitly static when nested inside a class.\nEnum constructors are always private (even if not explicitly declared)^2.\nNo. Enums cannot be declared inside methods, loops, or conditional blocks. They must be declared at the class level or as static nested types:public class MyClass { // Valid: enum at class level enum Direction { NORTH, SOUTH } void myMethod() { // INVALID: enum inside a method // enum Status { ACTIVE } }\n}\nYes, a single class can contain multiple enums. For example:public class GameConfig { public enum Difficulty { EASY, MEDIUM, HARD } private enum GameState { RUNNING, PAUSED, STOPPED }\n}\nUsage:\nEnums are accessed via their enclosing class, e.g., GameConfig.Difficulty.EASY.\nEach enum can have its own fields, methods, and constructors^3.\npublic class PaymentProcessor { private enum PaymentStatus { SUCCESS(\"Payment completed\"), FAILED(\"Payment rejected\"); private final String message; PaymentStatus(String msg) { this.message = msg; // Constructor is implicitly private } public String getMessage() { return message; } } public static void main(String[] args) { PaymentStatus status = PaymentStatus.SUCCESS; System.out.println(status.getMessage()); // Output: Payment completed }\n}\nEnums provide type safety, reduce errors, and improve readability when modeling fixed sets of constants. Use them for scenarios like states, configuration options, or predefined categories^3.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Java Enums: Declaration and Scope Rules","level":1,"id":"Java_Enums_Declaration_and_Scope_Rules_0"},{"heading":"1. Can an enum be declared private?","level":2,"id":"1._Can_an_enum_be_declared_private?_0"},{"heading":"2. Can enums be defined inside any block (e.g., method) in a class?","level":2,"id":"2._Can_enums_be_defined_inside_any_block_(e.g.,_method)_in_a_class?_0"},{"heading":"3. Can multiple enums be defined inside the same class?","level":2,"id":"3._Can_multiple_enums_be_defined_inside_the_same_class?_0"},{"heading":"Example: Enums with Methods and Fields","level":2,"id":"Example_Enums_with_Methods_and_Fields_0"},{"heading":"Key Rules for Java Enums","level":2,"id":"Key_Rules_for_Java_Enums_0"},{"heading":"Citations:","level":2,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/enumsscope.html","pathToRoot":"..","attachments":[],"createdTime":1748443273026,"modifiedTime":1748443273032,"sourceSize":3038,"sourcePath":"Java/EnumsScope.md","exportPath":"java/enumsscope.html","showInTree":true,"treeOrder":172,"backlinks":["java/enums.html"],"type":"markdown"},"java/exception-and-assertion-mcqs.html":{"title":"Exception and Assertion MCQs","icon":"","description":"What will be the output of the program?public class Test { public static int y; public static void foo(int x) { System.out.print(\"foo \"); y = x; } public static int bar(int z) { System.out.print(\"bar \"); return y = z; } public static void main(String [] args ) { int t = 0; assert t &gt; 0 : bar(7); assert t &gt; 1 : foo(8); /* Line 18 */ System.out.println(\"done \"); }\n}\na) bar\nb) bar done\nc) foo done\nd) Compilation failsAnswer:&nbsp;Option d)\nExplanation:\nThe&nbsp;foo()&nbsp;method returns void. It is a perfectly acceptable method, but because it returns void it cannot be used in an&nbsp;assert&nbsp;statement, so line 18 will not compile.What will be the output of the program?public class Test { public static void main(String[] args) { int x = 0; assert (x &gt; 0) ? \"assertion failed\" : \"assertion passed\" ; System.out.println(\"finished\"); } }\na) finished\nb) Compiliation fails.\nc) An&nbsp;AssertionError&nbsp;is thrown and finished is output.\nd) An&nbsp;AssertionError&nbsp;is thrown with the message \"assertion failed.\"Answer:&nbsp;Option\nExplanation:\nCompilation Fails. You can't use the Assert statement in a similar way to the ternary operator. Don't confuse.what will be the output of the following program ?public class Test2 { public static int x; public static int foo(int y) { return y * 2; } public static void main(String [] args) { int z = 5; assert z &gt; 0; /* Line 11 */ assert z &gt; 2: foo(z); /* Line 12 */ if ( z &lt; 7 ) assert z &gt; 4; /* Line 14 */ switch (z) { case 4: System.out.println(\"4 \"); case 5: System.out.println(\"5 \"); default: assert z &lt; 10; } if ( z &lt; 10 ) assert z &gt; 4: z++; /* Line 22 */ System.out.println(z); }\n}\nwhich line is an example of an inappropriate use of assertions?a) Line 11\nb) Line 12\nc) Line 14\nd) Line 22Answer:&nbsp;Option d)\nExplanation:\nAssert statements should not cause side effects. Line 22 changes the value of&nbsp;z&nbsp;if the assert statement is&nbsp;false.Option A is fine; a second expression in an assert statement is not required.Option B is fine because it is perfectly acceptable to call a method with the second expression of an assert statement.Option C is fine because it is proper to call an assert statement conditionally and was incorrectly interpreted.What will be the output of the program?public class Foo { public static void main(String[] args) { try { return; } finally { System.out.println( \"Finally\" ); } } }\na) Finally\nb) Compilation fails.\nd) The code runs with no output.\ne) An exception is thrown at runtime.Answer:&nbsp;Option a)\nExplanation:If you put a finally block after a try and its associated catch blocks, then once execution enters the try block, the code in that finally block will definitely be executed except in the following circumstances:\nAn exception arising in the finally block itself.\nThe death of the thread.\nThe use of&nbsp;System.exit()\nTurning off the power to the CPU.\nI suppose the last three could be classified as VM shutdown.What will be the output of the program?try { int x = 0; int y = 5 / x; } catch (Exception e) { System.out.println(\"Exception\"); } catch (ArithmeticException ae) { System.out.println(\" Arithmetic Exception\"); } System.out.println(\"finished\");\na) finished\nb) Exception\nc) Compilation fails.\nd) Arithmetic ExceptionAnswer:&nbsp;Option d)\nExplanation:Compilation fails because&nbsp;ArithmeticException&nbsp;has already been caught.&nbsp;ArithmeticException&nbsp;is a subclass of&nbsp;java.lang.Exception, by time the&nbsp;ArithmeticException&nbsp;has been specified it has already been caught by the&nbsp;Exception&nbsp;class.If&nbsp;ArithmeticException&nbsp;appears before&nbsp;Exception, then the file will compile. When catching exceptions the more specific exceptions must be listed before the more general (the subclasses must be caught before the superclasses).What will be the output of the program?public class X { public static void main(String [] args) { try { badMethod(); System.out.print(\"A\"); } catch (Exception ex) { System.out.print(\"B\"); } finally { System.out.print(\"C\"); } System.out.print(\"D\"); } public static void badMethod() { throw new Error(); /* Line 22 */ } }\na) ABCD\nb) Compilation fails.\nc) C is printed before exiting with an error message.\nd) BC is printed before exiting with an error message.Answer:&nbsp;Option\nExplanation:Error&nbsp;is thrown but not recognised line(22) because the only catch attempts to catch an&nbsp;Exception&nbsp;and&nbsp;Exception&nbsp;is not a superclass of&nbsp;Error. Therefore only the code in the&nbsp;finally&nbsp;statement can be run before exiting with a runtime error (Exception in thread \"main\"&nbsp;java.lang.Error).What will be the output of the program?public class X { public static void main(String [] args) { try { badMethod(); System.out.print(\"A\"); } catch (RuntimeException ex) /* Line 10 */ { System.out.print(\"B\"); } catch (Exception ex1) { System.out.print(\"C\"); } finally { System.out.print(\"D\"); } System.out.print(\"E\"); } public static void badMethod() { throw new RuntimeException(); } }\na) BD\nb) BCD\nc) BDE\nd) BCDEAnswer:&nbsp;Option c)\nExplanation:A Run time exception is thrown and caught in the catch statement on line 10. All the code after the finally statement is run because the exception has been caught.What will be the output of the program?public class Test { public static void aMethod() throws Exception { try /* Line 5 */ { throw new Exception(); /* Line 7 */ } finally /* Line 9 */ { System.out.print(\"finally \"); /* Line 11 */ } } public static void main(String args[]) { try { aMethod(); } catch (Exception e) /* Line 20 */ { System.out.print(\"exception \"); } System.out.print(\"finished\"); /* Line 24 */ } }\na) finally\nb) exception finished\nc) finally exception finished\nd) Compilation failsAnswer:&nbsp;Option c)Explanation:This is what happens:(1) The execution of the&nbsp;try&nbsp;block (line 5) completes abruptly because of the&nbsp;throw&nbsp;statement (line 7).(2) The exception cannot be assigned to the parameter of any catch clause of the&nbsp;try&nbsp;statement therefore the&nbsp;finally&nbsp;block is executed (line 9) and \"finally\" is output (line 11).(3) The&nbsp;finally&nbsp;block completes normally, and then the&nbsp;try&nbsp;statement completes abruptly because of the&nbsp;throw&nbsp;statement (line 7).(4) The exception is propagated up the call stack and is caught by the catch in the main method (line 20). This prints \"exception\".(5) Lastly program execution continues, because the exception has been caught, and \"finished\" is output (line 24).What will be the output of the program?public class X { public static void main(String [] args) { try { badMethod(); System.out.print(\"A\"); } catch (Exception ex) { System.out.print(\"B\"); } finally { System.out.print(\"C\"); } System.out.print(\"D\"); } public static void badMethod() {} } a) AC\nb) BC\nc) ACD\nd) ABCDAnswer:&nbsp;Option c)Explanation:There is no exception thrown, so all the code with the exception of the catch statement block is runWhat will be the output of the program?class Exc0 extends Exception { } class Exc1 extends Exc0 { } /* Line 2 */\npublic class Test { public static void main(String args[]) { try { throw new Exc1(); /* Line 9 */ } catch (Exc0 e0) /* Line 11 */ { System.out.println(\"Ex0 caught\"); } catch (Exception e) { System.out.println(\"exception caught\"); } } }\na) Ex0&nbsp;caught\nb) exception caught\nc) Compilation fails because of an error at line 2.\nd) Compilation fails because of an error at line 9.Answer:&nbsp;Option a) Explanation:An exception&nbsp;Exc1&nbsp;is thrown and is caught by the catch statement on line 11. The code is executed in this block. There is no finally block of code to execute.what will be the output of the code ?public class MyProgram { public static void throwit() { throw new RuntimeException(); } public static void main(String args[]) { try { System.out.println(\"Hello world \"); throwit(); System.out.println(\"Done with try block \"); } finally { System.out.println(\"Finally executing \"); } }\n}\nwhich answer most closely indicates the behavior of the program?a) The program will not compile.\nb) The program will print Hello world, then will print that a&nbsp;RuntimeException&nbsp;has occurred, then will print Done with try block, and then will print Finally executing.\nc) The program will print Hello world, then will print that a&nbsp;RuntimeException&nbsp;has occurred, and then will print Finally executing.\nd) The program will print Hello world, then will print Finally executing, then will print that a&nbsp;RuntimeException&nbsp;has occurred.Answer:&nbsp;Option d)\nExplanation:Once the program throws a&nbsp;RuntimeException&nbsp;(in the&nbsp;throwit()&nbsp;method) that is not caught, the finally block will be executed and the program will be terminated. If a method does not handle an exception, the finally block is executed before the exception is propagated.Which statement is true?a) catch(X x)&nbsp;can catch subclasses of&nbsp;X&nbsp;where&nbsp;X&nbsp;is a subclass of&nbsp;Exception.\nb) The&nbsp;Error&nbsp;class is a&nbsp;RuntimeException.\nc) Any statement that can throw an&nbsp;Error&nbsp;must be enclosed in a try block.\nd) Any statement that can throw an&nbsp;Exception&nbsp;must be enclosed in a try block.Answer:&nbsp;Option a)Explanation:Option A is correct. If the class specified in the catch clause does have subclasses, any exception object that subclasses the specified class will be caught as well.Option B is wrong. The error class is a subclass of&nbsp;Throwable&nbsp;and not&nbsp;Runtime&nbsp;Exception.Option C is wrong. You do not catch this class of error.Option D is wrong. An exception can be thrown to the next method higher up the call stack.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"java/exception-and-assertion-mcqs.html","pathToRoot":"..","attachments":[],"createdTime":1748021791852,"modifiedTime":1748237980649,"sourceSize":11158,"sourcePath":"Java/Exception and Assertion MCQs.md","exportPath":"java/exception-and-assertion-mcqs.html","showInTree":true,"treeOrder":173,"backlinks":[],"type":"markdown"},"java/exception-handeling.html":{"title":"Exception Handeling","icon":"","description":"Exception handling is a crucial mechanism in Java that allows developers to gracefully manage runtime errors and maintain program flow. Here's a comprehensive overview of exception handling in Java:An exception is an event that occurs during program execution and disrupts the normal flow of instructions. More specifically, an exception is an abnormal condition that arises in a code sequence at runtime. In Java, each exception is represented by an object that describes the exceptional (error) condition that has occurred in the code. Simply put, \"An exception is a run-time error\". In java, each run-time error is represented by an object.Java organizes exceptions in a well-defined class hierarchy:\nThrowable: The root class that represents the basic features of runtime errors\nException: A subclass of Throwable that represents errors that can be handled programmatically\nError: A subclass of Throwable that represents errors that cannot be handled (like system-level errors)\nRuntimeException: A subclass of Exception that represents unchecked exceptions\nThe hierarchy can be visualized as:Throwable\n├── Exception\n│ ├── IOException (Checked)\n│ ├── SQLException (Checked)\n│ └── RuntimeException (Unchecked)\n│ ├── ArithmeticException\n│ ├── ArrayIndexOutOfBoundsException\n│ └── NullPointerException\n└── Error ├── VirtualMachineError ├── StackOverflowError └── NoSuchMethodError\nChecked Exceptions: Must be declared in the method signature or handled with try-catch blocks. Examples include IOException and SQLException.Unchecked Exceptions: Do not need to be explicitly declared or caught. These include RuntimeException and its subclasses like ArithmeticException, ArrayIndexOutOfBoundsException, and NullPointerException.\nArithmeticException\nArrayIndexOutOfBoundsException\nNumberFormatException\nNullPointerException\nIOException\nVirtualMachineError\nStackOverflowError\nNoClassDefFoundError\nNoSuchMethodError\nThe try block is used to execute statements whose execution may result in an exception. It must always be used with either catch or finally or both:try { // Statements that may cause an exception\n}\nThe catch block defines an exception handler and contains statements to be executed when a specific exception occurs.\nIf the program executes normally, catch block statements are not executed. If no catch block is found in program, exception is caught by JVM and program is terminated. One try block can be caught by multiple catch blocks.\nHere's an example handling multiple exceptions:try { int a = Integer.parseInt(arr[0]); int b = Integer.parseInt(arr[1]); int c = a/b; System.out.println(\"Result is: \" + c);\n}\ncatch (ArithmeticException e) { System.out.println(\"Second number must be non-zero\");\n}\ncatch (NumberFormatException n) { System.out.println(\"Arguments must be Numeric\");\n}\ncatch (ArrayIndexOutOfBoundsException a) { System.out.println(\"Invalid Number of arguments\");\n}\nThe throw keyword is used for explicit exception throwing. It can be used to:\nThrow user-defined exceptions\nCustomize messages for predefined exceptions\nRe-throw a caught exception\nthrow new NullPointerException(\"demo\");\nSystem-generated exceptions are automatically thrown by the Java run-time system.The throws clause lists the types of exceptions that a method might throw. All other exceptions that a method can throw must be declared in the throws clause. If they are not, a compile-time error will result.\ntype method-name(parameter-list) throws exception-list { // body of method\n}\nThe finally block creates code that executes after a try/catch block completes and before the following code. The finally block executes whether or not an exception is thrown:try { // risky code\n}\ncatch (Exception e) { // handle exception\n}\nfinally { // cleanup code - always executes\n}\nNested Try Blocks: You can nest try-catch blocks within each other for more granular exception handling:try { int a = Integer.parseInt(args[0]); try { int b = Integer.parseInt(args[1]); System.out.println(a/b); } catch (ArithmeticException e) { System.out.println(\"Div by zero error!\"); }\n} catch (ArrayIndexOutOfBoundsException e) { System.out.println(\"Need 2 parameters!\");\n}\nMulti-catch: Java allows catching multiple exception types in a single catch block using the | operator:catch(ArrayIndexOutOfBoundsException | NumberFormatException ae) { if(ae instanceof NumberFormatException) { System.out.println(\"Enter the Integers\"); } else if(ae instanceof ArrayIndexOutOfBoundsException) { System.out.println(\"Enter Two Integers\"); }\n}\nGeneralized Exception Handler: You can create a handler that catches all exception types using Throwable, but it must be the last catch block:catch (Throwable e) { System.out.println(e);\n}\nIf an exception is not caught where it's thrown, control passes to the method that invoked the current method. This propagation continues until the exception is caught or reaches the main method, which terminates the program with an error message.class ExceptionPropagation{ public void first() { int data=50/0; } public void second(){ first(); } public void third() { try{ second(); } catch(Exception e){ System.out.println(\"Done\"); }\n}\nException handling is essential because it:\nAllows you to fix errors and customize error messages\nPrevents programs from automatically terminating\nProvides graceful error recovery mechanisms\nMaintains program flow even when errors occur\nException handling enables robust Java applications that can gracefully handle unexpected situations and provide meaningful feedback to users while maintaining system stability.Java allows developers to create their own exception classes for application-specific error conditions. Custom exceptions enhance code readability and provide more meaningful error messages for business logic errors.Creating Custom Checked Exceptions:public class UserNotFoundException extends Exception { public UserNotFoundException(String message) { super(message); }\n}\nCreating Custom Unchecked Exceptions:public class InsufficientFundsException extends RuntimeException { private double amount; public InsufficientFundsException(double amount) { this.amount = amount; } public double getAmount() { return amount; }\n}\nCustom exceptions are particularly useful for specific business logic errors, enhanced code maintainability, differentiated error handling, and enforcing API contracts.Introduced in Java 7, the try-with-resources statement automatically manages resource cleanup. This eliminates the need for explicit finally blocks to close resources:try (FileInputStream inputStream = new FileInputStream(\"file.txt\"); BufferedReader reader = new BufferedReader(new FileReader(\"data.txt\"))) { // Use resources\n} catch (IOException e) { // Handle exception\n} // Resources are automatically closed\nThis approach prevents resource leaks and makes code cleaner and more reliable.Use Specific Exception Types: Always catch the most specific exception rather than generic Exception.// Good\ncatch (FileNotFoundException e) { }\ncatch (IOException e) { }\n// Avoid\ncatch (Exception e) { }\nFail-Fast Principle: Throw exceptions early when error conditions are detected, but handle them late in the call stack.Proper Exception Documentation: Use Javadoc @throws tags to document exceptions your methods can throw./** * @throws UserNotFoundException if user ID is not found */\npublic User findUser(String id) throws UserNotFoundException { }\nNever Ignore Exceptions: Always log caught exceptions instead of silently ignoring them.try { riskyOperation();\n} catch (SomeException e) { logger.error(\"Operation failed\", e); // Handle appropriately\n}\nException chaining allows you to preserve the original cause while throwing a different exception:try { lowLevelOperation();\n} catch (LowLevelException e) { throw new HighLevelException(\"High level error occurred\", e);\n}\nThis technique is useful for converting implementation-specific exceptions to more appropriate high-level exceptions while maintaining the original error information.Modern applications benefit from centralized exception handling. In frameworks like Spring Boot:@ControllerAdvice\npublic class GlobalExceptionHandler { @ExceptionHandler(UserNotFoundException.class) public ResponseEntity&lt;String&gt; handleUserNotFound(UserNotFoundException e) { return ResponseEntity.badRequest().body(e.getMessage()); }\n}\nWhen using try-with-resources, if both the try block and resource closing throw exceptions, the close exception becomes \"suppressed\". You can check for suppressed exceptions:try { // Code that might throw\n} catch (Exception e) { Throwable[] suppressed = e.getSuppressed(); // Handle suppressed exceptions\n}\nException Translation: Converting low-level exceptions to more meaningful higher-level exceptions.Exception Enrichment: Adding context information to exceptions before re-throwing.Defensive Exception Handling: Using the Optional class to avoid null-related exceptions:public Optional&lt;User&gt; findUser(String id) { // Return Optional.empty() instead of throwing exception return user != null ? Optional.of(user) : Optional.empty();\n}\nException handling has performance implications:\nException creation is expensive due to stack trace generation\nUse exceptions for exceptional conditions, not normal control flow\nAvoid catching exceptions in performance-critical loops\nException Re-throwing: Catching an exception to perform logging or cleanup, then re-throwing it:public void processFile() throws IOException { try { // File operations } catch (IOException e) { logger.error(\"File processing failed\", e); throw e; // Re-throw for caller to handle }\n}\nThese advanced concepts significantly enhance your exception handling capabilities and code quality in Java applications.\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://blog.sentry.io/exception-handling-in-java-with-real-examples/\" target=\"_self\">https://blog.sentry.io/exception-handling-in-java-with-real-examples/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://blog.jetbrains.com/idea/2024/04/easy-hacks-how-to-handle-exceptions-in-java/\" target=\"_self\">https://blog.jetbrains.com/idea/2024/04/easy-hacks-how-to-handle-exceptions-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://javanexus.com/blog/mastering-java-error-handling\" target=\"_self\">https://javanexus.com/blog/mastering-java-error-handling</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.theserverside.com/blog/Coffee-Talk-Java-News-Stories-and-Opinions/Java-Exception-handling-best-practices\" target=\"_self\">https://www.theserverside.com/blog/Coffee-Talk-Java-News-Stories-and-Opinions/Java-Exception-handling-best-practices</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://javarush.com/en/groups/posts/en.3936.coffee-break-158-10-tips-for-handling-exceptions-in-java\" target=\"_self\">https://javarush.com/en/groups/posts/en.3936.coffee-break-158-10-tips-for-handling-exceptions-in-java</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.baeldung.com/java-new-custom-exception\" target=\"_self\">https://www.baeldung.com/java-new-custom-exception</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.shiksha.com/online-courses/articles/user-defined-exception-in-java-blogId-148713\" target=\"_self\">https://www.shiksha.com/online-courses/articles/user-defined-exception-in-java-blogId-148713</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"http://www.btechsmartclass.com/java/java-creating-own-exceptions.html\" target=\"_self\">http://www.btechsmartclass.com/java/java-creating-own-exceptions.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.interviewbit.com/exception-handling-interview-questions/\" target=\"_self\">https://www.interviewbit.com/exception-handling-interview-questions/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackify.com/best-practices-exceptions-java/\" target=\"_self\">https://stackify.com/best-practices-exceptions-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.vultr.com/java/examples/create-custom-exception\" target=\"_self\">https://docs.vultr.com/java/examples/create-custom-exception</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.upgrad.com/tutorials/software-engineering/java-tutorial/user-defined-exception-in-java/\" target=\"_self\">https://www.upgrad.com/tutorials/software-engineering/java-tutorial/user-defined-exception-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dev.to/saurabhkurve/best-practices-and-pitfalls-in-java-exception-handling-37dk\" target=\"_self\">https://dev.to/saurabhkurve/best-practices-and-pitfalls-in-java-exception-handling-37dk</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_custom_exception.htm\" target=\"_self\">https://www.tutorialspoint.com/java/java_custom_exception.htm</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=V_jVp6WdW0Y\" target=\"_self\">https://www.youtube.com/watch?v=V_jVp6WdW0Y</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/examples/create-custom-exception\" target=\"_self\">https://www.programiz.com/java-programming/examples/create-custom-exception</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_try_catch.asp\" target=\"_self\">https://www.w3schools.com/java/java_try_catch.asp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.arsdcollege.ac.in/wp-content/uploads/2020/03/Programming_in_Java-week3.pdf\" target=\"_self\">https://www.arsdcollege.ac.in/wp-content/uploads/2020/03/Programming_in_Java-week3.pdf</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://marcus-biel.com/advanced-exception-handling-in-java/\" target=\"_self\">https://marcus-biel.com/advanced-exception-handling-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://study.com/academy/lesson/handling-advanced-exceptions-in-java.html\" target=\"_self\">https://study.com/academy/lesson/handling-advanced-exceptions-in-java.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.baeldung.com/java-exceptions\" target=\"_self\">https://www.baeldung.com/java-exceptions</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.oracle.com/javase/tutorial/essential/exceptions/index.html\" target=\"_self\">https://docs.oracle.com/javase/tutorial/essential/exceptions/index.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=_nmm0nZqIIY\" target=\"_self\">https://www.youtube.com/watch?v=_nmm0nZqIIY</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.boardinfinity.com/blog/java-custom-exception/\" target=\"_self\">https://www.boardinfinity.com/blog/java-custom-exception/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=OIozDnGYqIU\" target=\"_self\">https://www.youtube.com/watch?v=OIozDnGYqIU</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://raygun.com/blog/java-exceptions-terminology/\" target=\"_self\">https://raygun.com/blog/java-exceptions-terminology/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://jenkov.com/tutorials/java-exception-handling/index.html\" target=\"_self\">https://jenkov.com/tutorials/java-exception-handling/index.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.linkedin.com/pulse/java-exception-handling-dos-dont-sudhagar-nagarajan\" target=\"_self\">https://www.linkedin.com/pulse/java-exception-handling-dos-dont-sudhagar-nagarajan</a>\n<br>Answer from Perplexity: <a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">pplx.ai/share</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"What is an Exception?","level":2,"id":"What_is_an_Exception?_0"},{"heading":"Exception Class Hierarchy","level":2,"id":"Exception_Class_Hierarchy_0"},{"heading":"Types of Exceptions","level":2,"id":"Types_of_Exceptions_0"},{"heading":"Common Java Exception Sub-Classes","level":2,"id":"Common_Java_Exception_Sub-Classes_0"},{"heading":"Exception Handling Keywords","level":2,"id":"Exception_Handling_Keywords_0"},{"heading":"try","level":2,"id":"try_0"},{"heading":"catch","level":2,"id":"catch_0"},{"heading":"throw","level":2,"id":"throw_0"},{"heading":"throws","level":2,"id":"throws_0"},{"heading":"finally","level":2,"id":"finally_0"},{"heading":"Advanced Exception Handling Concepts","level":2,"id":"Advanced_Exception_Handling_Concepts_0"},{"heading":"Exception Propagation","level":2,"id":"Exception_Propagation_0"},{"heading":"Why Use Exception Handling?","level":2,"id":"Why_Use_Exception_Handling?_0"},{"heading":"Custom/User-Defined Exceptions","level":2,"id":"Custom/User-Defined_Exceptions_0"},{"heading":"Try-With-Resources Statement","level":2,"id":"Try-With-Resources_Statement_0"},{"heading":"Exception Best Practices","level":2,"id":"Exception_Best_Practices_0"},{"heading":"Exception Chaining and Wrapping","level":2,"id":"Exception_Chaining_and_Wrapping_0"},{"heading":"Global Exception Handling","level":2,"id":"Global_Exception_Handling_0"},{"heading":"Suppressed Exceptions","level":2,"id":"Suppressed_Exceptions_0"},{"heading":"Advanced Exception Handling Patterns","level":2,"id":"Advanced_Exception_Handling_Patterns_0"},{"heading":"Performance Considerations","level":2,"id":"Performance_Considerations_0"},{"heading":"Method Signature Exception Handling","level":2,"id":"Method_Signature_Exception_Handling_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/exception-handeling.html","pathToRoot":"..","attachments":[],"createdTime":1747917513676,"modifiedTime":1748361350170,"sourceSize":15438,"sourcePath":"Java/Exception Handeling.md","exportPath":"java/exception-handeling.html","showInTree":true,"treeOrder":174,"backlinks":[],"type":"markdown"},"java/finalkeyword.html":{"title":"FinalKeyword","icon":"","description":"The final keyword in Java is a non-access modifier used to enforce immutability, restrict inheritance, and prevent unintended modifications. It can be applied to variables, methods, and classes, providing control over code behavior and enhancing security. Below is a detailed breakdown of its usage and implications:Definition: A variable declared as final becomes a constant and cannot be reassigned after initialization236.Initialization:\nMust be initialized either at declaration or within a constructor (for instance variables)7.\nExample:final int MAX_VALUE = 100; // Valid\nfinal String NAME; NAME = \"Java\"; // Valid in constructor\nTypes:\nPrimitive: Value becomes immutable (e.g., final int x = 5;)^9.\nReference: The reference cannot change, but the object’s internal state might (unless the class itself is immutable)^2.\nDefinition: A final method cannot be overridden by subclasses, ensuring consistent behavior across inheritance hierarchies^4^9.Example:Javaclass Parent { public final void display() { System.out.println(\"Parent method\"); }\n}\nclass Child extends Parent { // Compilation error: Cannot override display()\n}\nDefinition: A final class cannot be extended, preventing inheritance entirely.Use Case: Common for utility classes (e.g., String, Integer) to ensure immutability and security.final class UtilityClass { // Class implementation }\n// Error: Cannot inherit from final UtilityClass\nclass SubClass extends UtilityClass {} Immutability: Ensures thread-safe constants and predictable behavior in multi-threaded environments^2^8.\nSecurity: Prevents subclassing or overriding critical methods (e.g., in APIs)^4.\nCode Clarity: Signals design intent (e.g., constants, unmodifiable classes)^4. Constants: Java\npublic static final double PI = 3.14159; Utility Classes: Java\npublic final class MathUtils { private MathUtils() {} // Prevent instantiation\n} Method Security: Java\npublic final void performCriticalAction() { ... } Use uppercase naming for final variables (e.g., MAX_SIZE)^9.\nPrefer final parameters in methods to prevent accidental modifications^2.\nCombine final with static for global constants (e.g., public static final String API_KEY = \"123\";)^8.\nBy leveraging the final keyword, developers can write safer, more maintainable code that adheres to design constraints and reduces runtime errors^2^6.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"The <code>final</code> Keyword in Java","level":1,"id":"The_`final`_Keyword_in_Java_0"},{"heading":"Core Uses of <code>final</code>","level":2,"id":"Core_Uses_of_`final`_0"},{"heading":"1. Final Variables","level":3,"id":"1._Final_Variables_0"},{"heading":"2. Final Methods","level":3,"id":"2._Final_Methods_0"},{"heading":"3. Final Classes","level":3,"id":"3._Final_Classes_0"},{"heading":"Key Benefits","level":2,"id":"Key_Benefits_0"},{"heading":"Common Use Cases","level":2,"id":"Common_Use_Cases_0"},{"heading":"Comparison: <code>final</code> vs <code>finally</code> vs <code>finalize</code>","level":2,"id":"Comparison_`final`_vs_`finally`_vs_`finalize`_0"},{"heading":"Best Practices","level":2,"id":"Best_Practices_0"},{"heading":"Citations:","level":2,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/finalkeyword.html","pathToRoot":"..","attachments":[],"createdTime":1748443430239,"modifiedTime":1748443430240,"sourceSize":3428,"sourcePath":"Java/FinalKeyword.md","exportPath":"java/finalkeyword.html","showInTree":true,"treeOrder":175,"backlinks":[],"type":"markdown"},"java/functionpassingvalues.html":{"title":"functionPassingValues","icon":"","description":"When you call a function (or method) in Java, you often need to give it some data to work with. This process of giving data to a function is called passing values or passing parameters.Here's the most important thing to understand: Java always passes values by copy. This means when you pass something to a function, Java makes a copy of that value and gives the copy to the function, not the original.These include: int, double, char, boolean, byte, short, long, float.public class Example { public static void changeNumber(int num) { num = 100; // This changes only the copy System.out.println(\"Inside function: \" + num); // Prints 100 } public static void main(String[] args) { int myNumber = 5; changeNumber(myNumber); System.out.println(\"Outside function: \" + myNumber); // Still prints 5 }\n}\nWhat happens: Java copies the value 5 and gives it to the function. The function changes its copy to 100, but the original myNumber remains 5.These include: String, Arrays, ArrayList, custom objects, etc.public class Example { public static void changeArray(int[] arr) { arr[0] = 999; // This changes the original array System.out.println(\"Inside function: \" + arr[0]); // Prints 999 } public static void main(String[] args) { int[] myArray = {1, 2, 3}; changeArray(myArray); System.out.println(\"Outside function: \" + myArray[0]); // Prints 999 }\n}\nWhat happens: Java copies the reference (address) to the array, not the array itself. Both the original variable and the function parameter point to the same array in memory.public class StringExample { public static void changeString(String str) { str = \"Changed!\"; // This creates a new string System.out.println(\"Inside function: \" + str); // Prints \"Changed!\" } public static void main(String[] args) { String myString = \"Original\"; changeString(myString); System.out.println(\"Outside function: \" + myString); // Still prints \"Original\" }\n}\nStrings are immutable in Java. When you try to change a string, Java creates a new string object instead of modifying the existing one.Think of it like this:\nPrimitive types: Like giving someone a photocopy of a document. They can write on their copy, but your original stays unchanged.\nObject references: Like giving someone your home address. They can come to your house and rearrange furniture (modify the object), and you'll see the changes when you get home. To modify primitive values: Return the new value from the function.\npublic static int addTen(int num) { return num + 10; // Return the modified value\n} To avoid accidental object modification: Create a copy of the object before passing it.\nint[] copyArray = originalArray.clone();\nsomeFunction(copyArray); // Now original is safe Remember: You can't change what a reference points to from inside a function, but you can change the contents of what it points to. Java always passes copies of values to functions.\nFor primitives: the actual value is copied.\nFor objects: the reference (address) is copied.\nChanges to primitive copies don't affect originals.\nChanges to object contents through copied references do affect originals.\nThis is why primitives seem \"safe\" while objects can be \"modified.\"\nUnderstanding this concept will help you avoid many common bugs and write more predictable Java code!","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Java Passing Values to Functions: A Simple Guide","level":1,"id":"Java_Passing_Values_to_Functions_A_Simple_Guide_0"},{"heading":"What Does \"Passing Values\" Mean?","level":2,"id":"What_Does_\"Passing_Values\"_Mean?_0"},{"heading":"The Golden Rule: Java is Always Pass-by-Value","level":2,"id":"The_Golden_Rule_Java_is_Always_Pass-by-Value_0"},{"heading":"Two Types of Data in Java","level":2,"id":"Two_Types_of_Data_in_Java_0"},{"heading":"Primitive Types (Simple Values)","level":3,"id":"Primitive_Types_(Simple_Values)_0"},{"heading":"Object References (Complex Values)","level":3,"id":"Object_References_(Complex_Values)_0"},{"heading":"The Key Difference","level":2,"id":"The_Key_Difference_0"},{"heading":"Common Example: Strings","level":2,"id":"Common_Example_Strings_0"},{"heading":"Why strings behave like primitives:","level":3,"id":"Why_strings_behave_like_primitives_0"},{"heading":"Simple Memory Analogy","level":2,"id":"Simple_Memory_Analogy_0"},{"heading":"Practical Tips","level":2,"id":"Practical_Tips_0"},{"heading":"Quick Summary","level":2,"id":"Quick_Summary_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/functionpassingvalues.html","pathToRoot":"..","attachments":[],"createdTime":1752134852440,"modifiedTime":1752134855807,"sourceSize":4508,"sourcePath":"Java/functionPassingValues.md","exportPath":"java/functionpassingvalues.html","showInTree":true,"treeOrder":176,"backlinks":[],"type":"markdown"},"java/instanceof.html":{"title":"Instanceof","icon":"","description":"The instanceof keyword in Java is a binary operator used to determine at runtime whether an object is of a specific type, such as a class, subclass, or interface<a data-tooltip-position=\"top\" aria-label=\"https://www.datacamp.com/doc/java/instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.datacamp.com/doc/java/instanceof\" target=\"_self\">1</a>. It returns a boolean value—true if the object meets the specified type criteria and false otherwise<a data-tooltip-position=\"top\" aria-label=\"https://www.datacamp.com/doc/java/instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.datacamp.com/doc/java/instanceof\" target=\"_self\">1</a>.<br>The operator compares the given object against a type and confirms if the object can safely be cast without causing a runtime exception<a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/instanceof\" target=\"_self\">2</a>. This check is particularly useful in a polymorphic context where an object may come from a hierarchy of classes or implement various interfaces<a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/instanceof\" target=\"_self\">2</a>. It also handles null values gracefully, returning false when the reference is null<a data-tooltip-position=\"top\" aria-label=\"https://www.w3schools.com/java/ref_keyword_instanceof.asp\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/ref_keyword_instanceof.asp\" target=\"_self\">4</a>.The syntax for using instanceof is very straightforward:javaobject instanceof TypeName\nobject: the reference being evaluated. <br>TypeName: the class or interface against which the object is being tested<a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/instanceof\" target=\"_self\">2</a>.<br>\nIf the object is non-null and its type is either the specified type or a subtype thereof, the expression evaluates to true<a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/instanceof\" target=\"_self\">2</a>. The following example demonstrates a simple type check with a string:javapublic class InstanceofExample { public static void main(String[] args) { String text = \"Hello, World!\"; if (text instanceof String) { System.out.println(\"text is a String\"); } else { System.out.println(\"text is not a String\"); } } }<br>In this example, the instanceof operator confirms that text is indeed a String, so the condition evaluates to true<a data-tooltip-position=\"top\" aria-label=\"https://www.datacamp.com/doc/java/instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.datacamp.com/doc/java/instanceof\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/instanceof\" target=\"_self\">2</a>.Consider an example with inheritance, where an object of a subclass is also an instance of its superclass:javaclass Animal { } class Dog extends Animal { } public class InheritanceExample { public static void main(String[] args) { Dog dog = new Dog(); System.out.println(dog instanceof Dog); // Prints true System.out.println(dog instanceof Animal); // Prints true because Dog extends Animal } }<br>Here, the dog object passes both type checks because it belongs to the subclass Dog and, by inheritance, the superclass Animal<a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/instanceof\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.simplilearn.com/tutorials/java-tutorial/instanceof-in-java\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.simplilearn.com/tutorials/java-tutorial/instanceof-in-java\" target=\"_self\">3</a>.The operator also works well with interfaces:javainterface Vehicle { } class Car implements Vehicle { } public class InterfaceExample { public static void main(String[] args) { Car car = new Car(); System.out.println(car instanceof Vehicle); // Returns true since Car implements Vehicle } }<br>Since Car implements the Vehicle interface, the instanceof check confirms that car is a Vehicle<a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/instanceof\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.w3schools.com/java/ref_keyword_instanceof.asp\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/ref_keyword_instanceof.asp\" target=\"_self\">4</a>.Using instanceof before casting an object can prevent ClassCastException:javapublic class DowncastingExample { public static void main(String[] args) { Object obj = \"Hello, World!\"; if (obj instanceof String) { String safeString = (String) obj; System.out.println(\"Downcasting successful: \" + safeString); } } }<br>This example checks if obj is a String before performing the cast, ensuring the operation is safe<a data-tooltip-position=\"top\" aria-label=\"https://www.datacamp.com/doc/java/instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.datacamp.com/doc/java/instanceof\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.tpointtech.com/downcasting-with-instanceof-operator\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tpointtech.com/downcasting-with-instanceof-operator\" target=\"_self\">5</a>.With more modern versions of Java, pattern matching with instanceof allows developers to streamline type checks and casts:javapublic class PatternMatchingExample { public static void main(String[] args) { Object obj = \"Pattern Matching in Java\"; if (obj instanceof String s) { System.out.println(\"String length: \" + s.length()); } } }<br>This syntax not only checks whether obj is a String but also directly casts it to a new variable s for further use<a data-tooltip-position=\"top\" aria-label=\"https://docs.oracle.com/en/java/javase/14/language/pattern-matching-instanceof-operator.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.oracle.com/en/java/javase/14/language/pattern-matching-instanceof-operator.html\" target=\"_self\">9</a>.<br>Using instanceof is a robust way to maintain type safety, especially when dealing with polymorphic collections of objects or when downcasting<a data-tooltip-position=\"top\" aria-label=\"https://study.com/academy/lesson/how-to-use-instanceof-operator-in-java.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://study.com/academy/lesson/how-to-use-instanceof-operator-in-java.html\" target=\"_self\">7</a>. Although it offers a direct method for type verification, overusing instanceof may sometimes signal a design where polymorphism could be leveraged more effectively<a data-tooltip-position=\"top\" aria-label=\"https://www.baeldung.com/java-instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.baeldung.com/java-instanceof\" target=\"_self\">8</a>. Additionally, since the operator returns false for null values, it provides a built-in safeguard against null pointer exceptions during type checking<a data-tooltip-position=\"top\" aria-label=\"https://www.datacamp.com/doc/java/instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.datacamp.com/doc/java/instanceof\" target=\"_self\">1</a>.<br>In summary, the instanceof operator is an essential tool in Java programming that enables runtime type verification, safe casting, and better management of polymorphic behavior. Its usage helps to prevent runtime errors while facilitating clearer, more reliable code design<a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/instanceof\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/instanceof\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://stackoverflow.com/questions/7526817/use-of-instanceof-in-java\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackoverflow.com/questions/7526817/use-of-instanceof-in-java\" target=\"_self\">6</a>.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.datacamp.com/doc/java/instanceof\" target=\"_self\">https://www.datacamp.com/doc/java/instanceof</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/instanceof\" target=\"_self\">https://www.programiz.com/java-programming/instanceof</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.simplilearn.com/tutorials/java-tutorial/instanceof-in-java\" target=\"_self\">https://www.simplilearn.com/tutorials/java-tutorial/instanceof-in-java</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/ref_keyword_instanceof.asp\" target=\"_self\">https://www.w3schools.com/java/ref_keyword_instanceof.asp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tpointtech.com/downcasting-with-instanceof-operator\" target=\"_self\">https://www.tpointtech.com/downcasting-with-instanceof-operator</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackoverflow.com/questions/7526817/use-of-instanceof-in-java\" target=\"_self\">https://stackoverflow.com/questions/7526817/use-of-instanceof-in-java</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://study.com/academy/lesson/how-to-use-instanceof-operator-in-java.html\" target=\"_self\">https://study.com/academy/lesson/how-to-use-instanceof-operator-in-java.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.baeldung.com/java-instanceof\" target=\"_self\">https://www.baeldung.com/java-instanceof</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.oracle.com/en/java/javase/14/language/pattern-matching-instanceof-operator.html\" target=\"_self\">https://docs.oracle.com/en/java/javase/14/language/pattern-matching-instanceof-operator.html</a>\n<br>Answer from Perplexity: <a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">pplx.ai/share</a>\nhi","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Overview","level":2,"id":"Overview_0"},{"heading":"Syntax and Behavior","level":2,"id":"Syntax_and_Behavior_0"},{"heading":"Examples","level":2,"id":"Examples_0"},{"heading":"Basic Usage","level":2,"id":"Basic_Usage_0"},{"heading":"Inheritance Check","level":2,"id":"Inheritance_Check_0"},{"heading":"Interface Check","level":2,"id":"Interface_Check_0"},{"heading":"Safe Downcasting","level":2,"id":"Safe_Downcasting_0"},{"heading":"Pattern Matching (Java 14+)","level":2,"id":"Pattern_Matching_(Java_14+)_0"},{"heading":"Best Practices and Considerations","level":2,"id":"Best_Practices_and_Considerations_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/instanceof.html","pathToRoot":"..","attachments":[],"createdTime":1748441960393,"modifiedTime":1748442787540,"sourceSize":7016,"sourcePath":"Java/Instanceof.md","exportPath":"java/instanceof.html","showInTree":true,"treeOrder":177,"backlinks":["java/classes.html"],"type":"markdown"},"java/interfaces.html":{"title":"Interfaces","icon":"","description":"Java's object-oriented nature is built on several key concepts, with inheritance and interfaces being fundamental pillars. Let's explore these concepts in detail.Inheritance is a powerful concept that allows a new class to acquire (inherit) properties and behaviors from an existing class. This promotes code reusability and establishes a relationship between classes.Terminology:\nSuperclass (Parent class): The class being inherited from Subclass (Child class): The class that inherits from the superclass To create inheritance, we use the extends keyword:class Vehicle { protected String brand = \"Ford\"; public void honk() { System.out.println(\"Tuut, tuut!\"); }\n} class Car extends Vehicle { private String modelName = \"Mustang\"; public static void main(String[] args) { Car myCar = new Car(); myCar.honk(); // Inherited from Vehicle System.out.println(myCar.brand + \" \" + myCar.modelName); }\n}\n1. Single Inheritance\nA class inherits from only one superclass.class Animal { void eat() { System.out.println(\"I can eat\"); }\n} class Dog extends Animal { void bark() { System.out.println(\"I can bark\"); }\n}\n2. Multi-level Inheritance\nA class inherits from a class, which in turn inherits from another class.class Animal { void eat() { System.out.println(\"I can eat\"); }\n} class Dog extends Animal { void bark() { System.out.println(\"I can bark\"); }\n} class Labrador extends Dog { void color() { System.out.println(\"I am brown\"); }\n}\n3. Hierarchical Inheritance\nMultiple classes inherit from a single superclass.class Animal { void eat() { System.out.println(\"I can eat\"); }\n} class Dog extends Animal { void bark() { System.out.println(\"I can bark\"); }\n} class Cat extends Animal { void meow() { System.out.println(\"I can meow\"); }\n} Note: Java does not support multiple inheritance (where a class inherits from multiple classes) directly through classes to avoid the \"diamond problem.\" However, it can be achieved using interfaces.\nThe protected access modifier is particularly important in inheritance:class Animal { protected String name; protected void display() { System.out.println(\"I am an animal.\"); }\n} class Dog extends Animal { public void getInfo() { System.out.println(\"My name is \" + name); // Accessing protected field }\n}\nIn this example, the protected members can be accessed by the subclass.An interface is a completely abstract class that defines a contract for classes to implement. It contains method signatures (without implementations) and constants.interface Animal { public void animalSound(); // interface method (no body) public void sleep(); // interface method (no body)\n} class Pig implements Animal { public void animalSound() { System.out.println(\"The pig says: wee wee\"); } public void sleep() { System.out.println(\"Zzz\"); }\n} Methods in interfaces are implicitly public and abstract\nFields are implicitly public, static, and final\nInterfaces cannot be instantiated\nA class can implement multiple interfaces\nAn interface can extend another interface Total Abstraction: Interfaces help achieve complete abstraction by hiding implementation details\nMultiple Inheritance: Java allows a class to implement multiple interfaces, overcoming the limitation of single inheritance\nLoose Coupling: Interfaces reduce dependencies between components of a system\nHere's a practical example of using an interface to calculate areas:interface Polygon { void getArea(int length, int breadth);\n} class Rectangle implements Polygon { public void getArea(int length, int breadth) { System.out.println(\"The area of the rectangle is \" + (length * breadth)); }\n} class Main { public static void main(String[] args) { Rectangle r1 = new Rectangle(); r1.getArea(5, 6); // Output: The area of the rectangle is 30 }\n}\nA class can implement multiple interfaces, which is how Java achieves a form of multiple inheritance:interface FirstInterface { public void myMethod();\n} interface SecondInterface { public void myOtherMethod();\n} class DemoClass implements FirstInterface, SecondInterface { public void myMethod() { System.out.println(\"Implementation of first method\"); } public void myOtherMethod() { System.out.println(\"Implementation of second method\"); }\n}\nSince Java 8, interfaces can have default methods with implementations:interface Polygon { void getArea(); // default method default void getSides() { System.out.println(\"I can get sides of a polygon.\"); }\n} class Rectangle implements Polygon { public void getArea() { int length = 6; int breadth = 5; System.out.println(\"The area of the rectangle is \" + (length * breadth)); } // Optional: override the default method public void getSides() { System.out.println(\"I have 4 sides.\"); }\n} Inheritance is used when there is an \"is-a\" relationship (a Car is a Vehicle) Interfaces are used when there is a \"can-do\" relationship (a Bird can fly) Use inheritance for code reusability of existing implementations Use interfaces to define capabilities that multiple unrelated classes might implement Understanding these concepts is fundamental to writing well-structured, maintainable Java code. They provide powerful mechanisms for code organization and reuse that are core to object-oriented programming.Let me know if you’d like to split this into separate Obsidian notes or add tags/summaries!","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Inheritance in Java","level":2,"id":"Inheritance_in_Java_0"},{"heading":"Types of Inheritance in Java","level":3,"id":"Types_of_Inheritance_in_Java_0"},{"heading":"Access Modifiers in Inheritance","level":3,"id":"Access_Modifiers_in_Inheritance_0"},{"heading":"Interfaces in Java","level":2,"id":"Interfaces_in_Java_0"},{"heading":"Key Characteristics of Interfaces","level":3,"id":"Key_Characteristics_of_Interfaces_0"},{"heading":"Why Use Interfaces?","level":3,"id":"Why_Use_Interfaces?_0"},{"heading":"Example of Interface Implementation","level":3,"id":"Example_of_Interface_Implementation_0"},{"heading":"Multiple Interfaces","level":3,"id":"Multiple_Interfaces_0"},{"heading":"Default Methods in Interfaces","level":3,"id":"Default_Methods_in_Interfaces_0"},{"heading":"Inheritance vs. Interfaces","level":2,"id":"Inheritance_vs._Interfaces_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/interfaces.html","pathToRoot":"..","attachments":[],"createdTime":1748441931557,"modifiedTime":1748441931561,"sourceSize":6383,"sourcePath":"Java/Interfaces.md","exportPath":"java/interfaces.html","showInTree":true,"treeOrder":178,"backlinks":[],"type":"markdown"},"java/interfaces-and-lambda.html":{"title":"Interfaces and Lambda","icon":"","description":"An interface in Java is a completely abstract class that groups related methods with empty bodies. Interfaces provide a way to achieve abstraction and support multiple inheritance, which regular classes cannot do.\nInterface methods are by default abstract and public.\nInterface attributes are by default public, static, and final.\nInterfaces cannot contain constructors (as they cannot be used to create objects).\nInterface methods do not have a body – the body is provided by the implementing class.\nWhen implementing an interface, you must override all of its methods.\nHere's the basic syntax for declaring an interface:interface Animal { void eat(); public void travel();\n}\nTo implement an interface, use the implements keyword:class Pig implements Animal { public void animalSound() { System.out.println(\"The pig says: wee wee\"); } public void sleep() { System.out.println(\"Zzz\"); }\n}\nJava supports implementing multiple interfaces, which enables multiple inheritance:interface FirstInterface { public void myMethod();\n} interface SecondInterface { public void myOtherMethod();\n} class DemoClass implements FirstInterface, SecondInterface { public void myMethod() { System.out.println(\"Some text..\"); } public void myOtherMethod() { System.out.println(\"Some other text...\"); }\n}\nA functional interface is an interface that specifies only one abstract method. Also known as Single Abstract Method (SAM) interfaces, they were introduced with JDK 8. Functional interfaces enable the use of lambda expressions and provide concise, readable code for functional programming.The @FunctionalInterface annotation can be used to declare a functional interface, which results in an error if the contract is violated.@FunctionalInterface\ninterface MyInterface { int test(int n);\n}\nImportant Note: If an interface declares an abstract method overriding one of the public methods of Object class, that does not count towards the interface's abstract method count.Java provides several built-in functional interfaces:\nFunction: Represents a function that takes one argument and returns a result.\nConsumer: Represents an operation that accepts a single input argument and returns no result.\nPredicate: Represents a predicate (boolean-valued function) of one argument.\nSupplier: Represents a supplier of results.\nRunnable: Contains only the run() method for thread execution.\nComparable: Contains only the compareTo() method for object comparison.\nA lambda expression is essentially an anonymous (unnamed) method used to implement a method defined by a functional interface. Lambda expressions are also commonly referred to as closures. They provide a clear and concise way to represent one method interface using an expression.Lambda expressions introduce a new operator (-&gt;) called the lambda operator or arrow operator. The basic syntax is:(parameter list) -&gt; lambda body\nExamples of different parameter configurations:\nNo arguments: () -&gt; { System.out.println(\"No argument\"); }\nSingle argument: (int arg) -&gt; { System.out.println(\"One argument : \" + arg); }\nMultiple arguments: (int arg1, String arg2) -&gt; { System.out.println(\"Multiple Arguments\"); } Argument List: Lambda expressions can contain zero or more arguments.\nArgument types can be inferred: (int a) and (a) are equivalent.\nCannot mix inferred and declared types: (int arg1, arg2) is invalid. Lambda Body: (This would vary based on the specific function being implemented)\n// Example\n// Assuming a functional interface like: interface MyFunc { void doSomething(int x); }\n// The lambda would be: MyFunc myFunc = x -&gt; System.out.println(x); Conciseness: Lambda expressions often allow for more compact code compared to traditional anonymous classes.\nReadability: They can improve code readability by explicitly showing the action being performed.\nFunctional Programming: Enable more functional programming paradigms in Java. <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/bf093642-f114-4e38-8d93-acf7caa3fc40/Interfaces-and-Lambda-Expressions.pptx\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/bf093642-f114-4e38-8d93-acf7caa3fc40/Interfaces-and-Lambda-Expressions.pptx</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_interface.asp\" target=\"_self\">https://www.w3schools.com/java/java_interface.asp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.linkedin.com/pulse/functional-interfaces-java-alphadot-tech\" target=\"_self\">https://www.linkedin.com/pulse/functional-interfaces-java-alphadot-tech</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.datacamp.com/doc/java/interface\" target=\"_self\">https://www.datacamp.com/doc/java/interface</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_lambda.asp\" target=\"_self\">https://www.w3schools.com/java/java_lambda.asp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.shiksha.com/online-courses/articles/java-lambda-expression/\" target=\"_self\">https://www.shiksha.com/online-courses/articles/java-lambda-expression/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/interfaces\" target=\"_self\">https://www.programiz.com/java-programming/interfaces</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scaler.com/topics/functional-interface-in-java/\" target=\"_self\">https://www.scaler.com/topics/functional-interface-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/lambda-expression\" target=\"_self\">https://www.programiz.com/java-programming/lambda-expression</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.brilworks.com/blog/lambda-expression-java/\" target=\"_self\">https://www.brilworks.com/blog/lambda-expression-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://en.wikipedia.org/wiki/Interface_(Java)\" target=\"_self\">https://en.wikipedia.org/wiki/Interface_(Java)</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.oracle.com/javase/tutorial/java/concepts/interface.html\" target=\"_self\">https://docs.oracle.com/javase/tutorial/java/concepts/interface.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.oracle.com/javase/tutorial/java/IandI/createinterface.html\" target=\"_self\">https://docs.oracle.com/javase/tutorial/java/IandI/createinterface.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_interfaces.htm\" target=\"_self\">https://www.tutorialspoint.com/java/java_interfaces.htm</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html\" target=\"_self\">https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dev.java/learn/lambdas/\" target=\"_self\">https://dev.java/learn/lambdas/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.shiksha.com/online-courses/articles/difference-between-abstract-class-and-interface/\" target=\"_self\">https://www.shiksha.com/online-courses/articles/difference-between-abstract-class-and-interface/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=tj5sLSFjVj4\" target=\"_self\">https://www.youtube.com/watch?v=tj5sLSFjVj4</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.simplilearn.com/tutorials/java-tutorial/java-lambda-expression\" target=\"_self\">https://www.simplilearn.com/tutorials/java-tutorial/java-lambda-expression</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.nagarro.com/en/blog/post/26/lambda-expressions-in-java-8-why-and-how-to-use-them\" target=\"_self\">https://www.nagarro.com/en/blog/post/26/lambda-expressions-in-java-8-why-and-how-to-use-them</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.hackerrank.com/challenges/java-lambda-expressions/problem\" target=\"_self\">https://www.hackerrank.com/challenges/java-lambda-expressions/problem</a>\n<br>Answer from Perplexity: <a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">pplx.ai/share</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Interfaces in Java","level":1,"id":"Interfaces_in_Java_0"},{"heading":"<strong>Basic Interface Characteristics</strong>","level":2,"id":"**Basic_Interface_Characteristics**_0"},{"heading":"<strong>Interface Declaration and Implementation</strong>","level":2,"id":"**Interface_Declaration_and_Implementation**_0"},{"heading":"<strong>Abstract Classes vs Interfaces</strong>","level":2,"id":"**Abstract_Classes_vs_Interfaces**_0"},{"heading":"<strong>Multiple Interface Implementation</strong>","level":2,"id":"**Multiple_Interface_Implementation**_0"},{"heading":"Functional Interfaces","level":1,"id":"Functional_Interfaces_0"},{"heading":"<strong>Definition and Purpose</strong>","level":2,"id":"**Definition_and_Purpose**_0"},{"heading":"<strong>@FunctionalInterface Annotation</strong>","level":2,"id":"**@FunctionalInterface_Annotation**_0"},{"heading":"<strong>Built-in Functional Interfaces</strong>","level":2,"id":"**Built-in_Functional_Interfaces**_0"},{"heading":"Lambda Expressions","level":1,"id":"Lambda_Expressions_0"},{"heading":"<strong>Definition and Purpose</strong>","level":2,"id":"**Definition_and_Purpose**_1"},{"heading":"<strong>Lambda Operator and Syntax</strong>","level":2,"id":"**Lambda_Operator_and_Syntax**_0"},{"heading":"<strong>Lambda Expression Structure</strong>","level":2,"id":"**Lambda_Expression_Structure**_0"},{"heading":"<strong>Benefits of using Lambda Expressions</strong>","level":2,"id":"**Benefits_of_using_Lambda_Expressions**_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/interfaces-and-lambda.html","pathToRoot":"..","attachments":[],"createdTime":1748364418871,"modifiedTime":1748416203234,"sourceSize":8185,"sourcePath":"Java/Interfaces and Lambda.md","exportPath":"java/interfaces-and-lambda.html","showInTree":true,"treeOrder":179,"backlinks":[],"type":"markdown"},"java/introduction-to-java.html":{"title":"Introduction To Java","icon":"","description":"Java is a popular programming language, created in 1995 by <a data-tooltip-position=\"top\" aria-label=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://en.wikipedia.org/wiki/Sun_Microsystems\" target=\"_self\">Sun Microsystems</a> James Gosling\nMobile applications\nDesktop applications\nWeb applications\nWeb server and Application server Games\nDatabase connection\nAnd much more ! Java Virtual Machine (JVM): The JVM executes Java bytecode, enabling platform independence. It includes: Class Loader\nBytecode Verifier\nExecution Engine (Interpreter, Just-In-Time Compiler, and Garbage Collector) Java Runtime Environment (JRE): The JRE provides the minimum requirements to run Java applications, including: JVM\nCore Java libraries\nJava Plug-in\nJava Web Start Java Development Kit (JDK): The JDK offers tools for developing, compiling, debugging, and running Java applications. It includes: JRE\nDevelopment tools (javac, jdb, jar, javadoc)\nDocumentation Java is a versatile and powerful programming language with numerous key features that contribute to its popularity and widespread use. Here are some of the most important features of Java:Java is fundamentally object-oriented, revolving around the concept of objects and classes[1][2]. This design promotes:\nModularity and reusability of code\nClear structure in code organization\nSupport for key OOP concepts such as inheritance, polymorphism, abstraction, and encapsulation[1]\nOne of Java's most significant features is its platform independence, often described as \"write once, run anywhere\" (WORA)[3][5]. This means:\nJava code can be compiled into bytecode that runs on any device with a Java Virtual Machine (JVM)\nApplications can be developed on one platform and run on any other without modification\nJava is designed to be simple and user-friendly[1][4]:\nIts syntax is clear and concise\nIt omits complex features like pointers and operator overloading\nJava includes a comprehensive standard library for common programming tasks\nJava prioritizes security in its design[1][5]:\nIt lacks explicit pointers, reducing memory-related vulnerabilities\nThe JVM provides a secure runtime environment\nJava includes built-in security features and access modifiers\nJava is known for its reliability and robustness[1][4]:\nIt includes automatic garbage collection for memory management\nException handling mechanisms help manage and recover from errors\nStrong type checking helps catch errors early in development\nJava supports concurrent execution through multithreading[1][4]:\nAllows multiple threads to run simultaneously within a program\nEnhances performance and responsiveness in applications\nParticularly useful for games, animations, and real-time applications\nDespite being an interpreted language, Java offers high performance[4][6]:\nUses Just-In-Time (JIT) compilation to convert bytecode into native machine code\nThe JVM optimizes frequently executed code paths\nSupports multithreading and multiprocessing for efficient resource utilization\nJava boasts a comprehensive set of APIs and a vast ecosystem[4]:\nIncludes APIs for various purposes such as networking, database connectivity, and GUI development\nOffers numerous frameworks and libraries for different application domains\nThese features collectively make Java a powerful, versatile, and widely-adopted programming language suitable for developing a diverse range of applications, from web services to mobile apps and enterprise systems[3][6]. ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Used For:","level":3,"id":"Used_For_0"},{"heading":"Java Components","level":1,"id":"Java_Components_0"},{"heading":"Key Features of Java","level":1,"id":"Key_Features_of_Java_0"},{"heading":"1. Object-Oriented","level":2,"id":"1._Object-Oriented_0"},{"heading":"2. Platform Independence","level":2,"id":"2._Platform_Independence_0"},{"heading":"3. Simplicity and Ease of Use","level":2,"id":"3._Simplicity_and_Ease_of_Use_0"},{"heading":"4. Security","level":2,"id":"4._Security_0"},{"heading":"5. Robustness","level":2,"id":"5._Robustness_0"},{"heading":"6. Multithreading","level":2,"id":"6._Multithreading_0"},{"heading":"7. High Performance","level":2,"id":"7._High_Performance_0"},{"heading":"8. Rich API and Ecosystem","level":2,"id":"8._Rich_API_and_Ecosystem_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/introduction-to-java.html","pathToRoot":"..","attachments":[],"createdTime":1748441320691,"modifiedTime":1748441320694,"sourceSize":3781,"sourcePath":"Java/Introduction To Java.md","exportPath":"java/introduction-to-java.html","showInTree":true,"treeOrder":180,"backlinks":[],"type":"markdown"},"java/java-io.html":{"title":"Java IO","icon":"","description":"This document outlines the key concepts covered in a Java I/O presentation. Java I/O is used to process input and produce output. The concept utilizes streams to enhance I/O operations. A practical example is typing a username and password into a login form (input) and displaying \"Login Successful\" on the screen (output).Java provides two main packages for I/O operations:\njava.io: (Classic I/O) - Provides fundamental I/O classes.\njava.nio: (New I/O) - Introduced in Java 1.4. Offers faster and more scalable I/O capabilities.\nThe presentation covers these fundamental operations:\nReading from a File: Accessing data from files stored on the local disk.\nWriting to a File: Saving data to existing files on the system.\nJava utilizes different types of streams for handling varying data formats:\nByte Streams: Used for binary data. Classes include InputStream and OutputStream.\nCharacter Streams: Used for text data (characters). Classes include Reader and Writer.\nComparison Table:BufferedReader is used for efficient reading of characters, arrays, and lines. It is recommended when:\nReading large files.\nReading data line-by-line.\nPerformance is critical.\nComparison: FileReader vs. BufferedReaderWhat is Serialization? Serialization is the process of converting a Java object into a stream of bytes for:\nSaving to a file.\nSending over a network.\nStoring in a database.\nDeserialization is the reverse process: converting a byte stream back into a Java object.Rules of Serialization:\nThe class must implement the Serializable interface.\nAll fields must be serializable (or marked transient to prevent serialization).\nserialVersionUID is optional but recommended for version control during deserialization.\nUse Cases:What Not to Serialize:\nFields marked transient.\nSensitive data (unless encrypted).\nClasses that do not implement Serializable (e.g., file handles, sockets).\nAnalogy: Serialization is like packing a suitcase (object → byte stream), and deserialization is like unpacking it (byte stream → object).\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/bc156812-4e6c-4ca9-9ce9-7920ffac1696/Input-output-ppt.pptx\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/11353356/bc156812-4e6c-4ca9-9ce9-7920ffac1696/Input-output-ppt.pptx</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.slideshare.net/slideshow/input-output-in-java/92381771\" target=\"_self\">https://www.slideshare.net/slideshow/input-output-in-java/92381771</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.nagarjunauniversity.ac.in/departments/engg/cse/ENGGCSE/img/unit5%20java.pdf\" target=\"_self\">https://www.nagarjunauniversity.ac.in/departments/engg/cse/ENGGCSE/img/unit5%20java.pdf</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scaler.com/topics/java/serialization-in-java/\" target=\"_self\">https://www.scaler.com/topics/java/serialization-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/basic-input-output\" target=\"_self\">https://www.programiz.com/java-programming/basic-input-output</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.slideshare.net/slideshow/java-file-input-output-concepts/233512973\" target=\"_self\">https://www.slideshare.net/slideshow/java-file-input-output-concepts/233512973</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dev.java/learn/java-io/intro/\" target=\"_self\">https://dev.java/learn/java-io/intro/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.javaguides.net/2018/07/overview-of-java-io.html\" target=\"_self\">https://www.javaguides.net/2018/07/overview-of-java-io.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://cse.iitkgp.ac.in/~dsamanta/java/ch8.htm\" target=\"_self\">https://cse.iitkgp.ac.in/~dsamanta/java/ch8.htm</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_files_io.htm\" target=\"_self\">https://www.tutorialspoint.com/java/java_files_io.htm</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_serialization.htm\" target=\"_self\">https://www.tutorialspoint.com/java/java_serialization.htm</a>\nThis restructured format should be much more readable and easier to understand. I'm confident this accurately represents the key concepts from the provided text.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Java I/O: Key Concepts","level":2,"id":"Java_I/O_Key_Concepts_0"},{"heading":"1. Core Packages","level":3,"id":"1._Core_Packages_0"},{"heading":"2. Reading and Writing Data","level":3,"id":"2._Reading_and_Writing_Data_0"},{"heading":"3. Streams (Byte Streams &amp; Character Streams)","level":3,"id":"3._Streams_(Byte_Streams_&_Character_Streams)_0"},{"heading":"4. Efficient Reading with BufferedReader","level":3,"id":"4._Efficient_Reading_with_BufferedReader_0"},{"heading":"5. Object Serialization","level":3,"id":"5._Object_Serialization_0"},{"heading":"6. Summary Table","level":3,"id":"6._Summary_Table_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/java-io.html","pathToRoot":"..","attachments":[],"createdTime":1748074743292,"modifiedTime":1748361278793,"sourceSize":6021,"sourcePath":"Java/Java IO.md","exportPath":"java/java-io.html","showInTree":true,"treeOrder":181,"backlinks":[],"type":"markdown"},"java/java-syntax.html":{"title":"Java Syntax","icon":"","description":"public class Main{ public static void main(String[] args) { system.out.println(\"Hello Word\"); }\n} Every line of code in Java must be inside a class.\nClass name should always start with an upper case letter.\nHere class name is Main.\nThe name of the java file&nbsp;must match&nbsp;the class name.\nJava file has extension .java\nEvery program must contain the main method.\npublic class Main { public: This is an access modifier.\nclass: This keyword is used to declare a class in Java.\nMain: This is the name of the class.\npublic static void main(String[] args) { public: This is an access modifier.\nstatic: This means that the method belongs to the class rather than instances of the class. It can be called without creating an object of the class. <a data-href=\"more about static\" href=\"java/more-about-static.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">more about static</a>\nvoid: This indicates that the method does not return any value. Also the default return type is int.\nmain: This is a special name recognized by the JVM as the entry point for any standalone Java application. When you run a Java program, execution starts from this method.\nString[] args: This parameter allows you to pass command-line arguments to your program.\nsystem.out.println(\"hello Word\"); System is the built in java class that contain useful members such as out which is short for \"output\". &nbsp;The&nbsp;println()&nbsp;method, short for \"print line\", is used to print a value to the screen (or a file).\nEach code statement must end with a semicolon (;).\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["java/more-about-static.html"],"author":"","coverImageURL":"","fullURL":"java/java-syntax.html","pathToRoot":"..","attachments":[],"createdTime":1748441320765,"modifiedTime":1748441320768,"sourceSize":1548,"sourcePath":"Java/Java Syntax.md","exportPath":"java/java-syntax.html","showInTree":true,"treeOrder":182,"backlinks":[],"type":"markdown"},"java/javaa.html":{"title":"Javaa","icon":"","description":"StringsThis, Final, Static, SuperArray and EnumConstructor Channing&nbsp;MCQsUsefullThe program will result in a compile-time error\nHere's why:\npublic keyword inside a method: In Java, access modifiers like public, private, and protected are not allowed for local variables declared inside methods. They are only applicable for class members (instance variables, static variables, and methods). The public int x = 10; line is attempting to declare a local variable x with public access, which is illegal. Because of this error, the code will not compile, and thus there will be no output. To fix this, remove the public keyword.InstanceofThe program will result in a compile-time error because the local variable x in the main method is declared but not initialized. Although there is a static variable x declared at the class level with a default value of 0, the local declaration of x inside the main method shadows the static one. In Java, local variables do not receive a default value and must be explicitly initialized before they are used. Since the local x is uninitialized when it is printed, the compiler will throw an error indicating that the variable might not have been initialized1.In summary, the error occurs due to the uninitialized local variable overshadowing the class variable, leading to a compilation failure.Okay, based on the information in the provided document and your code, here's the breakdown:\nClass Variable x: You have a static (class) variable x declared outside the main method: static int x;. Since it's a static variable of type int, it's automatically initialized to 0 when the class is loaded. Local Variable x: Inside the main method, you declare another variable named x: int x;. This is a local variable that shadows the class variable x within the scope of the main method. Critically, this local variable is not initialized. System.out.print(VariableDemo.x);: You are specifically printing the value of the class variable x by referring to it as VariableDemo.x. Because you're explicitly accessing the class variable, the local variable x is irrelevant here. Therefore, the output of the program will be:text0Which of these coding types is used for data type characters in Java?\na) ASCII\nb) ISO-LATIN-1\nc) UNICODE\nd) None of the mentioned\nView AnswerAnswer: c\nExplanation: Unicode defines fully international character set that can represent all the characters found in all human languages. Its range is from 0 to 65536.Which one is a valid declaration of a boolean?\na) boolean b1 = 1;\nb) boolean b2 = ‘false’;\nc) boolean b3 = false;\nd) boolean b4 = ‘true’\nView AnswerAnswer: c\nExplanation: Boolean can only be assigned true or false literals.What will be the output of the following Java code snippet?class A\n{}enum Enums extends A\n{\nABC, BCD, CDE, DEF;\n}\na) Runtime Error\nb) Compilation Error\nc) It runs successfully\nd) EnumNotDefined Exception\nView AnswerAnswer: b\nExplanation: Enum types cannot extend classWhich of these occupy first 0 to 127 in Unicode character set used for characters in Java?\na) ASCII\nb) ISO-LATIN-1\nc) None of the mentioned\nd) ASCII and ISO-LATIN1\nView AnswerAnswer: d\nExplanation: First 0 to 127 character set in Unicode are same as those of ISO-LATIN-1 and ASCII.What will be the output of the following code snippets?⮚byte b = 30; &nbsp; System.out.println(~b);⮚byte b = -53; &nbsp; System.out.println(~b);⮚System.out.println(34&gt;&gt;3);⮚System.out.println(-34&gt;&gt;3);⮚System.out.println(34&lt;&lt;3);Let's analyze each code snippet and determine the output:\nbyte b = 30; System.out.println(~b);\nOutput: -31\nThe ~ operator performs a bitwise NOT operation. For a byte (8 bits), 30 is 00011110 in binary. Applying ~ inverts all bits, resulting in 11100001, which is -31 in decimal1.\nbyte b = -53; System.out.println(~b);\nOutput: 52\n-53 in binary (using two's complement) is 11001011. Applying ~ inverts all bits, resulting in 00110100, which is 52 in decimal1.\nSystem.out.println(34&gt;&gt;3);\nOutput: 4\n34 in binary is 00100010. Right-shifting by 3 positions gives 00000100, which is 4 in decimal1.\nSystem.out.println(-34&gt;&gt;3);\nOutput: -5\n-34 in binary (using two's complement) is 11011110. Right-shifting by 3 positions (preserving the sign bit) gives 11111011, which is -5 in decimal1.\nSystem.out.println(34&lt;&lt;3);\nOutput: 272\n34 in binary is 00100010. Left-shifting by 3 positions gives 100010000, which is 272 in decimal1.\nThese outputs demonstrate the behavior of bitwise NOT (~) and shift operators (&gt;&gt; and &lt;&lt;) in Java, including their effects on signed values.\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/11353356/8146382b-6c94-4dfc-974f-5195a49564c8/04.-Operators.pptx\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/11353356/8146382b-6c94-4dfc-974f-5195a49564c8/04.-Operators.pptx</a>\nLet's analyze the code step-by-step:Code:int x = 10, y = 5; if(x-- &gt; 7 || ++y &lt; 8 ) { System.out.print(x); System.out.print(y); } Initial Values: x = 10, y = 5 Evaluate x-- &gt; 7: x-- uses the post-decrement operator: Current value of x (10) is used for comparison (10 &gt; 7 → true). After comparison, x becomes 9. Short-Circuit OR (||) Behavior: Since the first condition (x-- &gt; 7) is true, the second condition (++y &lt; 8) is not evaluated. Thus, ++y is never executed, and y remains 5. Final Values: x = 9, y = 5 Output: System.out.print(x) → 9 System.out.print(y) → 5 Combined output: 95 95 (First option in the list).\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/11353356/8146382b-6c94-4dfc-974f-5195a49564c8/04.-Operators.pptx\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/11353356/8146382b-6c94-4dfc-974f-5195a49564c8/04.-Operators.pptx</a>\nint x = 10, y = 5;\nif(x- - &gt; 7 || + + y &lt; 8 ){\nSystem.out.print(x);\nSystem.out.print(y);\n}\nA.95B.67C.78D.48E.77F.N.O.TWhat will be the output of the following Java code snippet?enum Enums\n{\nA, B, C;private Enums()\n{ System.out.println(10);\n}\n}public class MainClass\n{\npublic static void main(String[] args)\n{\nEnum en = Enums.B;\n}\n}\na) 10\n10\n10\nb) Compilation Error\nc) 10\n10\nd) Runtime Exception\nView AnswerAnswer: a\nExplanation: The constructor of Enums is called which prints 10.What will be the output of the following Java code snippet?enum Enums\n{\nA, B, C;private Enums()\n{ System.out.println(10);\n}\n}public class MainClass\n{\npublic static void main(String[] args)\n{\nEnum en = Enums.B;\n}\n}\na) 10\n10\n10\nb) Compilation Error\nc) 10\n10\nd) Runtime Exception\nView AnswerAnswer: a\nExplanation: The constructor of Enums is called which prints 10.What will be the output of the following Java program?class output {\npublic static void main(String args[])\n{\ndouble a, b,c;\na = 3.0/0;\nb = 0/4.0;\nc=0/0.0; System.out.println(a); System.out.println(b); System.out.println(c); } }\na) NaN\nb) Infinity\nc) 0.0\nd) all of the mentioned\nView AnswerAnswer: d\nExplanation: For floating point literals, we have constant value to represent (10/0.0) infinity either positive or negative and also have NaN (not a number for undefined like 0/0.0), but for the integral type, we don’t have any constant that’s why we get an arithmetic exception.What will be the output of the following Java code snippet? enum Levels\n{\nprivate TOP,public MEDIUM, protected BOTTOM;\n}\na) Runtime Error\nb) EnumNotDefined Exception\nc) It runs successfully\nd) Compilation Error\nView AnswerAnswer: d\nExplanation: Enum cannot have any modifiers. They are public, static and final by default.In Java, there are multiple ways to get input from the user. The most commonly used method is the Scanner class, but there are other approaches as well depending on the use case. Here's a detailed explanation of the methods:The Scanner class, part of the java.util package, is widely used for reading input from the console. Import the Scanner class:\nimport java.util.Scanner; Create a Scanner object:\nScanner scanner = new Scanner(System.in); Use appropriate methods to read input: nextLine() for strings (reads an entire line).\nnext() for a single word.\nnextInt() for integers.\nnextDouble() for floating-point numbers, etc. <br><img alt=\"TakingInput_scanner_methods.png\" src=\"java/takinginput_scanner_methods.png\" target=\"_self\">]import java.util.Scanner; public class InputExample { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); // Reading a string System.out.print(\"Enter your name: \"); String name = scanner.nextLine(); // Reading an integer System.out.print(\"Enter your age: \"); int age = scanner.nextInt(); // Reading a double System.out.print(\"Enter your height in meters: \"); double height = scanner.nextDouble(); System.out.println(\"Hello, \" + name + \". You are \" + age + \" years old and \" + height + \" meters tall.\"); // Closing the scanner scanner.close(); }\n}\nThe BufferedReader class, part of the java.io package, can also be used to read input. It is faster than Scanner, but it requires additional code to parse data (e.g., converting strings to integers). Import the required classes:\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader; Create a BufferedReader object:\nBufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); Use the readLine() method to read input (always returns a string). import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException; public class BufferedReaderExample { public static void main(String[] args) throws IOException { BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); // Reading a string System.out.print(\"Enter your name: \"); String name = reader.readLine(); // Reading and parsing an integer System.out.print(\"Enter your age: \"); int age = Integer.parseInt(reader.readLine()); System.out.println(\"Hello, \" + name + \". You are \" + age + \" years old.\"); }\n}\nThe Console class, part of the java.io package, is another way to read input. However, it works only in environments where a console is available (e.g., command-line interfaces). It does not work in IDEs like Eclipse or IntelliJ.\nUse the System.console() method to get a reference to the console.\nUse methods like readLine() or readPassword() to read input.\npublic class ConsoleExample { public static void main(String[] args) { java.io.Console console = System.console(); if (console != null) { // Reading a string String name = console.readLine(\"Enter your name: \"); // Reading sensitive data (e.g., password) char[] password = console.readPassword(\"Enter your password: \"); System.out.println(\"Hello, \" + name + \". Your password is safe!\"); } else { System.out.println(\"No console available.\"); } }\n}\nJava programs can also take input directly from command-line arguments provided when running the program.\nPass arguments while executing the program.\nAccess them via the args parameter in the main method.\npublic class CommandLineExample { public static void main(String[] args) { if (args.length &gt; 0) { System.out.println(\"First argument: \" + args[0]); System.out.println(\"Second argument: \" + args[1]); } else { System.out.println(\"No arguments provided.\"); } }\n}\nExecution Example:$ java CommandLineExample John 25\nFirst argument: John\nSecond argument: 25\nFor graphical user interfaces, you can use JavaFX or Swing components like text fields or dialog boxes to get input.import javax.swing.JOptionPane; public class SwingInputExample { public static void main(String[] args) { String name = JOptionPane.showInputDialog(\"Enter your name:\"); JOptionPane.showMessageDialog(null, \"Hello, \" + name); }\n} Use Scanner for general-purpose console-based input.\nUse BufferedReader if performance is critical and you're handling large amounts of data.\nUse Console when working with secure inputs like passwords.\nFor GUI applications, use JavaFX or Swing components.\nBy choosing the right method based on your application's requirements, you can effectively handle user input in Java programs!Taking InputJava SyntaxIntroduction To JavaDefault values\nInteger.parseInt(\"string\")\nInterger.decode(\"string\")\nIssue:\nnextInt()&nbsp;does not consume the newline character (\\n), causing subsequent&nbsp;nextLine()&nbsp;to read an empty string if used afterward. In your code, this isn't directly visible because there's only one&nbsp;nextLine(), but the order of input operations can still cause unexpected behavior depending on the input format. Fix:\nConsume the newline&nbsp;after&nbsp;nextInt()&nbsp;by adding an extra&nbsp;nextLine().\nAdjust variable naming conventions&nbsp;for Java (use camelCase for variables).\nThe final keyword in Java is a non-access modifier used to enforce immutability, restrict inheritance, and prevent unintended modifications. It can be applied to variables, methods, and classes, providing control over code behavior and enhancing security. Below is a detailed breakdown of its usage and implications:Definition: A variable declared as final becomes a constant and cannot be reassigned after initialization236.Initialization:\nMust be initialized either at declaration or within a constructor (for instance variables)7.\nExample:final int MAX_VALUE = 100; // Valid\nfinal String NAME; NAME = \"Java\"; // Valid in constructor\nTypes:\nPrimitive: Value becomes immutable (e.g., final int x = 5;)^9.\nReference: The reference cannot change, but the object’s internal state might (unless the class itself is immutable)^2.\nDefinition: A final method cannot be overridden by subclasses, ensuring consistent behavior across inheritance hierarchies^4^9.Example:Javaclass Parent { public final void display() { System.out.println(\"Parent method\"); }\n}\nclass Child extends Parent { // Compilation error: Cannot override display()\n}\nDefinition: A final class cannot be extended, preventing inheritance entirely.Use Case: Common for utility classes (e.g., String, Integer) to ensure immutability and security.final class UtilityClass { // Class implementation }\n// Error: Cannot inherit from final UtilityClass\nclass SubClass extends UtilityClass {} Immutability: Ensures thread-safe constants and predictable behavior in multi-threaded environments^2^8.\nSecurity: Prevents subclassing or overriding critical methods (e.g., in APIs)^4.\nCode Clarity: Signals design intent (e.g., constants, unmodifiable classes)^4. Constants: Java\npublic static final double PI = 3.14159; Utility Classes: Java\npublic final class MathUtils { private MathUtils() {} // Prevent instantiation\n} Method Security: Java\npublic final void performCriticalAction() { ... } Use uppercase naming for final variables (e.g., MAX_SIZE)^9.\nPrefer final parameters in methods to prevent accidental modifications^2.\nCombine final with static for global constants (e.g., public static final String API_KEY = \"123\";)^8.\nBy leveraging the final keyword, developers can write safer, more maintainable code that adheres to design constraints and reduces runtime errors^2^6.FinalKeyword\nMethods with static keyword Class Methods\nMethods without static keyword Instant Methods\nStatic methods Access Non Static Variables This &amp; Super both are Non Static and cannot be used inside static scope\nThe static keyword in Java is used to create class-level members (variables, methods, blocks, and nested classes) that belong to the class itself rather than individual instances. It optimizes memory usage and enables functionality that operates independently of object creation. Below is a detailed breakdown of its usage:Definition: Shared across all class instances; only one copy exists in memory.Use Cases:\nTrack common properties (e.g., company name for employees)6.\nDefine global constants when combined with final (e.g., public static final double PI = 3.14159;)2.\nclass Employee { static int employeeCount = 0; // Shared by all instances String name; public Employee(String name) { this.name = name; employeeCount++; // Increments for every new object }\n}\nDefinition: Called without instantiating the class.Rules:\nCan only access static variables/methods directly^2.\nCannot use this or super keywords^8.\nclass MathUtils { static int add(int a, int b) { return a + b; // Utility method }\n}\n// Usage: MathUtils.add(5, 3);\nDefinition: Executed once when the class is loaded into memory.Purpose: Initialize static variables or perform setup tasks^9.class Database { static String connection; static { connection = \"jdbc:mysql://localhost:3306/mydb\"; // One-time setup }\n}\nDefinition: Nested classes declared static do not require an outer class instance^8.Use Case: Group utility classes logically within another class.class Outer { static class Nested { void display() { System.out.println(\"Static nested class\"); } }\n}\n// Usage: Outer.Nested nested = new Outer.Nested(); Memory Efficiency: Static members are allocated memory once during class loading^5.\nAccess Syntax: Accessed via ClassName.memberName, not object references^4.\nThread Safety: Static variables are shared across threads and may require synchronization in concurrent environments^2. Utility Classes:\npublic final class StringUtils { private StringUtils() {} // Prevent instantiation public static boolean isEmpty(String s) { return s == null || s.trim().isEmpty(); }\n} Global Constants:\npublic static final String API_KEY = \"12345\"; // Immutable constant Counters/Shared State:\nstatic int requestCount = 0; // Track requests across instances Minimize Static Variables: Overuse can lead to high memory consumption and thread-safety issues^5.\nCombine with final: Ensure immutability for constants (e.g., static final)^2.\nAvoid Static for Object-Specific Logic: Instance methods are preferable for state-dependent operations^8.\nBy leveraging static, developers can optimize memory usage, create utility functions, and enforce shared state across objects, while adhering to Java’s object-oriented principles^3.StaticKeywordStringcompareTo()Stringsplit()StringMethodsStringgetChars()StringConstructorStringConcatStringsThe output of the code in the provided image is false. This happens because of how Java handles string literals versus objects created using the new keyword.String str1 = \"Java\"; // Creates a string literal String str2 = new String(\"Java\"); // Creates a new String object System.out.println(str1 == str2); // Compares references String Literal (str1): When str1 is assigned \"Java\", Java checks the string constant pool to see if \"Java\" already exists. If it does, str1 will reference the existing object in the pool. If not, a new object is created in the pool. In this case, \"Java\" is stored in the pool and str1 points to it. String Object (str2): The new String(\"Java\") statement explicitly creates a new String object outside the string constant pool, even though its content matches \"Java\". This means that str2 points to a different object in memory than str1. Comparison with ==: The == operator checks reference equality, meaning it compares whether str1 and str2 point to the same memory location. Since str1 points to the pooled \"Java\" object and str2 points to a newly created object, their references are different, resulting in false. If you want to compare the actual content of two strings (not their references), you should use the .equals() method:System.out.println(str1.equals(str2)); // Outputs: true\n<br><a class=\"internal-link\" data-href=\"ContructorChainingWithThis.md\" href=\"java/contructorchainingwiththis.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"ContructorChainingWithThis.md\" href=\"java/contructorchainingwiththis.html\" target=\"_self\" rel=\"noopener nofollow\"></a># The this Keyword in JavaThe this keyword in Java is a versatile tool that serves several important functions within object-oriented programming. Here's a comprehensive overview of its usage:Ambiguity Resolution: When a method or constructor parameter has the same name as an instance variable, this is used to differentiate between them. For example:class MyClass { int age; MyClass(int age) { this.age = age; // 'this.age' refers to the instance variable }\n}\nThis ensures that the instance variable age is assigned the value of the parameter age.Method Invocation: this can be used to call methods of the current class, although it's often omitted for simplicity:class MyClass { void display() { System.out.println(\"Hello, World!\"); } void invokeDisplay() { this.display(); // 'this' is optional here }\n}\nCalling Another Constructor: this() can be used to call another constructor within the same class, enabling code reuse and centralized initialization:class MyClass { int a, b; MyClass() { this(10, 20); // Calls the parameterized constructor } MyClass(int a, int b) { this.a = a; this.b = b; }\n}\nThis is particularly useful for setting default values or ensuring consistent initialization.Method Argument: this can be passed as an argument to methods, especially in event handling or when you need to pass the current object to another method:class MyClass { void method(MyClass obj) { System.out.println(\"Method invoked\"); } void invokeMethod() { this.method(this); // Passing 'this' as an argument }\n}\nConstructor Argument: Similar to method arguments, this can be passed to another constructor:class MyClass { MyClass() { this(10); // Calls another constructor with 'this' as an argument } MyClass(int value) { // Use 'this' here }\n}\nReturn Type: Methods can return this to allow method chaining or to return the current object:Javaclass MyClass { MyClass method() { return this; // Returns the current object }\n} Readability: Using this can enhance code readability, especially when dealing with ambiguous variable names.\nConstructor Chaining: this() must be the first statement in a constructor if used.\nNo Recursive Chaining: A constructor cannot call itself directly or indirectly using this().\nMandatory Termination: At least one constructor in the chain must not use this() to prevent infinite loops. Use When Necessary: Use this when it clarifies the code or when there's ambiguity between instance variables and parameters.\nAvoid Overuse: Overusing this can clutter the code. Use it judiciously for clarity and correctness.\nNaming Conventions: Adopting naming conventions for instance variables (e.g., mVar or _var) can reduce the need for this.\nBy understanding and leveraging the this keyword, Java developers can write more maintainable, readable, and efficient code, ensuring proper object management and reducing potential errors due to variable shadowing or ambiguity.ThisKeywordConstructor chaining in Java using the this keyword allows multiple constructors within the same class to call each other, enabling code reuse and centralized initialization. This approach streamlines object creation by ensuring common setup tasks are handled efficiently.\nSame-Class Invocation: The this() statement calls another constructor within the same class, passing required parameters. It must be the first line in the constructor26. Order of Execution: When an object is created, the called constructor triggers the chained constructor first. Control returns to the original constructor after completion28. Example:public class Employee { // Default constructor Employee() { this(\"John Doe\", 1001); // Calls parameterized constructor System.out.println(\"Default constructor executed\"); } // Parameterized constructor Employee(String name, int id) { System.out.println(\"Parameterized constructor: \" + name + \", ID: \" + id); } public static void main(String[] args) { new Employee(); // Triggers default constructor }\n}\nOutput:PlaintextParameterized constructor: John Doe, ID: 1001\nDefault constructor executed\nHere, the default constructor delegates initialization to the parameterized constructor using this(\"John Doe\", 1001)^4.\nFirst Statement: this() must be the first line in a constructor^3.\nNo Recursive Chaining: A constructor cannot invoke itself directly or indirectly^8.\nMandatory Termination: At least one constructor in the chain must not use this() to prevent infinite loops^6. Reduces Redundancy: Avoids repeating initialization code across multiple constructors^2.\nFlexibility: Allows creating objects with varying parameter sets while maintaining a single source of truth for critical setup logic^8.\nMaintainability: Changes to initialization logic need only be made in one constructor^5.\nFor instance, in a BankAccount class, a no-argument constructor could chain to a parameterized constructor with default values, ensuring consistent initialization without duplicating validation code^8.ContructorChainingWithThisWhen you call a function (or method) in Java, you often need to give it some data to work with. This process of giving data to a function is called passing values or passing parameters.Here's the most important thing to understand: Java always passes values by copy. This means when you pass something to a function, Java makes a copy of that value and gives the copy to the function, not the original.These include: int, double, char, boolean, byte, short, long, float.public class Example { public static void changeNumber(int num) { num = 100; // This changes only the copy System.out.println(\"Inside function: \" + num); // Prints 100 } public static void main(String[] args) { int myNumber = 5; changeNumber(myNumber); System.out.println(\"Outside function: \" + myNumber); // Still prints 5 }\n}\nWhat happens: Java copies the value 5 and gives it to the function. The function changes its copy to 100, but the original myNumber remains 5.These include: String, Arrays, ArrayList, custom objects, etc.public class Example { public static void changeArray(int[] arr) { arr[0] = 999; // This changes the original array System.out.println(\"Inside function: \" + arr[0]); // Prints 999 } public static void main(String[] args) { int[] myArray = {1, 2, 3}; changeArray(myArray); System.out.println(\"Outside function: \" + myArray[0]); // Prints 999 }\n}\nWhat happens: Java copies the reference (address) to the array, not the array itself. Both the original variable and the function parameter point to the same array in memory.public class StringExample { public static void changeString(String str) { str = \"Changed!\"; // This creates a new string System.out.println(\"Inside function: \" + str); // Prints \"Changed!\" } public static void main(String[] args) { String myString = \"Original\"; changeString(myString); System.out.println(\"Outside function: \" + myString); // Still prints \"Original\" }\n}\nStrings are immutable in Java. When you try to change a string, Java creates a new string object instead of modifying the existing one.Think of it like this:\nPrimitive types: Like giving someone a photocopy of a document. They can write on their copy, but your original stays unchanged.\nObject references: Like giving someone your home address. They can come to your house and rearrange furniture (modify the object), and you'll see the changes when you get home. To modify primitive values: Return the new value from the function.\npublic static int addTen(int num) { return num + 10; // Return the modified value\n} To avoid accidental object modification: Create a copy of the object before passing it.\nint[] copyArray = originalArray.clone();\nsomeFunction(copyArray); // Now original is safe Remember: You can't change what a reference points to from inside a function, but you can change the contents of what it points to. Java always passes copies of values to functions.\nFor primitives: the actual value is copied.\nFor objects: the reference (address) is copied.\nChanges to primitive copies don't affect originals.\nChanges to object contents through copied references do affect originals.\nThis is why primitives seem \"safe\" while objects can be \"modified.\"\nUnderstanding this concept will help you avoid many common bugs and write more predictable Java code!functionPassingValuesQuestion:&nbsp; Write a program to check if a number is both positive and even.Write a program to create a class BankAccount having instance variable balance.Implement a method deposit(int amt) which receives the amount to be deposited as an argument and adds to the current balance.Implement another method int withdraw() which asks the user to enter the amount to be withdrawn and updates the balance if having sufficient balance and return the new balance.Invoke both the methods from TestBankAccount class.import java.util.Scanner; public class PositiveNegativeChecker { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); System.out.print(\"Enter a number: \"); double number = scanner.nextDouble(); if (number &gt; 0) { System.out.println(\"The number is positive.\"); } else if (number &lt; 0) { System.out.println(\"The number is negative.\"); } else { System.out.println(\"The number is zero.\"); } scanner.close(); }\n} <br>Loops in Java allow you to execute a block of code repeatedly as long as a specified condition remains true, making them essential for writing efficient and concise programs. They come in several types—including the for, while, do-while, and enhanced for (for-each) loops—each suited for different scenarios and control flow requirements<a data-tooltip-position=\"top\" aria-label=\"https://www.scaler.com/topics/java/loops-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scaler.com/topics/java/loops-in-java/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" target=\"_self\">2</a>.The for loop is ideal when the number of iterations is known in advance. It includes three components:\nInitialization: Sets the starting value. Condition/Test Expression: Evaluates to a boolean and determines whether to execute the loop body. Update Expression: Modifies the loop variable after each iteration. Example:javafor (int i = 0; i &lt; 5; i++) { System.out.println(i); }<br>In this example, the loop prints numbers 0 through 4. The initialization (int i = 0) occurs once, the condition (i &lt; 5) is checked before each iteration, and i++ updates the counter after each pass<a data-tooltip-position=\"top\" aria-label=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.w3schools.com/java/java_for_loop.asp\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_for_loop.asp\" target=\"_self\">5</a>.The while loop is useful when the number of iterations is not predetermined. It is an entry-controlled loop, meaning the condition is evaluated before the loop body executes.Example:javaint i = 0; while (i &lt; 5) { System.out.println(i); i++; }<br>Here, if the condition i &lt; 5 is false at the start, the loop body won’t execute at all, making it suitable for scenarios where you might not want any execution if the condition fails immediately<a data-tooltip-position=\"top\" aria-label=\"https://www.scaler.com/topics/java/loops-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scaler.com/topics/java/loops-in-java/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.shiksha.com/online-courses/articles/loops-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.shiksha.com/online-courses/articles/loops-in-java/\" target=\"_self\">3</a>.The do-while loop ensures that the loop body is executed at least once because the condition is evaluated after the block has executed. This makes it an exit-controlled loop.Example:javaint i = 0; do { System.out.println(i); i++; } while (i &lt; 5);<br>The above code prints the numbers 0 through 4, but even if the condition were false initially, the body would have been executed once<a data-tooltip-position=\"top\" aria-label=\"https://www.tutorialspoint.com/java/java_do_while_loop.htm\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_do_while_loop.htm\" target=\"_self\">4</a><a data-tooltip-position=\"top\" aria-label=\"https://www.w3schools.com/java/java_while_loop_do.asp\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_while_loop_do.asp\" target=\"_self\">6</a>.The enhanced for loop, also known as the for-each loop, simplifies iterating over arrays and collections. It eliminates the need for an explicit counter and is more readable when processing each element in a collection.Example:javaint[] numbers = {10, 20, 30, 40}; for (int num : numbers) { System.out.println(num); }<br>This loop iterates over each element in the numbers array and prints it out, streamlining the iteration process<a data-tooltip-position=\"top\" aria-label=\"https://www.w3schools.com/java/java_for_loop.asp\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_for_loop.asp\" target=\"_self\">5</a><a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/for-loop\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/for-loop\" target=\"_self\">7</a>.Below is a table summarizing the key differences and use cases:<br>Each loop type brings its strengths, and choosing the appropriate one depends on the specific requirements of your program<a data-tooltip-position=\"top\" aria-label=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.shiksha.com/online-courses/articles/loops-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.shiksha.com/online-courses/articles/loops-in-java/\" target=\"_self\">3</a>.Java also supports nested loops, where one loop is placed inside another. This is commonly used for iterating over multidimensional arrays or generating patterns. For example:javafor (int i = 1; i &lt;= 3; i++) { for (int j = 1; j &lt;= 3; j++) { System.out.print(i * j + \" \"); } System.out.println(); }<br>This nested loop prints a multiplication table, executing the inner loop completely for every iteration of the outer loop<a data-tooltip-position=\"top\" aria-label=\"https://www.scaler.com/topics/java/loops-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scaler.com/topics/java/loops-in-java/\" target=\"_self\">1</a>.<br>In Java, loops serve as powerful control structures that enable the execution of repetitive tasks with minimal code. The for loop is best when the iteration count is known; the while loop is suited for uncertain iteration counts; and the do-while loop guarantees at least one execution of the loop body. Additionally, the enhanced for-each loop simplifies array and collection traversal, and nested loops offer solutions for more complex structures. Understanding and choosing the right type of loop can lead to more efficient and readable code<a data-tooltip-position=\"top\" aria-label=\"https://www.scaler.com/topics/java/loops-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scaler.com/topics/java/loops-in-java/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.tutorialspoint.com/java/java_do_while_loop.htm\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_do_while_loop.htm\" target=\"_self\">4</a>.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scaler.com/topics/java/loops-in-java/\" target=\"_self\">https://www.scaler.com/topics/java/loops-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" target=\"_self\">https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.shiksha.com/online-courses/articles/loops-in-java/\" target=\"_self\">https://www.shiksha.com/online-courses/articles/loops-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_do_while_loop.htm\" target=\"_self\">https://www.tutorialspoint.com/java/java_do_while_loop.htm</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_for_loop.asp\" target=\"_self\">https://www.w3schools.com/java/java_for_loop.asp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_while_loop_do.asp\" target=\"_self\">https://www.w3schools.com/java/java_while_loop_do.asp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/for-loop\" target=\"_self\">https://www.programiz.com/java-programming/for-loop</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.digitalocean.com/community/tutorials/java-do-while-loop\" target=\"_self\">https://www.digitalocean.com/community/tutorials/java-do-while-loop</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=vOmZ4JFhRds\" target=\"_self\">https://www.youtube.com/watch?v=vOmZ4JFhRds</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.digitalocean.com/community/tutorials/how-to-use-loops-in-java\" target=\"_self\">https://www.digitalocean.com/community/tutorials/how-to-use-loops-in-java</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.simplilearn.com/tutorials/java-tutorial/for-loop-in-java\" target=\"_self\">https://www.simplilearn.com/tutorials/java-tutorial/for-loop-in-java</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.codechef.com/blogs/loops-in-java\" target=\"_self\">https://www.codechef.com/blogs/loops-in-java</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=gu6Agiy2xBg\" target=\"_self\">https://www.youtube.com/watch?v=gu6Agiy2xBg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackoverflow.com/questions/12449281/java-using-for-while-and-do-while-loops-to-sum-1-through-100\" target=\"_self\">https://stackoverflow.com/questions/12449281/java-using-for-while-and-do-while-loops-to-sum-1-through-100</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://hostman.com/tutorials/loops-in-java/\" target=\"_self\">https://hostman.com/tutorials/loops-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://scaler.com/topics/images/elements-of-the-loops-in-java.webp?sa=X&amp;ved=2ahUKEwi1xqDI7fuLAxVHc_UHHRUzFKMQ_B16BAgBEAI\" target=\"_self\">https://scaler.com/topics/images/elements-of-the-loops-in-java.webp?sa=X&amp;ved=2ahUKEwi1xqDI7fuLAxVHc_UHHRUzFKMQ_B16BAgBEAI</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=1ceHk9YnHiY\" target=\"_self\">https://www.youtube.com/watch?v=1ceHk9YnHiY</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.studysmarter.co.uk/explanations/computer-science/computer-programming/java-loops/\" target=\"_self\">https://www.studysmarter.co.uk/explanations/computer-science/computer-programming/java-loops/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_while_loop.asp\" target=\"_self\">https://www.w3schools.com/java/java_while_loop.asp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=6djggrlkHY8\" target=\"_self\">https://www.youtube.com/watch?v=6djggrlkHY8</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tpointtech.com/java-for-loop\" target=\"_self\">https://www.tpointtech.com/java-for-loop</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/do-while-loop\" target=\"_self\">https://www.programiz.com/java-programming/do-while-loop</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.freecodecamp.org/news/java-for-loop-example/\" target=\"_self\">https://www.freecodecamp.org/news/java-for-loop-example/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.codecademy.com/resources/docs/java/loops\" target=\"_self\">https://www.codecademy.com/resources/docs/java/loops</a>\n<br>Answer from Perplexity: <a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">pplx.ai/share</a>LoopsIn Java, methods are blocks of code designed to perform specific tasks. They are fundamental building blocks in Java programming that help organize code into reusable modules, enhancing readability and maintainability.Methods are sometimes called procedures or functionA method in Java consists of a method declaration and a method body. The declaration includes:\nAccess modifier (optional) Return type Method name Parameter list (optional) Exception list (optional) Here's the basic syntax:accessModifier returnType methodName(parameterType parameter1, ...) { // Method body - code that performs the task return value; // if return type is not void\n}\npublic int addNumbers(int a, int b) { int sum = a + b; return sum;\n}\nThese methods return a value of the specified data type.public double calculateAverage(int[] numbers) { int sum = 0; for (int num : numbers) { sum += num; } return (double) sum / numbers.length;\n}\nMethods that don't return any value use the void keyword and is called procedure.public void displayMessage(String message) { System.out.println(\"Message: \" + message);\n}\npublic String getCurrentTime() { return java.time.LocalTime.now().toString();\n}\npublic double squareNumber(double num) { return num * num;\n}\npublic String formatName(String firstName, String lastName) { return lastName + \", \" + firstName;\n}\npublic int findMax(int... numbers) { int max = Integer.MIN_VALUE; for (int num : numbers) { if (num &gt; max) { max = num; } } return max;\n}\nMethod overloading allows multiple methods with the same name but different parameter lists.public int multiply(int a, int b) { return a * b;\n} public double multiply(double a, double b) { return a * b;\n} public int multiply(int a, int b, int c) { return a * b * c;\n}\nAccess modifiers control method visibility:\npublic: Accessible from any class protected: Accessible within the same package and subclasses default (no modifier): Accessible only within the same package private: Accessible only within the same class public void publicMethod() { System.out.println(\"Can be accessed from anywhere\");\n} private void privateMethod() { System.out.println(\"Can only be accessed within this class\");\n}\nStatic methods belong to the class rather than instances and can be called without creating objects.public static int power(int base, int exponent) { int result = 1; for (int i = 0; i &lt; exponent; i++) { result *= base; } return result;\n} // Called as: ClassName.power(2, 3);\nInstance methods require an object of the class to be created before they can be called.public boolean isPalindrome(String text) { String reversed = new StringBuilder(text).reverse().toString(); return text.equalsIgnoreCase(reversed);\n} // Called as: ObjectName.isPalindrome(\"radar\");\nRecursive methods call themselves to solve problems by breaking them down.public int factorial(int n) { if (n &lt;= 1) { return 1; } return n * factorial(n - 1);\n}\npublic int divide(int a, int b) throws ArithmeticException { if (b == 0) { throw new ArithmeticException(\"Cannot divide by zero\"); } return a / b;\n}\npublic class Calculator { private int result = 0; public Calculator add(int value) { result += value; return this; } public Calculator subtract(int value) { result -= value; return this; } public int getResult() { return result; }\n} // Used as: int answer = new Calculator().add(5).subtract(2).getResult(); Keep methods short and focused on a single task Use descriptive method names (usually verb-noun format) Limit the number of parameters (ideally less than 4) Document methods with comments Handle exceptions appropriately Design methods to be reusable Follow consistent naming conventions By mastering methods in Java, you create more organized, maintainable, and reusable code that follows the principles of object-oriented programming.<br>Methods<img src=\"java/mcq_string.png\" draggable=\"false\" target=\"_self\">mcq_string.pngWhat will be the output of the following Program?class VariableDemo\n{ public static void main(String [] rk) { public int x = 10; System.out.print(x); }\n}\nWhat will be the output of the following Program?class VariableDemo\n{ static int x; public static void main(String [] rk) { int x; System.out.print(x); }\n}\nWhat will be the output of the following Program?class VariableDemo\n{ static int x; public static void main(String [] rk) { int x; System.out.print(VariableDemo.x); }\n}\nint x = 3, y = 5;\nif(x-- &gt; 7 || ++ y &lt; 8 ){\nSystem.out.print(x);\nSystem.out.print(y); }\nA.35B.25C.27D.37E.47F.N.O.TJava arrays are fundamental data structures that enable you to store a fixed collection of elements of the same type in contiguous memory locations. They provide a simple yet efficient way to group related data items, and their usage spans from basic storage and manipulation to more complex applications such as multi-dimensional data representation and variable-length arguments in methods1.An array in Java is a finite collection of variables of a single type that are identified by a common name and indexed by integers starting at 01.Arrays can be declared using either of the following syntaxes:dataType[] arrayName;\ndataType arrayName[];\nFor example:int[] marks;\nThis statement declares an array variable without allocating memory for its elements, meaning marks initially holds a null reference^1.Memory is allocated to an array using the new keyword along with specifying the size (i.e., the number of elements) in square brackets. For example:marks = new int[5];\nThis creates an array capable of holding 5 integers, with each element automatically initialized to its default value (0 for numeric types)^1.Arrays can also be initialized with a list of values at the time of declaration. For example:int[] numbers = {10, 20, 30, 40, 50};\nThis not only declares the array but also assigns the specified values to its elements^1.Individual elements are accessed using their index in square brackets. Since array indexing starts at 0, the first element is at index 0 and the last element is at index array.length - 1. For example:marks[0] = 10;\nSystem.out.println(\"First mark: \" + marks[0]);\nThis sets the first element of the array to 10 and then prints it^1.Once an array is created, its size is fixed and cannot be altered. This is why arrays are best used when the required amount of data is known in advance^1.When an array is allocated, Java initializes its elements to default values:\nNumeric types (e.g., int, double) default to 0.\nchar types default to the null character ('\\u0000').\nboolean types default to false.\nObject references default to null^1.\nMulti-dimensional arrays in Java are essentially arrays of arrays. They are typically used to represent tabular data (such as matrices)^1.A two-dimensional array can be created as follows:Javaint[][] matrix = new int[4][5];\nThis creates a 2D array with 4 rows and 5 columns, where every element is accessible using a pair of indices, for instance, matrix[1][2]^1.You can create multi-dimensional arrays with rows of different lengths. First, allocate memory for the first dimension and then assign each row individually:int[][] jaggedArray = new int[4][];\njaggedArray[0] = new int[1];\njaggedArray[1] = new int[2];\njaggedArray[2] = new int[3];\njaggedArray[3] = new int[4];\nEach row is allocated separately, allowing the array to be “jagged” in structure^1.Arrays can be passed as parameters to methods, which allows for modular manipulation of data. For example:public void printArray(int[] arr) { for (int i : arr) { System.out.println(i); }\n}\nHere, an array is passed into the method printArray for processing^1.Methods in Java can also return arrays. For instance:public int[] getMarks() { int[] marks = {85, 90, 95}; return marks;\n}\nThis approach enables methods to send back collections of values^1.To create an independent copy of an array, the clone() method can be used:int[] original = {1, 2, 3};\nint[] copy = original.clone();\nThis produces a new array with the same values, independently stored in memory^1.Java supports methods that take a variable number of arguments using the varargs syntax. It is declared as follows:public void addNumbers(int... numbers) { int sum = 0; for (int num : numbers) { sum += num; } System.out.println(\"Sum: \" + sum);\n}\nVarargs allow the caller to pass either an array or a sequence of individual values^1.In summary, arrays in Java are powerful data structures that efficiently store fixed-size collections of elements of the same type. They enable the management of both simple data sets and complex multi-dimensional structures while offering flexible usage patterns—such as passing by reference, cloning, and using varargs—that enhance their usability in various programming scenarios^1.Arrayspublic void add(int … arr) a.add(3, 4, 5); b.int [] x = {3, 4, 5, 6, 7}; add(x);\nIn Java, there are different ways to find the length of an array depending on the type of array you're working with.For regular arrays in Java, you use the length property (note: it's a property, not a method, so no parentheses):int[] numbers = {1, 2, 3, 4, 5};\nint arrayLength = numbers.length;\nSystem.out.println(\"Array length: \" + arrayLength); // Output: 5\n// Integer array\nint[] intArray = new int[10];\nSystem.out.println(\"Integer array length: \" + intArray.length); // Output: 10 // String array\nString[] stringArray = {\"Hello\", \"World\", \"Java\"};\nSystem.out.println(\"String array length: \" + stringArray.length); // Output: 3 // Character array\nchar[] charArray = {'a', 'b', 'c', 'd'};\nSystem.out.println(\"Character array length: \" + charArray.length); // Output: 4\nFor ArrayList and other collection classes, you use the size() method:import java.util.ArrayList; ArrayList&lt;String&gt; list = new ArrayList&lt;&gt;();\nlist.add(\"Apple\");\nlist.add(\"Banana\");\nlist.add(\"Cherry\");\nint listSize = list.size();\nSystem.out.println(\"ArrayList size: \" + listSize); // Output: 3 Don't use parentheses with regular arrays: array.length() is incorrect\nDon't forget parentheses with collections: list.size is incorrect\nRemember that array length is immutable - once an array is created, its length cannot be changed\npublic class ArrayLengthExample { public static void main(String[] args) { // Regular array int[] scores = {85, 90, 78, 92, 88}; System.out.println(\"Number of scores: \" + scores.length); // Using length in a loop for (int i = 0; i &lt; scores.length; i++) { System.out.println(\"Score \" + (i + 1) + \": \" + scores[i]); } // Enhanced for loop (no need for length) for (int score : scores) { System.out.println(\"Score: \" + score); } }\n}\nThe length property is one of the most fundamental aspects of working with arrays in Java, and it's essential for loops, bounds checking, and array manipulation operations.arrayLengthA constructor in Java is a special type of method used to initialize objects. It is called when an instance of a class is created using the new keyword. Constructors have the same name as the class and don’t have any return type, not even void.public class Student { // Constructor public Student() { System.out.println(\"A new student object is created\"); }\n}\nIf you don’t create any constructor in your class, Java automatically provides a default constructor that initializes member variables to their default values. numeric data types are set to 0 char data types are set to null character(‘’) reference variables are set to null boolean are set to false public class Book { String title; // Will be initialized to null int pages; // Will be initialized to 0 // Default constructor is implicitly provided by Java\n}\nThese constructors accept parameters, allowing you to initialize object fields with specific values.public class Employee { private String name; private int id; // Parameterized constructor public Employee(String name, int id) { this.name = name; this.id = id; }\n}\nA copy constructor creates a new object as a copy of an existing object.public class Point { private int x, y; public Point(int x, int y) { this.x = x; this.y = y; } // Copy constructor public Point(Point p) { this.x = p.x; this.y = p.y; }\n}\nLike methods, constructors can be overloaded by changing the parameter list.public class Rectangle { private double length; private double width; // Constructor 1: No parameters (default values) public Rectangle() { length = 1.0; width = 1.0; } // Constructor 2: Same length and width public Rectangle(double side) { length = side; width = side; } // Constructor 3: Different length and width public Rectangle(double length, double width) { this.length = length; this.width = width; }\n}\nYou can call one constructor from another using this().public class Person { private String name; private int age; private String address; // Primary constructor public Person(String name, int age, String address) { this.name = name; this.age = age; this.address = address; } // Calls the primary constructor public Person(String name, int age) { this(name, age, \"Unknown\"); } // Calls the second constructor public Person(String name) { this(name, 0); }\n}\nPrivate constructors prevent instantiation from outside the class. They're commonly used in:public class DatabaseConnection { private static DatabaseConnection instance; // Private constructor private DatabaseConnection() { // Initialize connection } public static DatabaseConnection getInstance() { if (instance == null) { instance = new DatabaseConnection(); } return instance; }\n}\npublic class MathUtils { // Private constructor to prevent instantiation private MathUtils() { throw new AssertionError(\"Utility class should not be instantiated\"); } public static int add(int a, int b) { return a + b; }\n}\nConstructors initialize instance variables when objects are created, while static blocks initialize static variables when the class is loaded.public class Configuration { private String name; private static String appName; // Static initialization block - runs when class is loaded static { appName = \"MyApplication\"; System.out.println(\"Class loaded: \" + appName); } // Constructor - runs when object is created public Configuration(String name) { this.name = name; System.out.println(\"Object created: \" + this.name); }\n}\nConstructors can throw exceptions if initialization fails.public class FileReader { private String fileName; private java.io.FileInputStream stream; public FileReader(String fileName) throws java.io.FileNotFoundException { this.fileName = fileName; this.stream = new java.io.FileInputStream(fileName); }\n} Keep constructors simple and focused on initialization.\nUse constructor overloading for flexibility.\nInitialize all relevant fields.\nImplement validation in constructors when necessary.\nUse constructor chaining to avoid code duplication.\nConsider providing builder patterns for classes with many optional parameters.\nDon't call overridable methods from constructors.\npublic class BankAccount { private String accountNumber; private String accountHolder; private double balance; private static int lastAccountNumber = 1000; // Static block static { // Could initialize from a database or configuration System.out.println(\"BankAccount class loaded\"); } // Primary constructor public BankAccount(String accountHolder, double initialDeposit) { if (initialDeposit &gt;= 0) { this.accountHolder = accountHolder; this.balance = initialDeposit; this.accountNumber = \"BA\" + (++lastAccountNumber); } else { throw new IllegalArgumentException(\"Initial deposit cannot be negative\"); } } public void deposit(double amount) { if (amount &gt; 0) { balance += amount; } } public boolean withdraw(double amount) { if (amount &gt; 0 &amp;&amp; balance &gt;= amount) { balance -= amount; return true; } return false; } public double getBalance() { return balance; } public String getAccountInfo() { return \"Account: \" + accountNumber + \", Holder: \" + accountHolder + \", Balance: $\" + balance; }\n}\nConstructors are fundamental to Java programming as they ensure objects are properly initialized before use. By mastering the various types and patterns of constructors, you can create more robust and maintainable Java applications.ConstructorJava's object-oriented nature is built on several key concepts, with inheritance and interfaces being fundamental pillars. Let's explore these concepts in detail.Inheritance is a powerful concept that allows a new class to acquire (inherit) properties and behaviors from an existing class. This promotes code reusability and establishes a relationship between classes.Terminology:\nSuperclass (Parent class): The class being inherited from Subclass (Child class): The class that inherits from the superclass To create inheritance, we use the extends keyword:class Vehicle { protected String brand = \"Ford\"; public void honk() { System.out.println(\"Tuut, tuut!\"); }\n} class Car extends Vehicle { private String modelName = \"Mustang\"; public static void main(String[] args) { Car myCar = new Car(); myCar.honk(); // Inherited from Vehicle System.out.println(myCar.brand + \" \" + myCar.modelName); }\n}\n1. Single Inheritance\nA class inherits from only one superclass.class Animal { void eat() { System.out.println(\"I can eat\"); }\n} class Dog extends Animal { void bark() { System.out.println(\"I can bark\"); }\n}\n2. Multi-level Inheritance\nA class inherits from a class, which in turn inherits from another class.class Animal { void eat() { System.out.println(\"I can eat\"); }\n} class Dog extends Animal { void bark() { System.out.println(\"I can bark\"); }\n} class Labrador extends Dog { void color() { System.out.println(\"I am brown\"); }\n}\n3. Hierarchical Inheritance\nMultiple classes inherit from a single superclass.class Animal { void eat() { System.out.println(\"I can eat\"); }\n} class Dog extends Animal { void bark() { System.out.println(\"I can bark\"); }\n} class Cat extends Animal { void meow() { System.out.println(\"I can meow\"); }\n} Note: Java does not support multiple inheritance (where a class inherits from multiple classes) directly through classes to avoid the \"diamond problem.\" However, it can be achieved using interfaces.\nThe protected access modifier is particularly important in inheritance:class Animal { protected String name; protected void display() { System.out.println(\"I am an animal.\"); }\n} class Dog extends Animal { public void getInfo() { System.out.println(\"My name is \" + name); // Accessing protected field }\n}\nIn this example, the protected members can be accessed by the subclass.An interface is a completely abstract class that defines a contract for classes to implement. It contains method signatures (without implementations) and constants.interface Animal { public void animalSound(); // interface method (no body) public void sleep(); // interface method (no body)\n} class Pig implements Animal { public void animalSound() { System.out.println(\"The pig says: wee wee\"); } public void sleep() { System.out.println(\"Zzz\"); }\n} Methods in interfaces are implicitly public and abstract\nFields are implicitly public, static, and final\nInterfaces cannot be instantiated\nA class can implement multiple interfaces\nAn interface can extend another interface Total Abstraction: Interfaces help achieve complete abstraction by hiding implementation details\nMultiple Inheritance: Java allows a class to implement multiple interfaces, overcoming the limitation of single inheritance\nLoose Coupling: Interfaces reduce dependencies between components of a system\nHere's a practical example of using an interface to calculate areas:interface Polygon { void getArea(int length, int breadth);\n} class Rectangle implements Polygon { public void getArea(int length, int breadth) { System.out.println(\"The area of the rectangle is \" + (length * breadth)); }\n} class Main { public static void main(String[] args) { Rectangle r1 = new Rectangle(); r1.getArea(5, 6); // Output: The area of the rectangle is 30 }\n}\nA class can implement multiple interfaces, which is how Java achieves a form of multiple inheritance:interface FirstInterface { public void myMethod();\n} interface SecondInterface { public void myOtherMethod();\n} class DemoClass implements FirstInterface, SecondInterface { public void myMethod() { System.out.println(\"Implementation of first method\"); } public void myOtherMethod() { System.out.println(\"Implementation of second method\"); }\n}\nSince Java 8, interfaces can have default methods with implementations:interface Polygon { void getArea(); // default method default void getSides() { System.out.println(\"I can get sides of a polygon.\"); }\n} class Rectangle implements Polygon { public void getArea() { int length = 6; int breadth = 5; System.out.println(\"The area of the rectangle is \" + (length * breadth)); } // Optional: override the default method public void getSides() { System.out.println(\"I have 4 sides.\"); }\n} Inheritance is used when there is an \"is-a\" relationship (a Car is a Vehicle) Interfaces are used when there is a \"can-do\" relationship (a Bird can fly) Use inheritance for code reusability of existing implementations Use interfaces to define capabilities that multiple unrelated classes might implement Understanding these concepts is fundamental to writing well-structured, maintainable Java code. They provide powerful mechanisms for code organization and reuse that are core to object-oriented programming.Let me know if you’d like to split this into separate Obsidian notes or add tags/summaries!Interfaces<br><a class=\"internal-link\" data-href=\"EnumsScope.md\" href=\"java/enumsscope.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"EnumsScope.md\" href=\"java/enumsscope.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"EnumsScope.md\" href=\"java/enumsscope.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"EnumsScope.md\" href=\"java/enumsscope.html\" target=\"_self\" rel=\"noopener nofollow\"></a># Enums in JavaEnums in Java are a powerful feature introduced in JDK 1.5 that allow developers to define a fixed set of named constants, improving code clarity and type safety. They function as a specialized class type with predefined instances, making them ideal for representing concepts like days of the week, months, or states. Fixed Constants: Enums represent a finite, predefined set of values. For example:\npublic enum Season { SUMMER, WINTER, SPRING } Here, Season can only take one of the three declared values1. Type Safety: Enums prevent invalid assignments by restricting variables to the declared constants. For instance, a Season variable cannot hold values like \"RAINY\"1. Implicit Properties: Enum constants are public, static, and final by default.\nThey can not use new keyword.\nThey extend java.lang.Enum, so they cannot inherit from other classes1. public enum MonthWithDays { JANUARY(31), FEBRUARY(28), MARCH(31); int days; MonthWithDays(int days) { this.days = days; }\n} Enums can have fields and constructors. Each constant (e.g., JANUARY) initializes these fields during declaration^1. The compiler automatically adds the values() method, which returns an array of all enum constants:\nfor (Season s : Season.values()) { System.out.println(s);\n} Output: Plaintext\nSUMMER\nWINTER\nSPRING Enums can define methods or declare abstract methods that each constant must implement:\npublic enum Operation { ADD { public double apply(double a, double b) { return a + b; } }, SUBTRACT { public double apply(double a, double b) { return a - b; } }; public abstract double apply(double a, double b);\n} Enums work seamlessly with switch statements:\nswitch (season) { case SUMMER: System.out.println(\"Hot\"); break; case WINTER: System.out.println(\"Cold\"); break;\n} Enums cannot be instantiated using new due to private constructors^1. Can be declared inside or outside a class.\nNested enums can be private, but standalone enums must be public or package-private^1.\nMultiple enums can coexist in the same class^1. Enums can implement interfaces but cannot extend classes^1.\npublic enum MonthWithDays { JANUARY(31), FEBRUARY(28), MARCH(31); int days; MonthWithDays(int days) { this.days = days; }\n} // Usage\nfor (MonthWithDays month : MonthWithDays.values()) { System.out.println(month + \": \" + month.days + \" days\");\n}\nOutput:PlaintextJANUARY: 31 days\nFEBRUARY: 28 days\nMARCH: 31 days Representing states (e.g., OrderStatus { PENDING, SHIPPED, DELIVERED }).\nDefining options in menus or configuration settings.\nSimplifying switch-case logic with type-safe constants.\nEnums enhance code readability and reduce errors by enforcing valid values at compile time. Their integration with Java’s object-oriented features makes them indispensable for modeling fixed, related constants^1.EnumsIn Java, enums have specific rules regarding their declaration and scope. Here’s a breakdown based on your queries:Yes, but only if it is nested inside another class. Top-level enums (declared in their own .java file) must be public or package-private (no access modifier). However, when declared inside a class, enums can be marked private:public class MyClass { private enum Status { ACTIVE, INACTIVE } // Valid\n}\nKey Points:\nEnums are implicitly static when nested inside a class.\nEnum constructors are always private (even if not explicitly declared)^2.\nNo. Enums cannot be declared inside methods, loops, or conditional blocks. They must be declared at the class level or as static nested types:public class MyClass { // Valid: enum at class level enum Direction { NORTH, SOUTH } void myMethod() { // INVALID: enum inside a method // enum Status { ACTIVE } }\n}\nYes, a single class can contain multiple enums. For example:public class GameConfig { public enum Difficulty { EASY, MEDIUM, HARD } private enum GameState { RUNNING, PAUSED, STOPPED }\n}\nUsage:\nEnums are accessed via their enclosing class, e.g., GameConfig.Difficulty.EASY.\nEach enum can have its own fields, methods, and constructors^3.\npublic class PaymentProcessor { private enum PaymentStatus { SUCCESS(\"Payment completed\"), FAILED(\"Payment rejected\"); private final String message; PaymentStatus(String msg) { this.message = msg; // Constructor is implicitly private } public String getMessage() { return message; } } public static void main(String[] args) { PaymentStatus status = PaymentStatus.SUCCESS; System.out.println(status.getMessage()); // Output: Payment completed }\n}\nEnums provide type safety, reduce errors, and improve readability when modeling fixed sets of constants. Use them for scenarios like states, configuration options, or predefined categories^3.EnumsScopeWhat is the result stored in x, after evaluating the following\nexpression?int x = 5;\nx=x++*2+3*-x;\nAns: x=-8 Initial Values: x = 3, y = 5 Evaluate x-- &gt; 7: x-- uses the post-decrement operator: Current value of x (3) is compared to 7 → 3 &gt; 7 → false. After the comparison, x becomes 2. Short-Circuit OR (||) Behavior: Since the first condition (x-- &gt; 7) is false, the second condition (++y &lt; 8) is evaluated. Evaluate ++y &lt; 8: ++y uses the pre-increment operator: y increments to 6 before the comparison. Check 6 &lt; 8 → true. Final Values: x = 2 (from post-decrement). y = 6 (from pre-increment). Output: System.out.print(x) → 2. System.out.print(y) → 6. Combined output: 26 (not listed in the options). The correct output (26) is not among the provided choices (35, 25, 27, 37, 47), so the answer is N.O.T.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/11353356/8146382b-6c94-4dfc-974f-5195a49564c8/04.-Operators.pptx\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/11353356/8146382b-6c94-4dfc-974f-5195a49564c8/04.-Operators.pptx</a>\n<br><a class=\"internal-link\" data-href=\"ShortCircuitLogicalOperators.md\" href=\"java/shortcircuitlogicaloperators.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"ShortCircuitLogicalOperators.md\" href=\"java/shortcircuitlogicaloperators.html\" target=\"_self\" rel=\"noopener nofollow\"></a>Java provides several types of operators that perform various operations on variables and values. Here's a comprehensive table of Java operators and their precedence, listed from highest to lowest precedence:This table covers the main types of operators in Java:\nArithmetic operators: +, -, *, /, %\nRelational operators: &lt;, &gt;, &lt;=, &gt;=, Logical operators: &amp;&amp;, ||, !\nBitwise operators: &amp;, |, ^, ~, &lt;&lt;, &gt;&gt;, &gt;&gt;&gt;\nAssignment operators: =, +=, -=, *=, /=, %=, &amp;=, |=, ^=, &lt;&lt;=, &gt;&gt;=, &gt;&gt;&gt;=\nUnary operators: +, -, ++, --\nTernary operator: ?:\ninstanceof operator\nCompound Assignments: +=, -=, *=, /+, %=\nUnderstanding operator precedence is crucial for writing correct and efficient Java code. When operators with higher precedence appear in an expression, they are evaluated before operators with lower precedence. Operators with equal precedence are evaluated based on their associativity[1][2][5].Operators and PrecedenceShort-circuit logical operators in Java optimize boolean evaluations by skipping unnecessary checks once the result is determined. The primary operators are &amp;&amp; (logical AND) and || (logical OR), which differ from their non-short-circuit counterparts (&amp; and |) by evaluating the right-hand operand only if necessary. Short-Circuit AND (&amp;&amp;) Returns true only if both operands are true. If the left operand is false, the right operand is not evaluated (since the result is already false). Example:\nif (denom != 0 &amp;&amp; num / denom &gt; 10) // Safe: avoids division by zero if denom is 0 Here, num / denom is evaluated only if denom != 015. Short-Circuit OR (||) Returns true if either operand is true. If the left operand is true, the right operand is not evaluated. Example:\nif (obj == null || obj.isValid()) // Skips isValid() check if obj is null Efficiency: Redundant computations are avoided.\nif (fastCheck() || slowCheck()) // slowCheck() runs only if fastCheck() returns false Error Prevention: Safeguards against runtime exceptions (e.g., NullPointerException, division by zero)15. Control Flow: Acts like a conditional check, enabling safe chaining of dependent operations. Example of side-effect difference:int x = 0;\nif (false &amp;&amp; (x++ &gt; 0)) { ... } // x remains 0 (right operand not evaluated)\nif (false &amp; (x++ &gt; 0)) { ... } // x becomes 1 (both operands evaluated) Order Matters: Place lightweight or critical checks first.\nif (data != null &amp;&amp; data.isValid()) // Prevents NullPointerException Avoid Side Effects: Ensure the right operand doesn’t rely on side effects (e.g., variable modification), as it may not execute. Use for Safety: Protect against exceptions in dependent operations. Validation Chains:\nif (user != null &amp;&amp; user.isActive() &amp;&amp; user.hasPermission()) Resource Checks:\nif (file.exists() || file.createNewFile()) By leveraging short-circuit operators, you enhance both performance and reliability in Java applications^2^7.ShortCircuitLogicalOperators<br><a class=\"internal-link\" data-href=\"Instanceof.md\" href=\"java/instanceof.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"Instanceof.md\" href=\"java/instanceof.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"Instanceof.md\" href=\"java/instanceof.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"Instanceof.md\" href=\"java/instanceof.html\" target=\"_self\" rel=\"noopener nofollow\"></a># Java Classes and ObjectsJava classes are blueprints for creating objects and form the backbone of object-oriented programming (OOP) in Java. They allow you to encapsulate data and behavior into a single unit, making your code modular, reusable, and easier to maintain.<br>A class in Java defines the properties (data members or fields) and behaviors (methods) for the objects created from it. Think of a class as a template or a recipe, where you specify what attributes an object will have and what operations can be performed on it. <a data-tooltip-position=\"top\" aria-label=\"https://www.tutorialspoint.com/java/java_object_classes.htm\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_object_classes.htm\" target=\"_self\">Tutorialspoint</a>A typical Java class includes:\nFields (Instance Variables): Variables that hold the state of an object.\nMethods: Functions defined within a class that describe the behaviors or operations an object can perform.\nConstructors: Special methods used to initialize objects when they are created.\n<br>Access Modifiers: Keywords like public, private, and protected which control the visibility and accessibility of the class members, contributing to encapsulation. <a data-tooltip-position=\"top\" aria-label=\"https://www.geekster.in/articles/java-classes-and-object/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geekster.in/articles/java-classes-and-object/\" target=\"_self\">Geekster</a>\nYou start by declaring a class with the keyword class, followed by its name. For example:public class Car { // Fields (attributes) String model; String color; int year; // Constructor to initialize the object public Car(String model, String color, int year) { this.model = model; this.color = color; this.year = year; } // Method to display car details public void displayDetails() { System.out.println(\"Model: \" + model); System.out.println(\"Color: \" + color); System.out.println(\"Year: \" + year); }\n}\n<br>In this example, the Car class is defined with three fields and a constructor that initializes these fields. The displayDetails() method outputs the state of a Car object. <a data-tooltip-position=\"top\" aria-label=\"https://www.scholarhat.com/tutorial/java/java-class-and-object\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scholarhat.com/tutorial/java/java-class-and-object\" target=\"_self\">Scholarhat</a>Once a class is defined, you create objects (instances) of that class using the new keyword:Javapublic class Main { public static void main(String[] args) { // Creating an object of the Car class Car myCar = new Car(\"Toyota\", \"Red\", 2022); // Calling a method on the object myCar.displayDetails(); }\n}\n<br>Here, the object myCar is an instance of the Car class, and its fields are initialized as specified by the constructor. You can then invoke its methods to perform operations, such as displaying its details. <a data-tooltip-position=\"top\" aria-label=\"https://www.w3schools.com/java/java_classes.asp\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_classes.asp\" target=\"_self\">W3Schools</a>Java classes not only serve as templates for objects but also implement fundamental OOP concepts:\n<br>Encapsulation: By using access modifiers, classes hide internal states from external access, exposing only the necessary parts (typically via public methods). This protects data integrity and prevents external interference. <a data-tooltip-position=\"top\" aria-label=\"https://stackify.com/oops-concepts-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackify.com/oops-concepts-in-java/\" target=\"_self\">Stackify</a> <a data-tooltip-position=\"top\" aria-label=\"https://www.geekster.in/articles/java-classes-and-object/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geekster.in/articles/java-classes-and-object/\" target=\"_self\">Geekster</a>\n<br>Inheritance: Classes can be extended to create subclasses that inherit attributes and methods of a parent class. This promotes code reuse and establishes a natural hierarchy among objects. For instance, a Sensor class might be extended by an Accelerometer class, adding new methods while inheriting common functionalities. <a data-tooltip-position=\"top\" aria-label=\"https://pythonnumericalmethods.studentorg.berkeley.edu/notebooks/chapter07.03-Inheritance-Encapsulation-and-Polymorphism.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pythonnumericalmethods.studentorg.berkeley.edu/notebooks/chapter07.03-Inheritance-Encapsulation-and-Polymorphism.html\" target=\"_self\">Berkeley</a>\n<br>Polymorphism: With polymorphism, Java allows a single interface to represent different underlying forms (data types). For example, a method defined in a superclass can be overridden in a subclass to perform differently based on the object instance. <a data-tooltip-position=\"top\" aria-label=\"https://pythonnumericalmethods.studentorg.berkeley.edu/notebooks/chapter07.03-Inheritance-Encapsulation-and-Polymorphism.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pythonnumericalmethods.studentorg.berkeley.edu/notebooks/chapter07.03-Inheritance-Encapsulation-and-Polymorphism.html\" target=\"_self\">Berkeley</a>\n<br>Abstraction: Classes enable you to represent complex systems by exposing only the necessary components, thereby simplifying complex realities into manageable models. <a data-tooltip-position=\"top\" aria-label=\"https://stackify.com/oops-concepts-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackify.com/oops-concepts-in-java/\" target=\"_self\">Stackify</a> Plan Your Class Design: Determine the necessary fields and behaviors when designing a class. This helps in structuring the code logically.\nUse Constructors Wisely: Constructors ensure that objects are correctly initialized when they are created.\nLeverage Access Modifiers: Use private for fields that should not be accessed directly, and provide public getters and setters as needed.\n<br>Keep Responsibilities Focused: Aim for each class to have a single responsibility, which leads to better code maintainability and easier debugging. <a data-tooltip-position=\"top\" aria-label=\"https://www.geekster.in/articles/java-classes-and-object/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geekster.in/articles/java-classes-and-object/\" target=\"_self\">Geekster</a>\nJava classes and objects are fundamental to both simple programs and large-scale applications, enhancing code organization and fostering code reuse. With a solid understanding of classes and their role in encapsulating data and behaviors, you'll be well-equipped to build robust, modular Java applications.In summary, mastering the theory and practical use of Java classes is crucial for effective programming in Java, and understanding key OOP concepts like encapsulation, inheritance, and polymorphism will greatly improve the clarity and efficiency of your code.ClassesIn Java, variables are data members declared within a class, categorized into three types based on their scope and behavior. Here's a detailed breakdown:\nDeclaration: Defined within methods, constructors, or code blocks. Lifetime: Created when the block executes and destroyed afterward. Scope: Accessible only within the declaring block/method. Key Features: No access modifiers (e.g., public, private) allowed. Stored in the stack memory. Must be initialized explicitly (no default values). Example:javapublic void calculate() { int localVar = 5; // Local variable }\nDeclaration: Defined in a class outside methods/blocks (non-static). Lifetime: Created when an object is instantiated (new keyword) and destroyed with the object. Scope: Accessible via object instances. Key Features: Can use access modifiers (e.g., private, protected). Stored in the heap memory (part of the object). Default values: Numeric types: 0 boolean: false Object references: null Example:<br><a class=\"internal-link\" data-href=\"ContructorChainingWithSuper.md\" href=\"java/contructorchainingwithsuper.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"ContructorChainingWithSuper.md\" href=\"java/contructorchainingwithsuper.html\" target=\"_self\" rel=\"noopener nofollow\"></a># The super Keyword in JavaThe super keyword in Java is a fundamental tool for managing inheritance and polymorphism, allowing subclasses to interact with their parent classes in several key ways:Variables: The super keyword can be used to access variables from the parent class when there's a naming conflict with variables in the subclass. For example:class Animal { String color = \"black\";\n}\nclass Dog extends Animal { String color = \"white\"; void display() { System.out.println(\"Dog color: \" + color); System.out.println(\"Animal color: \" + super.color); }\n}\nOutput:PlaintextDog color: white\nAnimal color: black\nMethods: When a subclass overrides a method from its superclass, super can be used to call the superclass's version of that method:class Animal { void eat() { System.out.println(\"eating...\"); }\n}\nclass Dog extends Animal { void eat() { super.eat(); // Calls the eat() method of Animal class System.out.println(\"barking...\"); }\n}\nOutput:Plaintexteating...\nbarking...\nConstructor Chaining: The super keyword is used to call the constructor of the parent class from within the subclass constructor. This ensures that the superclass's instance variables are initialized before the subclass's:class Animal { Animal() { System.out.println(\"animal is created\"); }\n}\nclass Dog extends Animal { Dog() { super(); // Calls the constructor of Animal class System.out.println(\"dog is created\"); }\n}\nOutput:Plaintextanimal is created\ndog is created\nMethod Overriding: When a subclass has a method with the same name as a method in the superclass, super can be used to specify which method to call:class Animal { void display() { System.out.println(\"I am an animal\"); }\n}\nclass Dog extends Animal { void display() { super.display(); // Calls the display() method of Animal class System.out.println(\"I am a dog\"); }\n}\nOutput:PlaintextI am an animal\nI am a dog\nStatic Context: Although super is not used in static contexts, it can be used to access static members of the superclass from within the subclass:class Animal { static void staticMethod() { System.out.println(\"Static method of Animal\"); }\n}\nclass Dog extends Animal { void display() { super.staticMethod(); // Calls the static method of Animal class }\n}\nInitialization Order: When a subclass constructor is called, the superclass constructor is invoked first, ensuring that inherited members are initialized before subclass-specific initialization:class Person { Person(String name) { System.out.println(\"Person constructor called: \" + name); }\n}\nclass Employee extends Person { Employee(String name, int id) { super(name); // Calls the constructor of Person class System.out.println(\"Employee constructor called with ID: \" + id); }\n}\nOutput:PlaintextPerson constructor called: John Doe\nEmployee constructor called with ID: 1001 First Statement: The super() call must be the first statement in a subclass constructor to ensure proper initialization order.\nImplicit Call: If a constructor doesn't explicitly call a superclass constructor, Java automatically inserts a call to the superclass's no-argument constructor.\nConstructor Chaining: Constructor chaining allows subclasses to invoke constructors of their superclass, reducing code duplication and ensuring consistent initialization. Access to Superclass Members: super enables access to superclass methods, variables, and constructors, promoting code reuse and leveraging existing functionality.\nMethod Overriding Support: super allows explicit invocation of overridden methods in the superclass, extending behavior while retaining the original implementation.\nConstructor Chaining: super facilitates constructor chaining, enabling subclasses to invoke constructors of their superclass for proper initialization and reducing code duplication.\nFlexibility in Inheritance: super permits navigation through multiple levels of inheritance, accessing members and constructors of any superclass in the hierarchy, providing flexibility and control over the inheritance structure.\nBy understanding and leveraging the super keyword, Java developers can write more maintainable, readable, and efficient code, ensuring proper object management and reducing potential errors due to variable shadowing or ambiguity.SuperKeywordConstructor chaining using the super keyword in Java enables subclasses to invoke parent class constructors, ensuring proper initialization of inherited members before executing subclass-specific code. This mechanism maintains the hierarchy of object creation in inheritance.\nIf a parent class has a default constructor (no-args), Java automatically inserts super() in the child constructor26.\nFor parent classes with only parameterized constructors, subclasses must explicitly call super(...) with matching arguments56. Parent class constructors execute before child constructors. For example:\nclass Parent { Parent() { System.out.println(\"Parent initialized\"); }\n}\nclass Child extends Parent { Child() { // Implicit super() added here System.out.println(\"Child initialized\"); }\n} Output:\nParent initialized\nChild initialized This ensures parent fields are ready before child logic runs26. First Statement Requirement: super(...) must be the first line in a subclass constructor236.\nNo Dual Invocation: A constructor cannot use both super() and this()—only one can occupy the first line56.\nMandatory Explicit Call: If the parent lacks a default constructor, all child constructors must explicitly invoke a parent parameterized constructor56.\nclass Vehicle { Vehicle(String type) { System.out.println(\"Vehicle: \" + type); }\n}\nclass Car extends Vehicle { Car() { super(\"Sedan\"); // Explicit call to parameterized parent constructor System.out.println(\"Car initialized\"); }\n}\nOutput:PlaintextVehicle: Sedan\nCar initialized\nHere, super(\"Sedan\") bypasses the default parent constructor, which doesn’t exist^5.class Grandparent { Grandparent() { System.out.println(\"Grandparent\"); }\n}\nclass Parent extends Grandparent { Parent() { // Implicit super() calls Grandparent() System.out.println(\"Parent\"); }\n}\nclass Child extends Parent { Child() { // Implicit super() calls Parent() System.out.println(\"Child\"); }\n}\nOutput:PlaintextGrandparent\nParent\nChild\nChaining propagates up the inheritance hierarchy automatically^2.\nCustom Initialization: Pass subclass parameters to parent constructors for tailored object setup.\nValidation Reuse: Leverage parent validation logic before child-specific checks.\nFramework Compliance: Ensure compatibility with libraries requiring specific parent initialization sequences.\nBy adhering to these rules, super-based chaining maintains Java’s object-oriented integrity while minimizing redundancy.ContructorChainingWithSuper","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Instanceof","level":1,"id":"Instanceof_0"},{"heading":"Citations:","level":3,"id":"Citations_0"},{"heading":"Key Steps:","level":4,"id":"Key_Steps_0"},{"heading":"Answer:","level":2,"id":"Answer_0"},{"heading":"Citations:","level":3,"id":"Citations_1"},{"heading":"Taking Input","level":1,"id":"Taking_Input_0"},{"heading":"<strong>1. Using <code>Scanner</code> Class (Most Common Method)</strong>","level":2,"id":"**1._Using_`Scanner`_Class_(Most_Common_Method)**_0"},{"heading":"Steps:","level":3,"id":"Steps_0"},{"heading":"Example:","level":3,"id":"Example_0"},{"heading":"<strong>2. Using <code>BufferedReader</code></strong>","level":2,"id":"**2._Using_`BufferedReader`**_0"},{"heading":"Steps:","level":3,"id":"Steps_1"},{"heading":"Example:","level":3,"id":"Example_1"},{"heading":"<strong>3. Using <code>Console</code> Class</strong>","level":2,"id":"**3._Using_`Console`_Class**_0"},{"heading":"Steps:","level":3,"id":"Steps_2"},{"heading":"Example:","level":3,"id":"Example_2"},{"heading":"<strong>4. Using Command-Line Arguments</strong>","level":2,"id":"**4._Using_Command-Line_Arguments**_0"},{"heading":"Steps:","level":3,"id":"Steps_3"},{"heading":"Example:","level":3,"id":"Example_3"},{"heading":"<strong>5. Using JavaFX or Swing (For GUI Applications)</strong>","level":2,"id":"**5._Using_JavaFX_or_Swing_(For_GUI_Applications)**_0"},{"heading":"Example with Swing:","level":3,"id":"Example_with_Swing_0"},{"heading":"<strong>Comparison of Methods</strong>","level":2,"id":"**Comparison_of_Methods**_0"},{"heading":"<strong>Best Practices</strong>","level":2,"id":"**Best_Practices**_0"},{"heading":"Java Syntax","level":1,"id":"Java_Syntax_0"},{"heading":"Introduction To Java","level":1,"id":"Introduction_To_Java_0"},{"heading":"Default values","level":1,"id":"Default_values_0"},{"heading":"Converting string to int","level":4,"id":"Converting_string_to_int_0"},{"heading":" This, Super","level":2,"id":"_This,_Super_0"},{"heading":"FinalKeyword","level":1,"id":"FinalKeyword_0"},{"heading":"The <code>final</code> Keyword in Java","level":1,"id":"The_`final`_Keyword_in_Java_0"},{"heading":"Core Uses of <code>final</code>","level":2,"id":"Core_Uses_of_`final`_0"},{"heading":"1. Final Variables","level":3,"id":"1._Final_Variables_0"},{"heading":"2. Final Methods","level":3,"id":"2._Final_Methods_0"},{"heading":"3. Final Classes","level":3,"id":"3._Final_Classes_0"},{"heading":"Key Benefits","level":2,"id":"Key_Benefits_0"},{"heading":"Common Use Cases","level":2,"id":"Common_Use_Cases_0"},{"heading":"Comparison: <code>final</code> vs <code>finally</code> vs <code>finalize</code>","level":2,"id":"Comparison_`final`_vs_`finally`_vs_`finalize`_0"},{"heading":"Best Practices","level":2,"id":"Best_Practices_0"},{"heading":"Citations:","level":2,"id":"Citations_2"},{"heading":"Final, Static","level":2,"id":"Final,_Static_0"},{"heading":"StaticKeyword","level":1,"id":"StaticKeyword_0"},{"heading":"The <code>static</code> Keyword in Java","level":1,"id":"The_`static`_Keyword_in_Java_0"},{"heading":"Core Applications of <code>static</code>","level":2,"id":"Core_Applications_of_`static`_0"},{"heading":"1. Static Variables","level":3,"id":"1._Static_Variables_0"},{"heading":"2. Static Methods","level":3,"id":"2._Static_Methods_0"},{"heading":"3. Static Blocks","level":3,"id":"3._Static_Blocks_0"},{"heading":"4. Static Nested Classes","level":3,"id":"4._Static_Nested_Classes_0"},{"heading":"Key Characteristics","level":2,"id":"Key_Characteristics_0"},{"heading":"Common Use Cases","level":2,"id":"Common_Use_Cases_1"},{"heading":"Best Practices","level":2,"id":"Best_Practices_1"},{"heading":"Static vs. Instance Members","level":2,"id":"Static_vs._Instance_Members_0"},{"heading":"Citations:","level":2,"id":"Citations_3"},{"heading":"StringcompareTo()","level":1,"id":"StringcompareTo()_0"},{"heading":"Stringsplit()","level":1,"id":"Stringsplit()_0"},{"heading":"StringMethods","level":1,"id":"StringMethods_0"},{"heading":"StringgetChars()","level":1,"id":"StringgetChars()_0"},{"heading":"StringConstructor","level":1,"id":"StringConstructor_0"},{"heading":"StringConcat","level":1,"id":"StringConcat_0"},{"heading":"Strings","level":1,"id":"Strings_0"},{"heading":"Strings and Mthods","level":1,"id":"Strings_and_Mthods_0"},{"heading":"Explanation of the Code","level":2,"id":"Explanation_of_the_Code_0"},{"heading":"Key Points","level":2,"id":"Key_Points_0"},{"heading":"Correct Way to Compare Strings for Content Equality","level":2,"id":"Correct_Way_to_Compare_Strings_for_Content_Equality_0"},{"heading":"ThisKeyword","level":1,"id":"ThisKeyword_0"},{"heading":"1. Referring to Current Class Instance Variables","level":2,"id":"1._Referring_to_Current_Class_Instance_Variables_0"},{"heading":"2. Invoking Current Class Methods","level":2,"id":"2._Invoking_Current_Class_Methods_0"},{"heading":"3. Constructor Chaining","level":2,"id":"3._Constructor_Chaining_0"},{"heading":"4. Passing as an Argument","level":2,"id":"4._Passing_as_an_Argument_0"},{"heading":"5. Constructor Argument","level":2,"id":"5._Constructor_Argument_0"},{"heading":"6. Returning the Current Class Instance","level":2,"id":"6._Returning_the_Current_Class_Instance_0"},{"heading":"Key Points","level":2,"id":"Key_Points_1"},{"heading":"Best Practices","level":2,"id":"Best_Practices_2"},{"heading":"ContructorChainingWithThis","level":1,"id":"ContructorChainingWithThis_0"},{"heading":"Constructor Chaining in Java","level":1,"id":"Constructor_Chaining_in_Java_0"},{"heading":"How <code>this</code> Keyword Enables Constructor Chaining","level":2,"id":"How_`this`_Keyword_Enables_Constructor_Chaining_0"},{"heading":"Key Rules for Using <code>this</code>","level":2,"id":"Key_Rules_for_Using_`this`_0"},{"heading":"Benefits of Constructor Chaining","level":2,"id":"Benefits_of_Constructor_Chaining_0"},{"heading":"This, Final, Static, Super","level":1,"id":"This,_Final,_Static,_Super_0"},{"heading":"Constructor Channing ","level":2,"id":"Constructor_Channing__0"},{"heading":"functionPassingValues","level":1,"id":"functionPassingValues_0"},{"heading":"Java Passing Values to Functions: A Simple Guide","level":1,"id":"Java_Passing_Values_to_Functions_A_Simple_Guide_0"},{"heading":"What Does \"Passing Values\" Mean?","level":2,"id":"What_Does_\"Passing_Values\"_Mean?_0"},{"heading":"The Golden Rule: Java is Always Pass-by-Value","level":2,"id":"The_Golden_Rule_Java_is_Always_Pass-by-Value_0"},{"heading":"Two Types of Data in Java","level":2,"id":"Two_Types_of_Data_in_Java_0"},{"heading":"Primitive Types (Simple Values)","level":3,"id":"Primitive_Types_(Simple_Values)_0"},{"heading":"Object References (Complex Values)","level":3,"id":"Object_References_(Complex_Values)_0"},{"heading":"The Key Difference","level":2,"id":"The_Key_Difference_0"},{"heading":"Common Example: Strings","level":2,"id":"Common_Example_Strings_0"},{"heading":"Why strings behave like primitives:","level":3,"id":"Why_strings_behave_like_primitives_0"},{"heading":"Simple Memory Analogy","level":2,"id":"Simple_Memory_Analogy_0"},{"heading":"Practical Tips","level":2,"id":"Practical_Tips_0"},{"heading":"Quick Summary","level":2,"id":"Quick_Summary_0"},{"heading":"Loops","level":1,"id":"Loops_0"},{"heading":"Types of Loops in Java","level":2,"id":"Types_of_Loops_in_Java_0"},{"heading":"For Loop","level":2,"id":"For_Loop_0"},{"heading":"While Loop","level":2,"id":"While_Loop_0"},{"heading":"Do-While Loop","level":2,"id":"Do-While_Loop_0"},{"heading":"Enhanced For-Loop (For-Each Loop)","level":2,"id":"Enhanced_For-Loop_(For-Each_Loop)_0"},{"heading":"Comparing Loops in Java","level":2,"id":"Comparing_Loops_in_Java_0"},{"heading":"Nested Loops","level":2,"id":"Nested_Loops_0"},{"heading":"Summary","level":2,"id":"Summary_0"},{"heading":"Citations:","level":3,"id":"Citations_4"},{"heading":"Methods","level":1,"id":"Methods_0"},{"heading":"Method Definition and Syntax","level":2,"id":"Method_Definition_and_Syntax_0"},{"heading":"Example of a simple method:","level":3,"id":"Example_of_a_simple_method_0"},{"heading":"Method Types","level":2,"id":"Method_Types_0"},{"heading":"Return Type Methods / Value return method","level":3,"id":"Return_Type_Methods_/_Value_return_method_0"},{"heading":"Void Methods / Procedure","level":3,"id":"Void_Methods_/_Procedure_0"},{"heading":"Method Parameters","level":2,"id":"Method_Parameters_0"},{"heading":"No Parameters","level":3,"id":"No_Parameters_0"},{"heading":"Single Parameter","level":3,"id":"Single_Parameter_0"},{"heading":"Multiple Parameters","level":3,"id":"Multiple_Parameters_0"},{"heading":"Variable Arguments (Varargs)","level":3,"id":"Variable_Arguments_(Varargs)_0"},{"heading":"Method Overloading","level":2,"id":"Method_Overloading_0"},{"heading":"Access Modifiers","level":2,"id":"Access_Modifiers_0"},{"heading":"Static vs Instance Methods","level":2,"id":"Static_vs_Instance_Methods_0"},{"heading":"Static Methods","level":3,"id":"Static_Methods_0"},{"heading":"Instance Methods","level":3,"id":"Instance_Methods_0"},{"heading":"Recursive Methods","level":2,"id":"Recursive_Methods_0"},{"heading":"Method with Exception Handling","level":2,"id":"Method_with_Exception_Handling_0"},{"heading":"Method Chaining","level":2,"id":"Method_Chaining_0"},{"heading":"Best Practices for Methods","level":2,"id":"Best_Practices_for_Methods_0"},{"heading":"Arrays","level":1,"id":"Arrays_0"},{"heading":"Java Arrays: Fundamentals and Usage","level":1,"id":"Java_Arrays_Fundamentals_and_Usage_0"},{"heading":"Definition and Declaration","level":2,"id":"Definition_and_Declaration_0"},{"heading":"What is an Array?","level":3,"id":"What_is_an_Array?_0"},{"heading":"Declaration Syntax:","level":3,"id":"Declaration_Syntax_0"},{"heading":"Creating and Initializing Arrays","level":2,"id":"Creating_and_Initializing_Arrays_0"},{"heading":"Memory Allocation:","level":3,"id":"Memory_Allocation_0"},{"heading":"Initialization at Declaration:","level":3,"id":"Initialization_at_Declaration_0"},{"heading":"Accessing and Modifying Array Elements","level":2,"id":"Accessing_and_Modifying_Array_Elements_0"},{"heading":"Element Access:","level":3,"id":"Element_Access_0"},{"heading":"Array Properties","level":2,"id":"Array_Properties_0"},{"heading":"Fixed Size:","level":3,"id":"Fixed_Size_0"},{"heading":"Default Values:","level":3,"id":"Default_Values_0"},{"heading":"Multi-Dimensional Arrays","level":2,"id":"Multi-Dimensional_Arrays_0"},{"heading":"Concept:","level":3,"id":"Concept_0"},{"heading":"Creation of Two-Dimensional Arrays:","level":3,"id":"Creation_of_Two-Dimensional_Arrays_0"},{"heading":"Jagged Arrays:","level":3,"id":"Jagged_Arrays_0"},{"heading":"Arrays as Method Arguments and Return Types","level":2,"id":"Arrays_as_Method_Arguments_and_Return_Types_0"},{"heading":"Passing Arrays to Methods:","level":3,"id":"Passing_Arrays_to_Methods_0"},{"heading":"Returning Arrays from Methods:","level":3,"id":"Returning_Arrays_from_Methods_0"},{"heading":"Array Cloning and Varargs","level":2,"id":"Array_Cloning_and_Varargs_0"},{"heading":"Cloning Arrays:","level":3,"id":"Cloning_Arrays_0"},{"heading":"Variable Length Argument Lists (Varargs):","level":3,"id":"Variable_Length_Argument_Lists_(Varargs)_0"},{"heading":"Citations:","level":2,"id":"Citations_5"},{"heading":"Variable length array list can be involved by:","level":3,"id":"Variable_length_array_list_can_be_involved_by_0"},{"heading":"arrayLength","level":1,"id":"arrayLength_0"},{"heading":"Finding Array Length in Java","level":1,"id":"Finding_Array_Length_in_Java_0"},{"heading":"Regular Arrays (Primitive and Object Arrays)","level":2,"id":"Regular_Arrays_(Primitive_and_Object_Arrays)_0"},{"heading":"Examples with Different Array Types","level":2,"id":"Examples_with_Different_Array_Types_0"},{"heading":"ArrayList and Other Collections","level":2,"id":"ArrayList_and_Other_Collections_0"},{"heading":"Key Differences to Remember","level":2,"id":"Key_Differences_to_Remember_0"},{"heading":"Common Mistakes to Avoid","level":2,"id":"Common_Mistakes_to_Avoid_0"},{"heading":"Practical Example","level":2,"id":"Practical_Example_0"},{"heading":"Array and Enum","level":1,"id":"Array_and_Enum_0"},{"heading":"Constructor","level":1,"id":"Constructor_0"},{"heading":"What are Constructors?","level":2,"id":"What_are_Constructors?_0"},{"heading":"Types of Constructors","level":2,"id":"Types_of_Constructors_0"},{"heading":"Default Constructor","level":3,"id":"Default_Constructor_0"},{"heading":"Parameterized Constructor","level":3,"id":"Parameterized_Constructor_0"},{"heading":"Copy Constructor","level":3,"id":"Copy_Constructor_0"},{"heading":"Constructor Overloading","level":2,"id":"Constructor_Overloading_0"},{"heading":"Constructor Chaining","level":2,"id":"Constructor_Chaining_0"},{"heading":"Private Constructors","level":2,"id":"Private_Constructors_0"},{"heading":"Singleton Pattern","level":3,"id":"Singleton_Pattern_0"},{"heading":"Utility Classes","level":3,"id":"Utility_Classes_0"},{"heading":"Static Initialization Blocks vs Constructors","level":2,"id":"Static_Initialization_Blocks_vs_Constructors_0"},{"heading":"Constructor with Exception Handling","level":2,"id":"Constructor_with_Exception_Handling_0"},{"heading":"Best Practices for Constructors","level":2,"id":"Best_Practices_for_Constructors_0"},{"heading":"Real-World Example: A Complete Class","level":2,"id":"Real-World_Example_A_Complete_Class_0"},{"heading":"Interfaces","level":1,"id":"Interfaces_0"},{"heading":"Inheritance in Java","level":2,"id":"Inheritance_in_Java_0"},{"heading":"Types of Inheritance in Java","level":3,"id":"Types_of_Inheritance_in_Java_0"},{"heading":"Access Modifiers in Inheritance","level":3,"id":"Access_Modifiers_in_Inheritance_0"},{"heading":"Interfaces in Java","level":2,"id":"Interfaces_in_Java_0"},{"heading":"Key Characteristics of Interfaces","level":3,"id":"Key_Characteristics_of_Interfaces_0"},{"heading":"Why Use Interfaces?","level":3,"id":"Why_Use_Interfaces?_0"},{"heading":"Example of Interface Implementation","level":3,"id":"Example_of_Interface_Implementation_0"},{"heading":"Multiple Interfaces","level":3,"id":"Multiple_Interfaces_0"},{"heading":"Default Methods in Interfaces","level":3,"id":"Default_Methods_in_Interfaces_0"},{"heading":"Inheritance vs. Interfaces","level":2,"id":"Inheritance_vs._Interfaces_0"},{"heading":"Enums","level":1,"id":"Enums_0"},{"heading":"Key Characteristics of Enums","level":2,"id":"Key_Characteristics_of_Enums_0"},{"heading":"Enum Features and Usage","level":2,"id":"Enum_Features_and_Usage_0"},{"heading":"Basic Structure","level":3,"id":"Basic_Structure_0"},{"heading":"Constructors and Fields:","level":3,"id":"Constructors_and_Fields_0"},{"heading":"Traversal with <code>values()</code>","level":3,"id":"Traversal_with_`values()`_0"},{"heading":"Advanced Capabilities","level":2,"id":"Advanced_Capabilities_0"},{"heading":"Methods and Abstract Methods:","level":3,"id":"Methods_and_Abstract_Methods_0"},{"heading":"Switch Compatibility:","level":3,"id":"Switch_Compatibility_0"},{"heading":"Important Considerations","level":2,"id":"Important_Considerations_0"},{"heading":"Instantiation:","level":3,"id":"Instantiation_0"},{"heading":"Scope and Declaration:","level":3,"id":"Scope_and_Declaration_0"},{"heading":"Interfaces:","level":3,"id":"Interfaces_1"},{"heading":"Practical Example: Enum with Constructor","level":2,"id":"Practical_Example_Enum_with_Constructor_0"},{"heading":"Common Use Cases","level":2,"id":"Common_Use_Cases_2"},{"heading":"Citations:","level":2,"id":"Citations_6"},{"heading":"EnumsScope","level":1,"id":"EnumsScope_0"},{"heading":"Java Enums: Declaration and Scope Rules","level":1,"id":"Java_Enums_Declaration_and_Scope_Rules_0"},{"heading":"1. Can an enum be declared private?","level":2,"id":"1._Can_an_enum_be_declared_private?_0"},{"heading":"2. Can enums be defined inside any block (e.g., method) in a class?","level":2,"id":"2._Can_enums_be_defined_inside_any_block_(e.g.,_method)_in_a_class?_0"},{"heading":"3. Can multiple enums be defined inside the same class?","level":2,"id":"3._Can_multiple_enums_be_defined_inside_the_same_class?_0"},{"heading":"Example: Enums with Methods and Fields","level":2,"id":"Example_Enums_with_Methods_and_Fields_0"},{"heading":"Key Rules for Java Enums","level":2,"id":"Key_Rules_for_Java_Enums_0"},{"heading":"Citations:","level":2,"id":"Citations_7"},{"heading":"Step-by-Step Analysis:","level":2,"id":"Step-by-Step_Analysis_0"},{"heading":"Conclusion:","level":2,"id":"Conclusion_0"},{"heading":"Citations:","level":3,"id":"Citations_8"},{"heading":"Operators and Precedence","level":1,"id":"Operators_and_Precedence_0"},{"heading":"ShortCircuitLogicalOperators","level":1,"id":"ShortCircuitLogicalOperators_0"},{"heading":"Key Concepts","level":2,"id":"Key_Concepts_0"},{"heading":"Benefits","level":2,"id":"Benefits_0"},{"heading":"Comparison with Non-Short-Circuit Operators","level":2,"id":"Comparison_with_Non-Short-Circuit_Operators_0"},{"heading":"Best Practices","level":2,"id":"Best_Practices_3"},{"heading":"Common Use Cases","level":2,"id":"Common_Use_Cases_3"},{"heading":"Classes","level":1,"id":"Classes_0"},{"heading":"What is a Java Class?","level":2,"id":"What_is_a_Java_Class?_0"},{"heading":"Components of a Java Class","level":2,"id":"Components_of_a_Java_Class_0"},{"heading":"Creating a Class and Using It","level":2,"id":"Creating_a_Class_and_Using_It_0"},{"heading":"Defining a Class","level":3,"id":"Defining_a_Class_0"},{"heading":"Creating an Object","level":3,"id":"Creating_an_Object_0"},{"heading":"Core OOP Principles Illustrated by Classes","level":2,"id":"Core_OOP_Principles_Illustrated_by_Classes_0"},{"heading":"Practical Tips for Using Java Classes","level":2,"id":"Practical_Tips_for_Using_Java_Classes_0"},{"heading":"Variables","level":1,"id":"Variables_0"},{"heading":"Local Variables","level":2,"id":"Local_Variables_0"},{"heading":"Instance Variables","level":2,"id":"Instance_Variables_0"},{"heading":"SuperKeyword","level":1,"id":"SuperKeyword_0"},{"heading":"1. Accessing Superclass Members","level":2,"id":"1._Accessing_Superclass_Members_0"},{"heading":"2. Invoking Superclass Constructor","level":2,"id":"2._Invoking_Superclass_Constructor_0"},{"heading":"3. Resolving Ambiguity","level":2,"id":"3._Resolving_Ambiguity_0"},{"heading":"4. Accessing Static Members","level":2,"id":"4._Accessing_Static_Members_0"},{"heading":"5. Constructor Chaining and Initialization","level":2,"id":"5._Constructor_Chaining_and_Initialization_0"},{"heading":"Key Points to Remember","level":2,"id":"Key_Points_to_Remember_0"},{"heading":"Advantages of Using <code>super</code>","level":2,"id":"Advantages_of_Using_`super`_0"},{"heading":"Citations:","level":2,"id":"Citations_9"},{"heading":"ContructorChainingWithSuper","level":1,"id":"ContructorChainingWithSuper_0"},{"heading":"Constructor Chaining with <code>super</code> in Java","level":1,"id":"Constructor_Chaining_with_`super`_in_Java_0"},{"heading":"Key Principles of <code>super</code>-Based Chaining","level":2,"id":"Key_Principles_of_`super`-Based_Chaining_0"},{"heading":"Implicit vs. Explicit Calls:","level":3,"id":"Implicit_vs._Explicit_Calls_0"},{"heading":"Order of Execution:","level":3,"id":"Order_of_Execution_0"},{"heading":"Rules for Using <code>super</code>","level":2,"id":"Rules_for_Using_`super`_0"},{"heading":"Examples of Constructor Chaining with <code>super</code>","level":2,"id":"Examples_of_Constructor_Chaining_with_`super`_0"},{"heading":"Case 1: Parameterized Parent Constructor","level":3,"id":"Case_1_Parameterized_Parent_Constructor_0"},{"heading":"Case 2: Multi-Level Inheritance","level":3,"id":"Case_2_Multi-Level_Inheritance_0"},{"heading":"Common Errors and Solutions","level":2,"id":"Common_Errors_and_Solutions_0"},{"heading":"When to Use <code>super</code> Chaining","level":2,"id":"When_to_Use_`super`_Chaining_0"}],"links":["java/contructorchainingwiththis.html","java/contructorchainingwiththis.html","java/enumsscope.html","java/enumsscope.html","java/enumsscope.html","java/enumsscope.html","java/shortcircuitlogicaloperators.html","java/shortcircuitlogicaloperators.html","java/instanceof.html","java/instanceof.html","java/instanceof.html","java/instanceof.html","java/contructorchainingwithsuper.html","java/contructorchainingwithsuper.html"],"author":"","coverImageURL":"java/takinginput_scanner_methods.png","fullURL":"java/javaa.html","pathToRoot":"..","attachments":["java/takinginput_scanner_methods.html","java/mcq_string.html"],"createdTime":1748441320911,"modifiedTime":1754243170955,"sourceSize":34593,"sourcePath":"Java/Javaa.canvas","exportPath":"java/javaa.html","showInTree":true,"treeOrder":183,"backlinks":[],"type":"canvas"},"java/loops.html":{"title":"Loops","icon":"","description":"Loops in Java allow you to execute a block of code repeatedly as long as a specified condition remains true, making them essential for writing efficient and concise programs. They come in several types—including the for, while, do-while, and enhanced for (for-each) loops—each suited for different scenarios and control flow requirements<a data-tooltip-position=\"top\" aria-label=\"https://www.scaler.com/topics/java/loops-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scaler.com/topics/java/loops-in-java/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" target=\"_self\">2</a>.The for loop is ideal when the number of iterations is known in advance. It includes three components:\nInitialization: Sets the starting value. Condition/Test Expression: Evaluates to a boolean and determines whether to execute the loop body. Update Expression: Modifies the loop variable after each iteration. Example:javafor (int i = 0; i &lt; 5; i++) { System.out.println(i); }<br>In this example, the loop prints numbers 0 through 4. The initialization (int i = 0) occurs once, the condition (i &lt; 5) is checked before each iteration, and i++ updates the counter after each pass<a data-tooltip-position=\"top\" aria-label=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.w3schools.com/java/java_for_loop.asp\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_for_loop.asp\" target=\"_self\">5</a>.The while loop is useful when the number of iterations is not predetermined. It is an entry-controlled loop, meaning the condition is evaluated before the loop body executes.Example:javaint i = 0; while (i &lt; 5) { System.out.println(i); i++; }<br>Here, if the condition i &lt; 5 is false at the start, the loop body won’t execute at all, making it suitable for scenarios where you might not want any execution if the condition fails immediately<a data-tooltip-position=\"top\" aria-label=\"https://www.scaler.com/topics/java/loops-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scaler.com/topics/java/loops-in-java/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.shiksha.com/online-courses/articles/loops-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.shiksha.com/online-courses/articles/loops-in-java/\" target=\"_self\">3</a>.The do-while loop ensures that the loop body is executed at least once because the condition is evaluated after the block has executed. This makes it an exit-controlled loop.Example:javaint i = 0; do { System.out.println(i); i++; } while (i &lt; 5);<br>The above code prints the numbers 0 through 4, but even if the condition were false initially, the body would have been executed once<a data-tooltip-position=\"top\" aria-label=\"https://www.tutorialspoint.com/java/java_do_while_loop.htm\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_do_while_loop.htm\" target=\"_self\">4</a><a data-tooltip-position=\"top\" aria-label=\"https://www.w3schools.com/java/java_while_loop_do.asp\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_while_loop_do.asp\" target=\"_self\">6</a>.The enhanced for loop, also known as the for-each loop, simplifies iterating over arrays and collections. It eliminates the need for an explicit counter and is more readable when processing each element in a collection.Example:javaint[] numbers = {10, 20, 30, 40}; for (int num : numbers) { System.out.println(num); }<br>This loop iterates over each element in the numbers array and prints it out, streamlining the iteration process<a data-tooltip-position=\"top\" aria-label=\"https://www.w3schools.com/java/java_for_loop.asp\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_for_loop.asp\" target=\"_self\">5</a><a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/for-loop\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/for-loop\" target=\"_self\">7</a>.Below is a table summarizing the key differences and use cases:<br>Each loop type brings its strengths, and choosing the appropriate one depends on the specific requirements of your program<a data-tooltip-position=\"top\" aria-label=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.shiksha.com/online-courses/articles/loops-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.shiksha.com/online-courses/articles/loops-in-java/\" target=\"_self\">3</a>.Java also supports nested loops, where one loop is placed inside another. This is commonly used for iterating over multidimensional arrays or generating patterns. For example:javafor (int i = 1; i &lt;= 3; i++) { for (int j = 1; j &lt;= 3; j++) { System.out.print(i * j + \" \"); } System.out.println(); }<br>This nested loop prints a multiplication table, executing the inner loop completely for every iteration of the outer loop<a data-tooltip-position=\"top\" aria-label=\"https://www.scaler.com/topics/java/loops-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scaler.com/topics/java/loops-in-java/\" target=\"_self\">1</a>.<br>In Java, loops serve as powerful control structures that enable the execution of repetitive tasks with minimal code. The for loop is best when the iteration count is known; the while loop is suited for uncertain iteration counts; and the do-while loop guarantees at least one execution of the loop body. Additionally, the enhanced for-each loop simplifies array and collection traversal, and nested loops offer solutions for more complex structures. Understanding and choosing the right type of loop can lead to more efficient and readable code<a data-tooltip-position=\"top\" aria-label=\"https://www.scaler.com/topics/java/loops-in-java/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scaler.com/topics/java/loops-in-java/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.tutorialspoint.com/java/java_do_while_loop.htm\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_do_while_loop.htm\" target=\"_self\">4</a>.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scaler.com/topics/java/loops-in-java/\" target=\"_self\">https://www.scaler.com/topics/java/loops-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while\" target=\"_self\">https://www.scholarhat.com/tutorial/java/java-loops-for-while-do-while</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.shiksha.com/online-courses/articles/loops-in-java/\" target=\"_self\">https://www.shiksha.com/online-courses/articles/loops-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_do_while_loop.htm\" target=\"_self\">https://www.tutorialspoint.com/java/java_do_while_loop.htm</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_for_loop.asp\" target=\"_self\">https://www.w3schools.com/java/java_for_loop.asp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_while_loop_do.asp\" target=\"_self\">https://www.w3schools.com/java/java_while_loop_do.asp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/for-loop\" target=\"_self\">https://www.programiz.com/java-programming/for-loop</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.digitalocean.com/community/tutorials/java-do-while-loop\" target=\"_self\">https://www.digitalocean.com/community/tutorials/java-do-while-loop</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=vOmZ4JFhRds\" target=\"_self\">https://www.youtube.com/watch?v=vOmZ4JFhRds</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.digitalocean.com/community/tutorials/how-to-use-loops-in-java\" target=\"_self\">https://www.digitalocean.com/community/tutorials/how-to-use-loops-in-java</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.simplilearn.com/tutorials/java-tutorial/for-loop-in-java\" target=\"_self\">https://www.simplilearn.com/tutorials/java-tutorial/for-loop-in-java</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.codechef.com/blogs/loops-in-java\" target=\"_self\">https://www.codechef.com/blogs/loops-in-java</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=gu6Agiy2xBg\" target=\"_self\">https://www.youtube.com/watch?v=gu6Agiy2xBg</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackoverflow.com/questions/12449281/java-using-for-while-and-do-while-loops-to-sum-1-through-100\" target=\"_self\">https://stackoverflow.com/questions/12449281/java-using-for-while-and-do-while-loops-to-sum-1-through-100</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://hostman.com/tutorials/loops-in-java/\" target=\"_self\">https://hostman.com/tutorials/loops-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://scaler.com/topics/images/elements-of-the-loops-in-java.webp?sa=X&amp;ved=2ahUKEwi1xqDI7fuLAxVHc_UHHRUzFKMQ_B16BAgBEAI\" target=\"_self\">https://scaler.com/topics/images/elements-of-the-loops-in-java.webp?sa=X&amp;ved=2ahUKEwi1xqDI7fuLAxVHc_UHHRUzFKMQ_B16BAgBEAI</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=1ceHk9YnHiY\" target=\"_self\">https://www.youtube.com/watch?v=1ceHk9YnHiY</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.studysmarter.co.uk/explanations/computer-science/computer-programming/java-loops/\" target=\"_self\">https://www.studysmarter.co.uk/explanations/computer-science/computer-programming/java-loops/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_while_loop.asp\" target=\"_self\">https://www.w3schools.com/java/java_while_loop.asp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=6djggrlkHY8\" target=\"_self\">https://www.youtube.com/watch?v=6djggrlkHY8</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tpointtech.com/java-for-loop\" target=\"_self\">https://www.tpointtech.com/java-for-loop</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/do-while-loop\" target=\"_self\">https://www.programiz.com/java-programming/do-while-loop</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.freecodecamp.org/news/java-for-loop-example/\" target=\"_self\">https://www.freecodecamp.org/news/java-for-loop-example/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.codecademy.com/resources/docs/java/loops\" target=\"_self\">https://www.codecademy.com/resources/docs/java/loops</a>\n<br>Answer from Perplexity: <a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">pplx.ai/share</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Types of Loops in Java","level":2,"id":"Types_of_Loops_in_Java_0"},{"heading":"For Loop","level":2,"id":"For_Loop_0"},{"heading":"While Loop","level":2,"id":"While_Loop_0"},{"heading":"Do-While Loop","level":2,"id":"Do-While_Loop_0"},{"heading":"Enhanced For-Loop (For-Each Loop)","level":2,"id":"Enhanced_For-Loop_(For-Each_Loop)_0"},{"heading":"Comparing Loops in Java","level":2,"id":"Comparing_Loops_in_Java_0"},{"heading":"Nested Loops","level":2,"id":"Nested_Loops_0"},{"heading":"Summary","level":2,"id":"Summary_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/loops.html","pathToRoot":"..","attachments":[],"createdTime":1748441776463,"modifiedTime":1748441792472,"sourceSize":8743,"sourcePath":"Java/Loops.md","exportPath":"java/loops.html","showInTree":true,"treeOrder":184,"backlinks":[],"type":"markdown"},"java/mcq_string.html":{"title":"mcq_string","icon":"","description":"<img src=\"java/mcq_string.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"java/mcq_string.png","fullURL":"java/mcq_string.html","pathToRoot":"..","attachments":["java/mcq_string.html"],"createdTime":1748441320458,"modifiedTime":1748441320460,"sourceSize":25359,"sourcePath":"Java/mcq_string.png","exportPath":"java/mcq_string.html","showInTree":true,"treeOrder":185,"backlinks":[],"type":"attachment"},"java/methods.html":{"title":"Methods","icon":"","description":"In Java, methods are blocks of code designed to perform specific tasks. They are fundamental building blocks in Java programming that help organize code into reusable modules, enhancing readability and maintainability.Methods are sometimes called procedures or functionA method in Java consists of a method declaration and a method body. The declaration includes:\nAccess modifier (optional) Return type Method name Parameter list (optional) Exception list (optional) Here's the basic syntax:accessModifier returnType methodName(parameterType parameter1, ...) { // Method body - code that performs the task return value; // if return type is not void\n}\npublic int addNumbers(int a, int b) { int sum = a + b; return sum;\n}\nThese methods return a value of the specified data type.public double calculateAverage(int[] numbers) { int sum = 0; for (int num : numbers) { sum += num; } return (double) sum / numbers.length;\n}\nMethods that don't return any value use the void keyword and is called procedure.public void displayMessage(String message) { System.out.println(\"Message: \" + message);\n}\npublic String getCurrentTime() { return java.time.LocalTime.now().toString();\n}\npublic double squareNumber(double num) { return num * num;\n}\npublic String formatName(String firstName, String lastName) { return lastName + \", \" + firstName;\n}\npublic int findMax(int... numbers) { int max = Integer.MIN_VALUE; for (int num : numbers) { if (num &gt; max) { max = num; } } return max;\n}\nMethod overloading allows multiple methods with the same name but different parameter lists.public int multiply(int a, int b) { return a * b;\n} public double multiply(double a, double b) { return a * b;\n} public int multiply(int a, int b, int c) { return a * b * c;\n}\nAccess modifiers control method visibility:\npublic: Accessible from any class protected: Accessible within the same package and subclasses default (no modifier): Accessible only within the same package private: Accessible only within the same class public void publicMethod() { System.out.println(\"Can be accessed from anywhere\");\n} private void privateMethod() { System.out.println(\"Can only be accessed within this class\");\n}\nStatic methods belong to the class rather than instances and can be called without creating objects.public static int power(int base, int exponent) { int result = 1; for (int i = 0; i &lt; exponent; i++) { result *= base; } return result;\n} // Called as: ClassName.power(2, 3);\nInstance methods require an object of the class to be created before they can be called.public boolean isPalindrome(String text) { String reversed = new StringBuilder(text).reverse().toString(); return text.equalsIgnoreCase(reversed);\n} // Called as: ObjectName.isPalindrome(\"radar\");\nRecursive methods call themselves to solve problems by breaking them down.public int factorial(int n) { if (n &lt;= 1) { return 1; } return n * factorial(n - 1);\n}\npublic int divide(int a, int b) throws ArithmeticException { if (b == 0) { throw new ArithmeticException(\"Cannot divide by zero\"); } return a / b;\n}\npublic class Calculator { private int result = 0; public Calculator add(int value) { result += value; return this; } public Calculator subtract(int value) { result -= value; return this; } public int getResult() { return result; }\n} // Used as: int answer = new Calculator().add(5).subtract(2).getResult(); Keep methods short and focused on a single task Use descriptive method names (usually verb-noun format) Limit the number of parameters (ideally less than 4) Document methods with comments Handle exceptions appropriately Design methods to be reusable Follow consistent naming conventions By mastering methods in Java, you create more organized, maintainable, and reusable code that follows the principles of object-oriented programming.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Method Definition and Syntax","level":2,"id":"Method_Definition_and_Syntax_0"},{"heading":"Example of a simple method:","level":3,"id":"Example_of_a_simple_method_0"},{"heading":"Method Types","level":2,"id":"Method_Types_0"},{"heading":"Return Type Methods / Value return method","level":3,"id":"Return_Type_Methods_/_Value_return_method_0"},{"heading":"Void Methods / Procedure","level":3,"id":"Void_Methods_/_Procedure_0"},{"heading":"Method Parameters","level":2,"id":"Method_Parameters_0"},{"heading":"No Parameters","level":3,"id":"No_Parameters_0"},{"heading":"Single Parameter","level":3,"id":"Single_Parameter_0"},{"heading":"Multiple Parameters","level":3,"id":"Multiple_Parameters_0"},{"heading":"Variable Arguments (Varargs)","level":3,"id":"Variable_Arguments_(Varargs)_0"},{"heading":"Method Overloading","level":2,"id":"Method_Overloading_0"},{"heading":"Access Modifiers","level":2,"id":"Access_Modifiers_0"},{"heading":"Static vs Instance Methods","level":2,"id":"Static_vs_Instance_Methods_0"},{"heading":"Static Methods","level":3,"id":"Static_Methods_0"},{"heading":"Instance Methods","level":3,"id":"Instance_Methods_0"},{"heading":"Recursive Methods","level":2,"id":"Recursive_Methods_0"},{"heading":"Method with Exception Handling","level":2,"id":"Method_with_Exception_Handling_0"},{"heading":"Method Chaining","level":2,"id":"Method_Chaining_0"},{"heading":"Best Practices for Methods","level":2,"id":"Best_Practices_for_Methods_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/methods.html","pathToRoot":"..","attachments":[],"createdTime":1748441833220,"modifiedTime":1748441833223,"sourceSize":4914,"sourcePath":"Java/Methods.md","exportPath":"java/methods.html","showInTree":true,"treeOrder":186,"backlinks":[],"type":"markdown"},"java/more-about-static.html":{"title":"more about static","icon":"","description":"For static variables:\nThey are allocated memory only once when the class is loaded into memory[1][2].\nThere is only one copy of a static variable shared among all instances of the class[1][2].\nStatic variables are stored in the heap memory[3].\nFor static methods:\nThey belong to the class rather than any specific instance[4].\nThey are stored in the Permanent Generation space of the heap[4].\nTheir local variables and arguments are stored on the stack[4].\nThe key points to remember about static members are: Memory efficiency: Static members are allocated memory only once during program execution[2][4]. Shared across instances: All instances of a class share the same static variables[1][2]. Class-level access: Static members can be accessed using the class name, without creating an object of the class[1][4]. Persistence: Static variables retain their values between function calls[6]. However, it's important to note that while static members have a class-wide scope, they are not truly global variables. Their visibility is still limited by the access modifiers and the package in which they are declared[6].","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"java/more-about-static.html","pathToRoot":"..","attachments":[],"createdTime":1748441321095,"modifiedTime":1748441321346,"sourceSize":1148,"sourcePath":"Java/more about static.md","exportPath":"java/more-about-static.html","showInTree":true,"treeOrder":187,"backlinks":["java/java-syntax.html"],"type":"markdown"},"java/operators-and-precedence.html":{"title":"Operators and Precedence","icon":"","description":"<a class=\"internal-link\" data-href=\"ShortCircuitLogicalOperators.md\" href=\"java/shortcircuitlogicaloperators.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"ShortCircuitLogicalOperators.md\" href=\"java/shortcircuitlogicaloperators.html\" target=\"_self\" rel=\"noopener nofollow\"></a>Java provides several types of operators that perform various operations on variables and values. Here's a comprehensive table of Java operators and their precedence, listed from highest to lowest precedence:This table covers the main types of operators in Java:\nArithmetic operators: +, -, *, /, %\nRelational operators: &lt;, &gt;, &lt;=, &gt;=, Logical operators: &amp;&amp;, ||, !\nBitwise operators: &amp;, |, ^, ~, &lt;&lt;, &gt;&gt;, &gt;&gt;&gt;\nAssignment operators: =, +=, -=, *=, /=, %=, &amp;=, |=, ^=, &lt;&lt;=, &gt;&gt;=, &gt;&gt;&gt;=\nUnary operators: +, -, ++, --\nTernary operator: ?:\ninstanceof operator\nCompound Assignments: +=, -=, *=, /+, %=\nUnderstanding operator precedence is crucial for writing correct and efficient Java code. When operators with higher precedence appear in an expression, they are evaluated before operators with lower precedence. Operators with equal precedence are evaluated based on their associativity[1][2][5].","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["java/shortcircuitlogicaloperators.html","java/shortcircuitlogicaloperators.html"],"author":"","coverImageURL":"","fullURL":"java/operators-and-precedence.html","pathToRoot":"..","attachments":[],"createdTime":1748441321404,"modifiedTime":1749740357895,"sourceSize":2138,"sourcePath":"Java/Operators and Precedence.md","exportPath":"java/operators-and-precedence.html","showInTree":true,"treeOrder":188,"backlinks":[],"type":"markdown"},"java/polymorphism.html":{"title":"Polymorphism","icon":"","description":" Polymorphism in Java is one of the core concepts of object-oriented programming that allows objects to take on many different forms. The word comes from two Greek words: \"poly\" meaning \"many\" and \"morph\" meaning \"forms.\"In simple terms, polymorphism allows different objects to respond to the same method call in different ways. It lets you write code that can work with objects of multiple classes without knowing the specific class of each object. Think of it like having a remote control that works with different devices - the same \"power\" button does different things depending on whether you're controlling a TV, stereo, or air conditioner. This happens when you have multiple methods with the same name but different parameters within the same class. The correct method is chosen based on the arguments you pass.public class Calculator { public int add(int a, int b) { return a + b; } public double add(double a, double b) { return a + b; }\n}\nThis occurs when a subclass provides its own implementation of a method that already exists in its parent class. The specific method that gets executed is determined at runtime.class Animal { public void animalSound() { System.out.println(\"The animal makes a sound\"); }\n} class Dog extends Animal { @Override // Good practice: explicitly override public void animalSound() { System.out.println(\"The dog says: bow wow\"); }\n} class Cat extends Animal { @Override // Good practice: explicitly override public void animalSound() { System.out.println(\"The cat says: meow\"); }\n}\nWhen you create objects and call the same method on different types, each object responds in its own way:Animal myAnimal = new Animal();\nAnimal myDog = new Dog();\nAnimal myCat = new Cat(); myAnimal.animalSound(); // \"The animal makes a sound\"\nmyDog.animalSound(); // \"The dog says: bow wow\"\nmyCat.animalSound(); // \"The cat says: meow\"\nEven though all three variables are declared as Animal type, each one behaves differently based on the actual object it contains.\nCode Reusability: You can reuse existing code with new classes without modification.\nConsistency: Instead of creating different method names like renderSquare() and renderCircle(), you can use one method name render() that works differently for each shape.\nFlexibility: You can add new classes later without changing existing code.\nCleaner Code: It makes your codebase more maintainable and easier to understand.\nConsider a drawing application where you have different shapes:class Shape { public void render() { System.out.println(\"Rendering shape...\"); }\n} class Circle extends Shape { @Override public void render() { System.out.println(\"Rendering Circle...\"); }\n} class Square extends Shape { @Override public void render() { System.out.println(\"Rendering Square...\"); }\n}\nWith polymorphism, you can treat all shapes the same way, even though each renders differently. This is much simpler than having separate methods for each shape type.Polymorphism essentially allows you to write more flexible and maintainable code by enabling the same interface to work with different underlying implementations.\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://trainings.internshala.com/blog/polymorphism-in-java/\" target=\"_self\">https://trainings.internshala.com/blog/polymorphism-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_polymorphism.asp\" target=\"_self\">https://www.w3schools.com/java/java_polymorphism.asp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.datacamp.com/doc/java/polymorphism\" target=\"_self\">https://www.datacamp.com/doc/java/polymorphism</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geekster.in/articles/polymorphism-in-java/\" target=\"_self\">https://www.geekster.in/articles/polymorphism-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_polymorphism.htm\" target=\"_self\">https://www.tutorialspoint.com/java/java_polymorphism.htm</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=jhDUxynEQRI\" target=\"_self\">https://www.youtube.com/watch?v=jhDUxynEQRI</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/polymorphism\" target=\"_self\">https://www.programiz.com/java-programming/polymorphism</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.oracle.com/javase/tutorial/java/IandI/polymorphism.html\" target=\"_self\">https://docs.oracle.com/javase/tutorial/java/IandI/polymorphism.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://herovired.com/learning-hub/blogs/polymorphism-in-java/\" target=\"_self\">https://herovired.com/learning-hub/blogs/polymorphism-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.simplilearn.com/tutorials/java-tutorial/java-polymorphism\" target=\"_self\">https://www.simplilearn.com/tutorials/java-tutorial/java-polymorphism</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Polymorphism in Java","level":1,"id":"Polymorphism_in_Java_0"},{"heading":"What is Polymorphism?","level":2,"id":"What_is_Polymorphism?_0"},{"heading":"Types of Polymorphism","level":2,"id":"Types_of_Polymorphism_0"},{"heading":"Compile-time Polymorphism (Method Overloading)","level":3,"id":"Compile-time_Polymorphism_(Method_Overloading)_0"},{"heading":"Runtime Polymorphism (Method Overriding)","level":3,"id":"Runtime_Polymorphism_(Method_Overriding)_0"},{"heading":"How It Works in Practice","level":2,"id":"How_It_Works_in_Practice_0"},{"heading":"Benefits of Polymorphism","level":2,"id":"Benefits_of_Polymorphism_0"},{"heading":"Real-World Example","level":2,"id":"Real-World_Example_0"},{"heading":"Citations:","level":2,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/polymorphism.html","pathToRoot":"..","attachments":[],"createdTime":1748064361314,"modifiedTime":1748365445972,"sourceSize":4866,"sourcePath":"Java/Polymorphism.md","exportPath":"java/polymorphism.html","showInTree":true,"treeOrder":189,"backlinks":[],"type":"markdown"},"java/shortcircuitlogicaloperators.html":{"title":"ShortCircuitLogicalOperators","icon":"","description":"Short-circuit logical operators in Java optimize boolean evaluations by skipping unnecessary checks once the result is determined. The primary operators are &amp;&amp; (logical AND) and || (logical OR), which differ from their non-short-circuit counterparts (&amp; and |) by evaluating the right-hand operand only if necessary. Short-Circuit AND (&amp;&amp;) Returns true only if both operands are true. If the left operand is false, the right operand is not evaluated (since the result is already false). Example:\nif (denom != 0 &amp;&amp; num / denom &gt; 10) // Safe: avoids division by zero if denom is 0 Here, num / denom is evaluated only if denom != 015. Short-Circuit OR (||) Returns true if either operand is true. If the left operand is true, the right operand is not evaluated. Example:\nif (obj == null || obj.isValid()) // Skips isValid() check if obj is null Efficiency: Redundant computations are avoided.\nif (fastCheck() || slowCheck()) // slowCheck() runs only if fastCheck() returns false Error Prevention: Safeguards against runtime exceptions (e.g., NullPointerException, division by zero)15. Control Flow: Acts like a conditional check, enabling safe chaining of dependent operations. Example of side-effect difference:int x = 0;\nif (false &amp;&amp; (x++ &gt; 0)) { ... } // x remains 0 (right operand not evaluated)\nif (false &amp; (x++ &gt; 0)) { ... } // x becomes 1 (both operands evaluated) Order Matters: Place lightweight or critical checks first.\nif (data != null &amp;&amp; data.isValid()) // Prevents NullPointerException Avoid Side Effects: Ensure the right operand doesn’t rely on side effects (e.g., variable modification), as it may not execute. Use for Safety: Protect against exceptions in dependent operations. Validation Chains:\nif (user != null &amp;&amp; user.isActive() &amp;&amp; user.hasPermission()) Resource Checks:\nif (file.exists() || file.createNewFile()) By leveraging short-circuit operators, you enhance both performance and reliability in Java applications^2^7.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Key Concepts","level":2,"id":"Key_Concepts_0"},{"heading":"Benefits","level":2,"id":"Benefits_0"},{"heading":"Comparison with Non-Short-Circuit Operators","level":2,"id":"Comparison_with_Non-Short-Circuit_Operators_0"},{"heading":"Best Practices","level":2,"id":"Best_Practices_0"},{"heading":"Common Use Cases","level":2,"id":"Common_Use_Cases_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/shortcircuitlogicaloperators.html","pathToRoot":"..","attachments":[],"createdTime":1748441748323,"modifiedTime":1748441762369,"sourceSize":2852,"sourcePath":"Java/ShortCircuitLogicalOperators.md","exportPath":"java/shortcircuitlogicaloperators.html","showInTree":true,"treeOrder":190,"backlinks":["java/operators-and-precedence.html"],"type":"markdown"},"java/statickeyword.html":{"title":"StaticKeyword","icon":"","description":"The static keyword in Java is used to create class-level members (variables, methods, blocks, and nested classes) that belong to the class itself rather than individual instances. It optimizes memory usage and enables functionality that operates independently of object creation. Below is a detailed breakdown of its usage:Definition: Shared across all class instances; only one copy exists in memory.Use Cases:\nTrack common properties (e.g., company name for employees)6.\nDefine global constants when combined with final (e.g., public static final double PI = 3.14159;)2.\nclass Employee { static int employeeCount = 0; // Shared by all instances String name; public Employee(String name) { this.name = name; employeeCount++; // Increments for every new object }\n}\nDefinition: Called without instantiating the class.Rules:\nCan only access static variables/methods directly^2.\nCannot use this or super keywords^8.\nclass MathUtils { static int add(int a, int b) { return a + b; // Utility method }\n}\n// Usage: MathUtils.add(5, 3);\nDefinition: Executed once when the class is loaded into memory.Purpose: Initialize static variables or perform setup tasks^9.class Database { static String connection; static { connection = \"jdbc:mysql://localhost:3306/mydb\"; // One-time setup }\n}\nDefinition: Nested classes declared static do not require an outer class instance^8.Use Case: Group utility classes logically within another class.class Outer { static class Nested { void display() { System.out.println(\"Static nested class\"); } }\n}\n// Usage: Outer.Nested nested = new Outer.Nested(); Memory Efficiency: Static members are allocated memory once during class loading^5.\nAccess Syntax: Accessed via ClassName.memberName, not object references^4.\nThread Safety: Static variables are shared across threads and may require synchronization in concurrent environments^2. Utility Classes:\npublic final class StringUtils { private StringUtils() {} // Prevent instantiation public static boolean isEmpty(String s) { return s == null || s.trim().isEmpty(); }\n} Global Constants:\npublic static final String API_KEY = \"12345\"; // Immutable constant Counters/Shared State:\nstatic int requestCount = 0; // Track requests across instances Minimize Static Variables: Overuse can lead to high memory consumption and thread-safety issues^5.\nCombine with final: Ensure immutability for constants (e.g., static final)^2.\nAvoid Static for Object-Specific Logic: Instance methods are preferable for state-dependent operations^8.\nBy leveraging static, developers can optimize memory usage, create utility functions, and enforce shared state across objects, while adhering to Java’s object-oriented principles^3.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"The <code>static</code> Keyword in Java","level":1,"id":"The_`static`_Keyword_in_Java_0"},{"heading":"Core Applications of <code>static</code>","level":2,"id":"Core_Applications_of_`static`_0"},{"heading":"1. Static Variables","level":3,"id":"1._Static_Variables_0"},{"heading":"2. Static Methods","level":3,"id":"2._Static_Methods_0"},{"heading":"3. Static Blocks","level":3,"id":"3._Static_Blocks_0"},{"heading":"4. Static Nested Classes","level":3,"id":"4._Static_Nested_Classes_0"},{"heading":"Key Characteristics","level":2,"id":"Key_Characteristics_0"},{"heading":"Common Use Cases","level":2,"id":"Common_Use_Cases_0"},{"heading":"Best Practices","level":2,"id":"Best_Practices_0"},{"heading":"Static vs. Instance Members","level":2,"id":"Static_vs._Instance_Members_0"},{"heading":"Citations:","level":2,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/statickeyword.html","pathToRoot":"..","attachments":[],"createdTime":1748443439860,"modifiedTime":1748443439861,"sourceSize":3711,"sourcePath":"Java/StaticKeyword.md","exportPath":"java/statickeyword.html","showInTree":true,"treeOrder":191,"backlinks":[],"type":"markdown"},"java/stringcompareto().html":{"title":"StringcompareTo()","icon":"","description":"The Java String compareTo() method compares two strings lexicographically—that is, it evaluates the Unicode values of the characters in both strings to determine their ordering. It returns an integer that signals whether one string is less than, equal to, or greater than the other based on dictionary order.\nSyntax:\nstr1.compareTo(str2) where both str1 and str2 are String objects<a data-tooltip-position=\"top\" aria-label=\"https://beginnersbook.com/2013/12/java-string-compareto-method-example/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://beginnersbook.com/2013/12/java-string-compareto-method-example/\" target=\"_self\">1</a>. Return Behavior: <br>Returns 0 if both strings are exactly equal.<a data-tooltip-position=\"top\" aria-label=\"https://beginnersbook.com/2013/12/java-string-compareto-method-example/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://beginnersbook.com/2013/12/java-string-compareto-method-example/\" target=\"_self\">1</a> <br>Returns a negative integer if the invoking string comes before the argument in lexicographical order.<a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/library/string/compareto\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/library/string/compareto\" target=\"_self\">2</a> <br>Returns a positive integer if the invoking string comes after the argument in lexicographical order.<a data-tooltip-position=\"top\" aria-label=\"https://www.w3schools.com/java/ref_string_compareto.asp\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/ref_string_compareto.asp\" target=\"_self\">3</a> Below is a simple table summarizing the outcomes:\nCharacter-by-Character Comparison:<br>\nThe method compares corresponding characters of the two strings one at a time. When it finds the first pair of characters that differ, it returns the difference between their Unicode values. If no differences are found in the overlapping part and one string is longer than the other, the shorter string is considered lexicographically smaller.<a data-tooltip-position=\"top\" aria-label=\"https://beginnersbook.com/2013/12/java-string-compareto-method-example/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://beginnersbook.com/2013/12/java-string-compareto-method-example/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/library/string/compareto\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/library/string/compareto\" target=\"_self\">2</a> Case Sensitivity:<br>\nThe comparison is case-sensitive, meaning uppercase and lowercase letters are distinguished based on their Unicode values. For example, \"Hello\".compareTo(\"hello\") does not return 0 because the Unicode value of 'H' is different from that of 'h'.<a data-tooltip-position=\"top\" aria-label=\"https://codegym.cc/groups/posts/java-string-compareto-method\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://codegym.cc/groups/posts/java-string-compareto-method\" target=\"_self\">4</a>\nFor case-insensitive comparisons, use the compareToIgnoreCase() method instead. Handling Null:<br>\nPassing null to compareTo() will cause a NullPointerException because the method expects a valid String to compare against.<a data-tooltip-position=\"top\" aria-label=\"https://www.reddit.com/r/javahelp/comments/i5yku8/understanding_the_compareto_method/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.reddit.com/r/javahelp/comments/i5yku8/understanding_the_compareto_method/\" target=\"_self\">6</a> javapublic class CompareToExample { public static void main(String[] args) { String s1 = \"apple\"; String s2 = \"banana\"; int result = s1.compareTo(s2); if(result &lt; 0) { System.out.println(s1 + \" comes before \" + s2); } else if(result &gt; 0) { System.out.println(s1 + \" comes after \" + s2); } else { System.out.println(s1 + \" is equal to \" + s2); } } }In this example, \"apple\" will compare as less than \"banana\", so the method returns a negative value.javapublic class CaseSensitiveExample { public static void main(String[] args) { String s1 = \"Hello\"; String s2 = \"hello\"; System.out.println(s1.compareTo(s2)); // Likely returns a negative value since 'H' &lt; 'h' } }Here, even though the words appear similar, the difference in case affects the result.javapublic class EqualStringExample { public static void main(String[] args) { String s1 = \"java\"; String s2 = \"java\"; System.out.println(s1.compareTo(s2)); // Returns 0 because both strings are equal. } }In this case, since both strings are the same, the method returns 0.The compareTo() method is a powerful tool for comparing strings in Java. It works by comparing the Unicode values of characters, returning an integer that indicates the relative order of two strings. This method is essential in sorting operations and when implementing custom comparison logic in Java programs. Understanding its behavior—especially its case sensitivity and handling of string length differences—is key to using it effectively.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://beginnersbook.com/2013/12/java-string-compareto-method-example/\" target=\"_self\">https://beginnersbook.com/2013/12/java-string-compareto-method-example/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/library/string/compareto\" target=\"_self\">https://www.programiz.com/java-programming/library/string/compareto</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/ref_string_compareto.asp\" target=\"_self\">https://www.w3schools.com/java/ref_string_compareto.asp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://codegym.cc/groups/posts/java-string-compareto-method\" target=\"_self\">https://codegym.cc/groups/posts/java-string-compareto-method</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.scaler.com/topics/compareto-in-java/\" target=\"_self\">https://www.scaler.com/topics/compareto-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.reddit.com/r/javahelp/comments/i5yku8/understanding_the_compareto_method/\" target=\"_self\">https://www.reddit.com/r/javahelp/comments/i5yku8/understanding_the_compareto_method/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.upgrad.com/tutorials/software-engineering/java-tutorial/compareto-in-java/\" target=\"_self\">https://www.upgrad.com/tutorials/software-engineering/java-tutorial/compareto-in-java/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=KXeAmK5uTTY\" target=\"_self\">https://www.youtube.com/watch?v=KXeAmK5uTTY</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=VtGvD1BawPk\" target=\"_self\">https://www.youtube.com/watch?v=VtGvD1BawPk</a>\n<br>Answer from Perplexity: <a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">pplx.ai/share</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Java compareTo()","level":1,"id":"Java_compareTo()_0"},{"heading":"Syntax and Return Values","level":2,"id":"Syntax_and_Return_Values_0"},{"heading":"How It Works","level":2,"id":"How_It_Works_0"},{"heading":"Examples","level":2,"id":"Examples_0"},{"heading":"Basic Example","level":2,"id":"Basic_Example_0"},{"heading":"Example with Case Sensitivity","level":2,"id":"Example_with_Case_Sensitivity_0"},{"heading":"Example: Equal Strings","level":2,"id":"Example_Equal_Strings_0"},{"heading":"Summary","level":2,"id":"Summary_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/stringcompareto().html","pathToRoot":"..","attachments":[],"createdTime":1748443143426,"modifiedTime":1748443143432,"sourceSize":5611,"sourcePath":"Java/StringcompareTo().md","exportPath":"java/stringcompareto().html","showInTree":true,"treeOrder":192,"backlinks":["java/stringmethods.html"],"type":"markdown"},"java/stringconcat.html":{"title":"StringConcat","icon":"","description":"String concatenation in Java involves combining two or more strings into a single, new string1. Here's a breakdown:The most common way to concatenate strings in Java is by using the + operator1. When used with strings, this operator joins them together.String strOb1 = \"Ravi\";\nString strOb2 = \"LPU\";\nString strOb3 = strOb1 + \" and \" + strOb2;\nSystem.out.println(strOb3); // Outputs: Ravi and LPU\nJava allows you to concatenate strings with other data types directly1. The Java compiler automatically converts the other data type into a string before concatenation.Javaint age = 9;\nString s = \"He is \" + age + \" years old.\";\nSystem.out.println(s); // Outputs: He is 9 years old.\nThe concat() method performs the same function as +1.JavaString s1 = \"one\";\nString s2 = s1.concat(\"two\");\nSystem.out.println(s2); // Output: onetwo\nWhen you concatenate strings in Java, remember that String objects are immutable1. This means that the original strings are not modified. Instead, a new String object is created containing the combined value.String concatenation can be used to avoid long lines in the code1.JavaString longStr = \"This could have been\" + \"a very long line that would have\" + \"wrapped around. But string\" + \"concatenation prevents this.\";\nSystem.out.println(longStr);\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Using the + Operator","level":2,"id":"Using_the_+_Operator_0"},{"heading":"String Concatenation with Other Data Types","level":2,"id":"String_Concatenation_with_Other_Data_Types_0"},{"heading":"Using <code>concat()</code> method","level":2,"id":"Using_`concat()`_method_0"},{"heading":"Immutability","level":2,"id":"Immutability_0"},{"heading":"Concatenation to Prevent Long Lines","level":2,"id":"Concatenation_to_Prevent_Long_Lines_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/stringconcat.html","pathToRoot":"..","attachments":[],"createdTime":1748443034821,"modifiedTime":1748443041946,"sourceSize":1520,"sourcePath":"Java/StringConcat.md","exportPath":"java/stringconcat.html","showInTree":true,"treeOrder":193,"backlinks":[],"type":"markdown"},"java/stringconstructor.html":{"title":"StringConstructor","icon":"","description":"In Java, string constructors allow you to create String objects from various data sources. Here’s a detailed breakdown of common constructors with examples:Creates an empty string (generally not useful):String s = new String(); // Equivalent to s = \"\";\nCreates a copy of an existing string (immutability makes this redundant in most cases):String original = \"Hello\";\nString copy = new String(original); System.out.println(copy); // Output: Hello\nchar[] chars = {'J', 'a', 'v', 'a'};\nString s = new String(chars); System.out.println(s); // Output: Java\nchar[] chars = {'A', 'B', 'C', 'D', 'E'};\nString s = new String(chars, 1, 3); // Start index=1, length=3\nSystem.out.println(s); // Output: BCD\nbyte[] bytes = {72, 101, 108, 108, 111}; // ASCII values for \"Hello\"\nString s = new String(bytes); System.out.println(s); // Output: Hello\nString s = new String(bytes, StandardCharsets.UTF_8); String s = new String(bytes, 1, 3); // Start index=1, length=3\nConverts StringBuffer/StringBuilder to String:StringBuffer sb = new StringBuffer(\"Hello\");\nString s = new String(sb); // Prefer sb.toString()\nSystem.out.println(s); // Output: Hello\nCreates a string from Unicode code points:int[] codePoints = {65, 66, 67, 68}; // Unicode for A, B, C, D\nString s = new String(codePoints, 0, 4); System.out.println(s); // Output: ABCD String(byte[] bytes, int hibyte): Legacy method for ASCII-to-char conversion.\nString(byte[] bytes, int start, int length): Use charset-based alternatives instead. Immutability: All String objects created via constructors are immutable36.\nCharset Dependency: Byte-based constructors use the platform’s default charset unless specified24.\nEfficiency: Prefer string literals (String s = \"value\") for simplicity unless working with dynamic data6.\npublic class ConstructorDemo { public static void main(String[] args) { // From char array char[] chars = {'D', 'a', 't', 'a'}; String s1 = new String(chars); System.out.println(s1); // Data // From byte array (ASCII) byte[] bytes = {68, 97, 116, 97}; String s2 = new String(bytes); System.out.println(s2); // Data // From substring of char array String s3 = new String(chars, 1, 2); System.out.println(s3); // at }\n}\nFor most use cases, direct assignment (String s = \"value\") is preferred, but constructors are essential when working with dynamic data sources like I/O streams or network packets26.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"String Constructors in Java","level":1,"id":"String_Constructors_in_Java_0"},{"heading":"1. Empty String Constructor","level":2,"id":"1._Empty_String_Constructor_0"},{"heading":"2. String from Another String","level":2,"id":"2._String_from_Another_String_0"},{"heading":"3. Character Array Constructors","level":2,"id":"3._Character_Array_Constructors_0"},{"heading":"From Entire Array:","level":3,"id":"From_Entire_Array_0"},{"heading":"From Subarray:","level":3,"id":"From_Subarray_0"},{"heading":"4. Byte Array Constructors","level":2,"id":"4._Byte_Array_Constructors_0"},{"heading":"Decodes bytes using the platform's default charset:","level":3,"id":"Decodes_bytes_using_the_platform's_default_charset_0"},{"heading":"With Explicit Charset:","level":3,"id":"With_Explicit_Charset_0"},{"heading":"From Subarray of Bytes:","level":3,"id":"From_Subarray_of_Bytes_0"},{"heading":"5. StringBuffer/StringBuilder Constructors","level":2,"id":"5._StringBuffer/StringBuilder_Constructors_0"},{"heading":"6. Unicode Code Points","level":2,"id":"6._Unicode_Code_Points_0"},{"heading":"7. Deprecated/Obsolete Constructors","level":2,"id":"7._Deprecated/Obsolete_Constructors_0"},{"heading":"Key Points","level":2,"id":"Key_Points_0"},{"heading":"Example Program","level":2,"id":"Example_Program_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/stringconstructor.html","pathToRoot":"..","attachments":[],"createdTime":1748443012679,"modifiedTime":1748443012680,"sourceSize":3145,"sourcePath":"Java/StringConstructor.md","exportPath":"java/stringconstructor.html","showInTree":true,"treeOrder":194,"backlinks":[],"type":"markdown"},"java/stringgetchars().html":{"title":"StringgetChars()","icon":"","description":"String s = “KAMAL”;\nchar b[] = new char [10]; b[0] = ‘N’; b[1] = ‘E’;\nb[2] = ‘E’; b[3] = ‘L’;\ns.getChars(0, 5, b, 4);\nSystem.out.println(b);\nThis code demonstrates how to use the getChars() method to copy characters from a string into a specific position within a character array. Here's a breakdown of what happens:\nString Initialization:\nString s = \"KAMAL\";\nThis creates a string object containing the value \"KAMAL\". Character Array Creation and Initialization:\nchar b[] = new char;\nThis allocates a character array named b with 10 elements.\nThe following lines initialize the first four positions of the array: b = 'N'; b[1] = 'E'; b[2] = 'E'; b[3] = 'L';\nAt this point, the array holds: text [ 'N', 'E', 'E', 'L', ?, ?, ?, ?, ?, ? ] The question marks represent positions that have not been explicitly set yet. Using getChars() Method:\ns.getChars(0, 5, b, 4);\nThis line copies characters from the string s into the array b. The parameters 0 and 5 specify the beginning and the end index in the string s (i.e., it copies all characters from index 0 to index 4, which is \"KAMAL\"). The parameter 4 indicates that the copying should start at index 4 in the destination array b.\nAfter this method call, the array b is updated as follows: text [ 'N', 'E', 'E', 'L', 'K', 'A', 'M', 'A', 'L', ? ] The last element remains unchanged (typically the default value \\u0000). Printing the Result:\nSystem.out.println(b);\nThis prints the character array. Since Java converts the char array to a string when printing, the output will display: text NEELKAMAL In summary, the code creates a string \"KAMAL\", prepares a character array with pre-set values \"NEEL\" at the beginning, and then copies the string \"KAMAL\" into the array starting at position 4. As a result, the final printed output is \"NEELKAMAL\". This example illustrates how getChars() can be used to inject one string into a specific segment of an existing char array, as explained in various Java tutorials<a data-tooltip-position=\"top\" aria-label=\"https://www.w3schools.com/java/ref_string_getchars.asp\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/ref_string_getchars.asp\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.tutorialspoint.com/java/lang/string_getchars.htm\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/lang/string_getchars.htm\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://www.w3resource.com/java-tutorial/string/string_getchars.php\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3resource.com/java-tutorial/string/string_getchars.php\" target=\"_self\">6</a>.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/ref_string_getchars.asp\" target=\"_self\">https://www.w3schools.com/java/ref_string_getchars.asp</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.linkedin.com/pulse/how-do-you-use-getchars-method-java-give-example-kapil-sharma-mknlc\" target=\"_self\">https://www.linkedin.com/pulse/how-do-you-use-getchars-method-java-give-example-kapil-sharma-mknlc</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/lang/string_getchars.htm\" target=\"_self\">https://www.tutorialspoint.com/java/lang/string_getchars.htm</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.codecademy.com/resources/docs/java/strings/getChars\" target=\"_self\">https://www.codecademy.com/resources/docs/java/strings/getChars</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tutorialspoint.com/java/java_string_getchars.htm\" target=\"_self\">https://www.tutorialspoint.com/java/java_string_getchars.htm</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3resource.com/java-tutorial/string/string_getchars.php\" target=\"_self\">https://www.w3resource.com/java-tutorial/string/string_getchars.php</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://beginnersbook.com/2013/12/java-string-getchars-method-example/\" target=\"_self\">https://beginnersbook.com/2013/12/java-string-getchars-method-example/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tpointtech.com/java-string-getchars\" target=\"_self\">https://www.tpointtech.com/java-string-getchars</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=hMJPBBAE6IE\" target=\"_self\">https://www.youtube.com/watch?v=hMJPBBAE6IE</a>\n<br>Answer from Perplexity: <a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">pplx.ai/share</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Java getChars()","level":1,"id":"Java_getChars()_0"},{"heading":"Code Breakdown","level":2,"id":"Code_Breakdown_0"},{"heading":"Summary","level":2,"id":"Summary_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/stringgetchars().html","pathToRoot":"..","attachments":[],"createdTime":1748443089156,"modifiedTime":1748443089189,"sourceSize":3892,"sourcePath":"Java/StringgetChars().md","exportPath":"java/stringgetchars().html","showInTree":true,"treeOrder":195,"backlinks":["java/stringmethods.html"],"type":"markdown"},"java/stringmethods.html":{"title":"StringMethods","icon":"","description":"<a class=\"internal-link\" data-href=\"StringcompareTo().md\" href=\"java/stringcompareto().html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"StringgetChars().md\" href=\"java/stringgetchars().html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"Stringsplit().md\" href=\"java/stringsplit().html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"StringcompareTo().md\" href=\"java/stringcompareto().html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"StringgetChars().md\" href=\"java/stringgetchars().html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"Stringsplit().md\" href=\"java/stringsplit().html\" target=\"_self\" rel=\"noopener nofollow\"></a>Here's a comprehensive table of essential Java String methods with examples:Key Notes:\n<br>Immutable nature: All methods return new strings rather than modifying original1<a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/string\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/string\" target=\"_self\">4</a> <br>Case sensitivity: equals() vs equalsIgnoreCase()1<a data-tooltip-position=\"top\" aria-label=\"https://www.javaguides.net/2018/08/java-string-methods-with-examples.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.javaguides.net/2018/08/java-string-methods-with-examples.html\" target=\"_self\">6</a> <br>Index parameters: Most methods use 0-based indexing1<a data-tooltip-position=\"top\" aria-label=\"https://www.w3schools.com/java/java_ref_string.asp\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.w3schools.com/java/java_ref_string.asp\" target=\"_self\">5</a> <br>Regular expressions: Used in split() and replaceAll()1<a data-tooltip-position=\"top\" aria-label=\"https://www.javaguides.net/2018/08/java-string-methods-with-examples.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.javaguides.net/2018/08/java-string-methods-with-examples.html\" target=\"_self\">6</a> <br>Memory efficiency: intern() method manages string pool<a data-tooltip-position=\"top\" aria-label=\"https://www.tpointtech.com/methods-of-string-class\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tpointtech.com/methods-of-string-class\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://www.programiz.com/java-programming/string\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.programiz.com/java-programming/string\" target=\"_self\">4</a> For practical implementation:java// Example demonstrating multiple methods String text = \" Learn Java Programming \"; System.out.println(text.trim().substring(6,10).toUpperCase()); // \"JAVA\"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["java/stringcompareto().html","java/stringgetchars().html","java/stringsplit().html","java/stringcompareto().html","java/stringgetchars().html","java/stringsplit().html"],"author":"","coverImageURL":"","fullURL":"java/stringmethods.html","pathToRoot":"..","attachments":[],"createdTime":1748443187960,"modifiedTime":1749740357927,"sourceSize":4112,"sourcePath":"Java/StringMethods.md","exportPath":"java/stringmethods.html","showInTree":true,"treeOrder":196,"backlinks":[],"type":"markdown"},"java/strings.html":{"title":"Strings","icon":"","description":"In Java, whenever you write a string literal (for example, \"Hello World\"), you are actually creating an instance of the&nbsp;String class; hence, string constants are real objects rather than simple primitive values. This design choice has several implications regarding memory management, immutability, and how string values are used throughout a program.\nEvery string literal in Java is an object of type java.lang.String, even though it may appear as a constant in your code<a data-tooltip-position=\"top\" aria-label=\"https://docs.oracle.com/javase/tutorial/java/data/strings.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.oracle.com/javase/tutorial/java/data/strings.html\" target=\"_self\">5</a>. <br>These objects are immutable, which means once a String object is created, its contents cannot be changed. Methods that seem to modify a string, such as concat or replace, actually return a new string object without altering the original<a data-tooltip-position=\"top\" aria-label=\"https://docs.oracle.com/javase/tutorial/java/data/strings.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.oracle.com/javase/tutorial/java/data/strings.html\" target=\"_self\">5</a>. Java maintains a special memory area known as the string constant pool (or intern pool). When you create a string literal, Java checks this pool first. <br>If an identical string already exists, Java reuses that object rather than creating a new one. This saves memory and allows for efficiency in string comparisons using the == operator<a data-tooltip-position=\"top\" aria-label=\"https://docs.oracle.com/javase/tutorial/java/data/strings.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.oracle.com/javase/tutorial/java/data/strings.html\" target=\"_self\">5</a>. the&nbsp;final&nbsp;keyword with a string variable means that once you assign a specific string object to that variable, you cannot change it to point to another one. However, all string objects in Java are immutable by design, which means that the content of the string itself cannot be altered. So, even if a string variable isn’t marked as&nbsp;final, you still can’t change its contents once it’s created, but declaring it as&nbsp;final&nbsp;ensures that the reference remains fixed and cannot be reassigned to another string objectBelow are some illustrative examples:String s1 = \"Hello\"; String s2 = \"Hello\"; System.out.println(s1 == s2); // Prints \"true\" because both refer to the same interned object.\nIn this example, both s1 and s2 refer to the same object in the constant pool since the literal \"Hello\" is interned by Java.String s1 = \"Hello\"; String s2 = s1.concat(\" World\"); System.out.println(s1); // Outputs: Hello System.out.println(s2); // Outputs: Hello World\nEven though it appears that s1 might be modified, the concat method creates a new string object; s1 itself remains unchanged.final String greeting = \"Good Morning\"; // greeting = \"Good Evening\"; // This line would cause a compile-time error because greeting is final.\nSystem.out.println(greeting); // Always outputs: Good Morning\n<br>The final modifier here prevents reassignment of the variable greeting to another String object. However, even without final, the String object \"Good Morning\" would remain immutable<a data-tooltip-position=\"top\" aria-label=\"https://docs.oracle.com/javase/tutorial/java/data/strings.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.oracle.com/javase/tutorial/java/data/strings.html\" target=\"_self\">5</a>.In conclusion, string constants in Java are not simply fixed values; they are fully-fledged objects of the String class maintained in a special intern pool and designed to be immutable. This design aids in both memory optimization and safe, predictable behavior when handling textual data.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Strings","level":1,"id":"Strings_1"},{"heading":"String Objects and Immutability","level":2,"id":"String_Objects_and_Immutability_0"},{"heading":"The String Constant Pool","level":2,"id":"The_String_Constant_Pool_0"},{"heading":"The Role of the <code>final</code> Modifier","level":2,"id":"The_Role_of_the_`final`_Modifier_0"},{"heading":"Examples in Java","level":2,"id":"Examples_in_Java_0"},{"heading":"Example 1: String Literals and Interning","level":2,"id":"Example_1_String_Literals_and_Interning_0"},{"heading":"Example 2: Immutability of Strings","level":2,"id":"Example_2_Immutability_of_Strings_0"},{"heading":"Example 3: Using <code>final</code> with Strings","level":2,"id":"Example_3_Using_`final`_with_Strings_0"},{"heading":"Summary","level":2,"id":"Summary_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/strings.html","pathToRoot":"..","attachments":[],"createdTime":1748442989117,"modifiedTime":1748442989120,"sourceSize":3492,"sourcePath":"Java/Strings.md","exportPath":"java/strings.html","showInTree":true,"treeOrder":197,"backlinks":[],"type":"markdown"},"java/stringsplit().html":{"title":"Stringsplit()","icon":"","description":"Here's a detailed explanation of the limit parameter in Java's String.split() method: Behavior: Splits the string at most limit-1 times. Array Length: Resulting array has a maximum of limit elements. Trailing Content: The last element contains the unsplit remainder. Example:\nString str = \"a-b-c-d\";\nString[] result = str.split(\"-\", 3); // limit=3 → max 2 splits\n// Output: [\"a\", \"b\", \"c-d\"] Behavior: Splits as many times as possible (unlimited). Array Length: No restriction on array size. Trailing Content: Retains empty strings at the end. Example:\nString str = \"x-y-z--\";\nString[] result = str.split(\"-\", -1); // Negative limit\n// Output: [\"x\", \"y\", \"z\", \"\", \"\"] Behavior: Splits as many times as possible (unlimited). Array Length: No restriction on array size. Trailing Content: Discards trailing empty strings. Example:\nString str = \"1,,2,,3,,\";\nString[] result = str.split(\",\", 0); // Zero limit\n// Output: [\"1\", \"\", \"2\", \"\", \"3\"] \"user:name:age\".split(\":\", 2) → [\"user\", \"name:age\"]\nJava\"a,,b\".split(\",\", -1) → [\"a\", \"\", \"b\"]\nJava\"data1,,data2,\".split(\",\", 0) → [\"data1\", \"\", \"data2\"]\nThis parameter gives precise control over how Java handles edge cases in string splitting.Citations:<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/11353356/c4c124be-1e45-4420-a948-01169a3c1e0e/13.-String-Handling-String-Class.pdf\" target=\"_self\">https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/11353356/c4c124be-1e45-4420-a948-01169a3c1e0e/13.-String-Handling-String-Class.pdf</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Java String.split() Limit Parameter","level":1,"id":"Java_String.split()_Limit_Parameter_0"},{"heading":"<code>split(String regex, int limit)</code> Parameter Behavior","level":2,"id":"`split(String_regex,_int_limit)`_Parameter_Behavior_0"},{"heading":"1. limit &gt; 0","level":3,"id":"1._`limit_>_0`_0"},{"heading":"2. limit &lt; 0","level":3,"id":"2._`limit_<_0`_0"},{"heading":"3. limit = 0","level":3,"id":"3._`limit_=_0`_0"},{"heading":"Key Differences","level":2,"id":"Key_Differences_0"},{"heading":"Practical Use Cases","level":2,"id":"Practical_Use_Cases_0"},{"heading":"Token Extraction (<code>limit &gt; 0</code>):","level":3,"id":"Token_Extraction_(`limit_>_0`)_0"},{"heading":"Full Split with Empty Strings (<code>limit &lt; 0</code>):","level":3,"id":"Full_Split_with_Empty_Strings_(`limit_<_0`)_0"},{"heading":"Clean CSV Parsing (<code>limit = 0</code>):","level":3,"id":"Clean_CSV_Parsing_(`limit_=_0`)_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"java/stringsplit().html","pathToRoot":"..","attachments":[],"createdTime":1748443103630,"modifiedTime":1748443103632,"sourceSize":2279,"sourcePath":"Java/Stringsplit().md","exportPath":"java/stringsplit().html","showInTree":true,"treeOrder":198,"backlinks":["java/stringmethods.html"],"type":"markdown"},"java/superkeyword.html":{"title":"SuperKeyword","icon":"","description":"<a class=\"internal-link\" data-href=\"ContructorChainingWithSuper.md\" href=\"java/contructorchainingwithsuper.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"ContructorChainingWithSuper.md\" href=\"java/contructorchainingwithsuper.html\" target=\"_self\" rel=\"noopener nofollow\"></a># The super Keyword in JavaThe super keyword in Java is a fundamental tool for managing inheritance and polymorphism, allowing subclasses to interact with their parent classes in several key ways:Variables: The super keyword can be used to access variables from the parent class when there's a naming conflict with variables in the subclass. For example:class Animal { String color = \"black\";\n}\nclass Dog extends Animal { String color = \"white\"; void display() { System.out.println(\"Dog color: \" + color); System.out.println(\"Animal color: \" + super.color); }\n}\nOutput:PlaintextDog color: white\nAnimal color: black\nMethods: When a subclass overrides a method from its superclass, super can be used to call the superclass's version of that method:class Animal { void eat() { System.out.println(\"eating...\"); }\n}\nclass Dog extends Animal { void eat() { super.eat(); // Calls the eat() method of Animal class System.out.println(\"barking...\"); }\n}\nOutput:Plaintexteating...\nbarking...\nConstructor Chaining: The super keyword is used to call the constructor of the parent class from within the subclass constructor. This ensures that the superclass's instance variables are initialized before the subclass's:class Animal { Animal() { System.out.println(\"animal is created\"); }\n}\nclass Dog extends Animal { Dog() { super(); // Calls the constructor of Animal class System.out.println(\"dog is created\"); }\n}\nOutput:Plaintextanimal is created\ndog is created\nMethod Overriding: When a subclass has a method with the same name as a method in the superclass, super can be used to specify which method to call:class Animal { void display() { System.out.println(\"I am an animal\"); }\n}\nclass Dog extends Animal { void display() { super.display(); // Calls the display() method of Animal class System.out.println(\"I am a dog\"); }\n}\nOutput:PlaintextI am an animal\nI am a dog\nStatic Context: Although super is not used in static contexts, it can be used to access static members of the superclass from within the subclass:class Animal { static void staticMethod() { System.out.println(\"Static method of Animal\"); }\n}\nclass Dog extends Animal { void display() { super.staticMethod(); // Calls the static method of Animal class }\n}\nInitialization Order: When a subclass constructor is called, the superclass constructor is invoked first, ensuring that inherited members are initialized before subclass-specific initialization:class Person { Person(String name) { System.out.println(\"Person constructor called: \" + name); }\n}\nclass Employee extends Person { Employee(String name, int id) { super(name); // Calls the constructor of Person class System.out.println(\"Employee constructor called with ID: \" + id); }\n}\nOutput:PlaintextPerson constructor called: John Doe\nEmployee constructor called with ID: 1001 First Statement: The super() call must be the first statement in a subclass constructor to ensure proper initialization order.\nImplicit Call: If a constructor doesn't explicitly call a superclass constructor, Java automatically inserts a call to the superclass's no-argument constructor.\nConstructor Chaining: Constructor chaining allows subclasses to invoke constructors of their superclass, reducing code duplication and ensuring consistent initialization. Access to Superclass Members: super enables access to superclass methods, variables, and constructors, promoting code reuse and leveraging existing functionality.\nMethod Overriding Support: super allows explicit invocation of overridden methods in the superclass, extending behavior while retaining the original implementation.\nConstructor Chaining: super facilitates constructor chaining, enabling subclasses to invoke constructors of their superclass for proper initialization and reducing code duplication.\nFlexibility in Inheritance: super permits navigation through multiple levels of inheritance, accessing members and constructors of any superclass in the hierarchy, providing flexibility and control over the inheritance structure.\nBy understanding and leveraging the super keyword, Java developers can write more maintainable, readable, and efficient code, ensuring proper object management and reducing potential errors due to variable shadowing or ambiguity.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"1. Accessing Superclass Members","level":2,"id":"1._Accessing_Superclass_Members_0"},{"heading":"2. Invoking Superclass Constructor","level":2,"id":"2._Invoking_Superclass_Constructor_0"},{"heading":"3. Resolving Ambiguity","level":2,"id":"3._Resolving_Ambiguity_0"},{"heading":"4. Accessing Static Members","level":2,"id":"4._Accessing_Static_Members_0"},{"heading":"5. Constructor Chaining and Initialization","level":2,"id":"5._Constructor_Chaining_and_Initialization_0"},{"heading":"Key Points to Remember","level":2,"id":"Key_Points_to_Remember_0"},{"heading":"Advantages of Using <code>super</code>","level":2,"id":"Advantages_of_Using_`super`_0"},{"heading":"Citations:","level":2,"id":"Citations_0"}],"links":["java/contructorchainingwithsuper.html","java/contructorchainingwithsuper.html"],"author":"","coverImageURL":"","fullURL":"java/superkeyword.html","pathToRoot":"..","attachments":[],"createdTime":1748443393706,"modifiedTime":1749740357974,"sourceSize":5021,"sourcePath":"Java/SuperKeyword.md","exportPath":"java/superkeyword.html","showInTree":true,"treeOrder":199,"backlinks":[],"type":"markdown"},"java/taking-input.html":{"title":"Taking Input","icon":"","description":"In Java, there are multiple ways to get input from the user. The most commonly used method is the Scanner class, but there are other approaches as well depending on the use case. Here's a detailed explanation of the methods:The Scanner class, part of the java.util package, is widely used for reading input from the console. Import the Scanner class:\nimport java.util.Scanner; Create a Scanner object:\nScanner scanner = new Scanner(System.in); Use appropriate methods to read input: nextLine() for strings (reads an entire line).\nnext() for a single word.\nnextInt() for integers.\nnextDouble() for floating-point numbers, etc. <img alt=\"TakingInput_scanner_methods.png\" src=\"java/takinginput_scanner_methods.png\" target=\"_self\">]import java.util.Scanner; public class InputExample { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); // Reading a string System.out.print(\"Enter your name: \"); String name = scanner.nextLine(); // Reading an integer System.out.print(\"Enter your age: \"); int age = scanner.nextInt(); // Reading a double System.out.print(\"Enter your height in meters: \"); double height = scanner.nextDouble(); System.out.println(\"Hello, \" + name + \". You are \" + age + \" years old and \" + height + \" meters tall.\"); // Closing the scanner scanner.close(); }\n}\nThe BufferedReader class, part of the java.io package, can also be used to read input. It is faster than Scanner, but it requires additional code to parse data (e.g., converting strings to integers). Import the required classes:\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader; Create a BufferedReader object:\nBufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); Use the readLine() method to read input (always returns a string). import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException; public class BufferedReaderExample { public static void main(String[] args) throws IOException { BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); // Reading a string System.out.print(\"Enter your name: \"); String name = reader.readLine(); // Reading and parsing an integer System.out.print(\"Enter your age: \"); int age = Integer.parseInt(reader.readLine()); System.out.println(\"Hello, \" + name + \". You are \" + age + \" years old.\"); }\n}\nThe Console class, part of the java.io package, is another way to read input. However, it works only in environments where a console is available (e.g., command-line interfaces). It does not work in IDEs like Eclipse or IntelliJ.\nUse the System.console() method to get a reference to the console.\nUse methods like readLine() or readPassword() to read input.\npublic class ConsoleExample { public static void main(String[] args) { java.io.Console console = System.console(); if (console != null) { // Reading a string String name = console.readLine(\"Enter your name: \"); // Reading sensitive data (e.g., password) char[] password = console.readPassword(\"Enter your password: \"); System.out.println(\"Hello, \" + name + \". Your password is safe!\"); } else { System.out.println(\"No console available.\"); } }\n}\nJava programs can also take input directly from command-line arguments provided when running the program.\nPass arguments while executing the program.\nAccess them via the args parameter in the main method.\npublic class CommandLineExample { public static void main(String[] args) { if (args.length &gt; 0) { System.out.println(\"First argument: \" + args[0]); System.out.println(\"Second argument: \" + args[1]); } else { System.out.println(\"No arguments provided.\"); } }\n}\nExecution Example:$ java CommandLineExample John 25\nFirst argument: John\nSecond argument: 25\nFor graphical user interfaces, you can use JavaFX or Swing components like text fields or dialog boxes to get input.import javax.swing.JOptionPane; public class SwingInputExample { public static void main(String[] args) { String name = JOptionPane.showInputDialog(\"Enter your name:\"); JOptionPane.showMessageDialog(null, \"Hello, \" + name); }\n} Use Scanner for general-purpose console-based input.\nUse BufferedReader if performance is critical and you're handling large amounts of data.\nUse Console when working with secure inputs like passwords.\nFor GUI applications, use JavaFX or Swing components.\nBy choosing the right method based on your application's requirements, you can effectively handle user input in Java programs!","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"<strong>1. Using <code>Scanner</code> Class (Most Common Method)</strong>","level":2,"id":"**1._Using_`Scanner`_Class_(Most_Common_Method)**_0"},{"heading":"Steps:","level":3,"id":"Steps_0"},{"heading":"Example:","level":3,"id":"Example_0"},{"heading":"<strong>2. Using <code>BufferedReader</code></strong>","level":2,"id":"**2._Using_`BufferedReader`**_0"},{"heading":"Steps:","level":3,"id":"Steps_1"},{"heading":"Example:","level":3,"id":"Example_1"},{"heading":"<strong>3. Using <code>Console</code> Class</strong>","level":2,"id":"**3._Using_`Console`_Class**_0"},{"heading":"Steps:","level":3,"id":"Steps_2"},{"heading":"Example:","level":3,"id":"Example_2"},{"heading":"<strong>4. Using Command-Line Arguments</strong>","level":2,"id":"**4._Using_Command-Line_Arguments**_0"},{"heading":"Steps:","level":3,"id":"Steps_3"},{"heading":"Example:","level":3,"id":"Example_3"},{"heading":"<strong>5. Using JavaFX or Swing (For GUI Applications)</strong>","level":2,"id":"**5._Using_JavaFX_or_Swing_(For_GUI_Applications)**_0"},{"heading":"Example with Swing:","level":3,"id":"Example_with_Swing_0"},{"heading":"<strong>Comparison of Methods</strong>","level":2,"id":"**Comparison_of_Methods**_0"},{"heading":"<strong>Best Practices</strong>","level":2,"id":"**Best_Practices**_0"}],"links":[],"author":"","coverImageURL":"java/takinginput_scanner_methods.png","fullURL":"java/taking-input.html","pathToRoot":"..","attachments":["java/takinginput_scanner_methods.html"],"createdTime":1748441320507,"modifiedTime":1748490876051,"sourceSize":6503,"sourcePath":"Java/Taking Input.md","exportPath":"java/taking-input.html","showInTree":true,"treeOrder":200,"backlinks":[],"type":"markdown"},"java/takinginput_scanner_methods.html":{"title":"TakingInput_scanner_methods","icon":"","description":"<img src=\"java/takinginput_scanner_methods.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"java/takinginput_scanner_methods.png","fullURL":"java/takinginput_scanner_methods.html","pathToRoot":"..","attachments":["java/takinginput_scanner_methods.html"],"createdTime":1748441321545,"modifiedTime":1748441321547,"sourceSize":297814,"sourcePath":"Java/TakingInput_scanner_methods.png","exportPath":"java/takinginput_scanner_methods.html","showInTree":true,"treeOrder":201,"backlinks":["java/taking-input.html"],"type":"attachment"},"java/thiskeyword.html":{"title":"ThisKeyword","icon":"","description":"<a class=\"internal-link\" data-href=\"ContructorChainingWithThis.md\" href=\"java/contructorchainingwiththis.html\" target=\"_self\" rel=\"noopener nofollow\"></a><a class=\"internal-link\" data-href=\"ContructorChainingWithThis.md\" href=\"java/contructorchainingwiththis.html\" target=\"_self\" rel=\"noopener nofollow\"></a># The this Keyword in JavaThe this keyword in Java is a versatile tool that serves several important functions within object-oriented programming. Here's a comprehensive overview of its usage:Ambiguity Resolution: When a method or constructor parameter has the same name as an instance variable, this is used to differentiate between them. For example:class MyClass { int age; MyClass(int age) { this.age = age; // 'this.age' refers to the instance variable }\n}\nThis ensures that the instance variable age is assigned the value of the parameter age.Method Invocation: this can be used to call methods of the current class, although it's often omitted for simplicity:class MyClass { void display() { System.out.println(\"Hello, World!\"); } void invokeDisplay() { this.display(); // 'this' is optional here }\n}\nCalling Another Constructor: this() can be used to call another constructor within the same class, enabling code reuse and centralized initialization:class MyClass { int a, b; MyClass() { this(10, 20); // Calls the parameterized constructor } MyClass(int a, int b) { this.a = a; this.b = b; }\n}\nThis is particularly useful for setting default values or ensuring consistent initialization.Method Argument: this can be passed as an argument to methods, especially in event handling or when you need to pass the current object to another method:class MyClass { void method(MyClass obj) { System.out.println(\"Method invoked\"); } void invokeMethod() { this.method(this); // Passing 'this' as an argument }\n}\nConstructor Argument: Similar to method arguments, this can be passed to another constructor:class MyClass { MyClass() { this(10); // Calls another constructor with 'this' as an argument } MyClass(int value) { // Use 'this' here }\n}\nReturn Type: Methods can return this to allow method chaining or to return the current object:Javaclass MyClass { MyClass method() { return this; // Returns the current object }\n} Readability: Using this can enhance code readability, especially when dealing with ambiguous variable names.\nConstructor Chaining: this() must be the first statement in a constructor if used.\nNo Recursive Chaining: A constructor cannot call itself directly or indirectly using this().\nMandatory Termination: At least one constructor in the chain must not use this() to prevent infinite loops. Use When Necessary: Use this when it clarifies the code or when there's ambiguity between instance variables and parameters.\nAvoid Overuse: Overusing this can clutter the code. Use it judiciously for clarity and correctness.\nNaming Conventions: Adopting naming conventions for instance variables (e.g., mVar or _var) can reduce the need for this.\nBy understanding and leveraging the this keyword, Java developers can write more maintainable, readable, and efficient code, ensuring proper object management and reducing potential errors due to variable shadowing or ambiguity.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"1. Referring to Current Class Instance Variables","level":2,"id":"1._Referring_to_Current_Class_Instance_Variables_0"},{"heading":"2. Invoking Current Class Methods","level":2,"id":"2._Invoking_Current_Class_Methods_0"},{"heading":"3. Constructor Chaining","level":2,"id":"3._Constructor_Chaining_0"},{"heading":"4. Passing as an Argument","level":2,"id":"4._Passing_as_an_Argument_0"},{"heading":"5. Constructor Argument","level":2,"id":"5._Constructor_Argument_0"},{"heading":"6. Returning the Current Class Instance","level":2,"id":"6._Returning_the_Current_Class_Instance_0"},{"heading":"Key Points","level":2,"id":"Key_Points_0"},{"heading":"Best Practices","level":2,"id":"Best_Practices_0"}],"links":["java/contructorchainingwiththis.html","java/contructorchainingwiththis.html"],"author":"","coverImageURL":"","fullURL":"java/thiskeyword.html","pathToRoot":"..","attachments":[],"createdTime":1748443348163,"modifiedTime":1749740358013,"sourceSize":3604,"sourcePath":"Java/ThisKeyword.md","exportPath":"java/thiskeyword.html","showInTree":true,"treeOrder":202,"backlinks":[],"type":"markdown"},"maths/gaphs.html":{"title":"gaphs","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"maths/gaphs.html","pathToRoot":"..","attachments":["maths/gaphs.html"],"createdTime":1747886851470,"modifiedTime":1747901454422,"sourceSize":10769694,"sourcePath":"maths/gaphs.pdf","exportPath":"maths/gaphs.html","showInTree":true,"treeOrder":204,"backlinks":[],"type":"attachment"},"maths/index.html":{"title":"index","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"You can see the notes at leftside","level":1,"id":"You_can_see_the_notes_at_leftside_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"maths/index.html","pathToRoot":"..","attachments":[],"createdTime":1749093616843,"modifiedTime":1748500329161,"sourceSize":36,"sourcePath":"maths/index.md","exportPath":"maths/index.html","showInTree":true,"treeOrder":205,"backlinks":[],"type":"markdown"},"maths/mth_unit-iv_mcq.html":{"title":"MTH_Unit IV_mcq","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"maths/mth_unit-iv_mcq.html","pathToRoot":"..","attachments":["maths/mth_unit-iv_mcq.html"],"createdTime":1747887000814,"modifiedTime":1747914291516,"sourceSize":1341652,"sourcePath":"maths/MTH_Unit IV_mcq.pdf","exportPath":"maths/mth_unit-iv_mcq.html","showInTree":true,"treeOrder":206,"backlinks":[],"type":"attachment"},"maths/rosen_discrete_mathematics_and_its_applications_7th_edition.html":{"title":"Rosen_Discrete_Mathematics_and_Its_Applications_7th_Edition","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"maths/rosen_discrete_mathematics_and_its_applications_7th_edition.html","pathToRoot":"..","attachments":["maths/rosen_discrete_mathematics_and_its_applications_7th_edition.html"],"createdTime":1747886886321,"modifiedTime":1747455680637,"sourceSize":37978234,"sourcePath":"maths/Rosen_Discrete_Mathematics_and_Its_Applications_7th_Edition.pdf","exportPath":"maths/rosen_discrete_mathematics_and_its_applications_7th_edition.html","showInTree":true,"treeOrder":207,"backlinks":[],"type":"attachment"},"maths/trees.html":{"title":"trees","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"maths/trees.html","pathToRoot":"..","attachments":["maths/trees.html"],"createdTime":1747895080284,"modifiedTime":1747895654483,"sourceSize":3531884,"sourcePath":"maths/trees.pdf","exportPath":"maths/trees.html","showInTree":true,"treeOrder":208,"backlinks":[],"type":"attachment"},"maths/untitled.html":{"title":"Untitled","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"maths/untitled.html","pathToRoot":"..","attachments":[],"createdTime":1747992133966,"modifiedTime":1748019845507,"sourceSize":0,"sourcePath":"maths/Untitled.md","exportPath":"maths/untitled.html","showInTree":true,"treeOrder":209,"backlinks":[],"type":"markdown"},"maths/wi.html":{"title":"wi","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"maths/wi.html","pathToRoot":"..","attachments":["maths/wi.html"],"createdTime":1747892661151,"modifiedTime":1747892661175,"sourceSize":218664,"sourcePath":"maths/wi.pdf","exportPath":"maths/wi.html","showInTree":true,"treeOrder":210,"backlinks":[],"type":"attachment"},"index.html":{"title":"Index","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"index.html","pathToRoot":".","attachments":[],"createdTime":1752027308637,"modifiedTime":1752027308637,"sourceSize":0,"sourcePath":"Index.md","exportPath":"index.html","showInTree":true,"treeOrder":211,"backlinks":[],"type":"markdown"}},"fileInfo":{"site-lib/scripts/graph-wasm.wasm":{"createdTime":1754243090879,"modifiedTime":1754243089311.1223,"sourceSize":23655,"sourcePath":"","exportPath":"site-lib/scripts/graph-wasm.wasm","showInTree":false,"treeOrder":0,"backlinks":[],"type":"other","data":null},"site-lib/fonts/94f2f163d4b698242fef.otf":{"createdTime":1754243123325,"modifiedTime":1754243123325,"sourceSize":66800,"sourcePath":"","exportPath":"site-lib/fonts/94f2f163d4b698242fef.otf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/72505e6a122c6acd5471.woff2":{"createdTime":1754243123326,"modifiedTime":1754243123326,"sourceSize":104232,"sourcePath":"","exportPath":"site-lib/fonts/72505e6a122c6acd5471.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/2d5198822ab091ce4305.woff2":{"createdTime":1754243123326,"modifiedTime":1754243123326,"sourceSize":104332,"sourcePath":"","exportPath":"site-lib/fonts/2d5198822ab091ce4305.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/c8ba52b05a9ef10f4758.woff2":{"createdTime":1754243123327,"modifiedTime":1754243123327,"sourceSize":98868,"sourcePath":"","exportPath":"site-lib/fonts/c8ba52b05a9ef10f4758.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/cb10ffd7684cd9836a05.woff2":{"createdTime":1754243123327,"modifiedTime":1754243123327,"sourceSize":106876,"sourcePath":"","exportPath":"site-lib/fonts/cb10ffd7684cd9836a05.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/b5f0f109bc88052d4000.woff2":{"createdTime":1754243123328,"modifiedTime":1754243123328,"sourceSize":105804,"sourcePath":"","exportPath":"site-lib/fonts/b5f0f109bc88052d4000.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/cbe0ae49c52c920fd563.woff2":{"createdTime":1754243123328,"modifiedTime":1754243123328,"sourceSize":106108,"sourcePath":"","exportPath":"site-lib/fonts/cbe0ae49c52c920fd563.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/535a6cf662596b3bd6a6.woff2":{"createdTime":1754243123329,"modifiedTime":1754243123329,"sourceSize":111708,"sourcePath":"","exportPath":"site-lib/fonts/535a6cf662596b3bd6a6.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/70cc7ff27245e82ad414.ttf":{"createdTime":1754243123330,"modifiedTime":1754243123330,"sourceSize":192740,"sourcePath":"","exportPath":"site-lib/fonts/70cc7ff27245e82ad414.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/454577c22304619db035.ttf":{"createdTime":1754243123330,"modifiedTime":1754243123330,"sourceSize":161376,"sourcePath":"","exportPath":"site-lib/fonts/454577c22304619db035.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/52ac8f3034507f1d9e53.ttf":{"createdTime":1754243123330,"modifiedTime":1754243123330,"sourceSize":191568,"sourcePath":"","exportPath":"site-lib/fonts/52ac8f3034507f1d9e53.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/05b618077343fbbd92b7.ttf":{"createdTime":1754243123331,"modifiedTime":1754243123331,"sourceSize":155288,"sourcePath":"","exportPath":"site-lib/fonts/05b618077343fbbd92b7.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/4bb6ac751d1c5478ff3a.woff2":{"createdTime":1754243123324,"modifiedTime":1754243123324,"sourceSize":7876,"sourcePath":"","exportPath":"site-lib/fonts/4bb6ac751d1c5478ff3a.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/media/6155340132a851f6089e.svg":{"createdTime":1754243123325,"modifiedTime":1754243123325,"sourceSize":315,"sourcePath":"","exportPath":"site-lib/media/6155340132a851f6089e.svg","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/media/2308ab1944a6bfa5c5b8.svg":{"createdTime":1754243123325,"modifiedTime":1754243123325,"sourceSize":278,"sourcePath":"","exportPath":"site-lib/media/2308ab1944a6bfa5c5b8.svg","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/fonts/mathjax_zero.woff":{"createdTime":1754243091978,"modifiedTime":1754243091978,"sourceSize":1368,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_zero.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_main-regular.woff":{"createdTime":1754243091979,"modifiedTime":1754243091979,"sourceSize":34160,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_main-regular.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_main-bold.woff":{"createdTime":1754243091979,"modifiedTime":1754243091979,"sourceSize":34464,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_main-bold.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_math-italic.woff":{"createdTime":1754243091980,"modifiedTime":1754243091980,"sourceSize":19360,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_math-italic.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_main-italic.woff":{"createdTime":1754243091980,"modifiedTime":1754243091980,"sourceSize":20832,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_main-italic.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_math-bolditalic.woff":{"createdTime":1754243091980,"modifiedTime":1754243091980,"sourceSize":19776,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_math-bolditalic.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_size1-regular.woff":{"createdTime":1754243091981,"modifiedTime":1754243091981,"sourceSize":5792,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_size1-regular.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_size2-regular.woff":{"createdTime":1754243091981,"modifiedTime":1754243091981,"sourceSize":5464,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_size2-regular.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_size3-regular.woff":{"createdTime":1754243091981,"modifiedTime":1754243091981,"sourceSize":3244,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_size3-regular.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_size4-regular.woff":{"createdTime":1754243091981,"modifiedTime":1754243091981,"sourceSize":5148,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_size4-regular.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_ams-regular.woff":{"createdTime":1754243091982,"modifiedTime":1754243091982,"sourceSize":40808,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_ams-regular.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_calligraphic-regular.woff":{"createdTime":1754243091982,"modifiedTime":1754243091982,"sourceSize":9600,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_calligraphic-regular.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_calligraphic-bold.woff":{"createdTime":1754243091982,"modifiedTime":1754243091982,"sourceSize":9908,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_calligraphic-bold.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_fraktur-regular.woff":{"createdTime":1754243091982,"modifiedTime":1754243091982,"sourceSize":21480,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_fraktur-regular.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_fraktur-bold.woff":{"createdTime":1754243091982,"modifiedTime":1754243091982,"sourceSize":22340,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_fraktur-bold.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_sansserif-regular.woff":{"createdTime":1754243091983,"modifiedTime":1754243091983,"sourceSize":12660,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_sansserif-regular.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_sansserif-bold.woff":{"createdTime":1754243091983,"modifiedTime":1754243091983,"sourceSize":15944,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_sansserif-bold.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_sansserif-italic.woff":{"createdTime":1754243091983,"modifiedTime":1754243091983,"sourceSize":14628,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_sansserif-italic.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_script-regular.woff":{"createdTime":1754243091983,"modifiedTime":1754243091983,"sourceSize":11852,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_script-regular.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_typewriter-regular.woff":{"createdTime":1754243091983,"modifiedTime":1754243091983,"sourceSize":17604,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_typewriter-regular.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_vector-regular.woff":{"createdTime":1754243091983,"modifiedTime":1754243091983,"sourceSize":1136,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_vector-regular.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/mathjax_vector-bold.woff":{"createdTime":1754243091984,"modifiedTime":1754243091984,"sourceSize":1116,"sourcePath":"","exportPath":"site-lib/fonts/mathjax_vector-bold.woff","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/html/file-tree-content.html":{"createdTime":1754243130216,"modifiedTime":1754243130216,"sourceSize":81819,"sourcePath":"","exportPath":"site-lib/html/file-tree-content.html","showInTree":false,"treeOrder":0,"backlinks":[],"type":"html","data":null},"site-lib/scripts/webpage.js":{"createdTime":1754243091903,"modifiedTime":1754243091903,"sourceSize":110729,"sourcePath":"","exportPath":"site-lib/scripts/webpage.js","showInTree":false,"treeOrder":0,"backlinks":[],"type":"script","data":null},"site-lib/scripts/graph-wasm.js":{"createdTime":1754243091903,"modifiedTime":1754243091903,"sourceSize":12885,"sourcePath":"","exportPath":"site-lib/scripts/graph-wasm.js","showInTree":false,"treeOrder":0,"backlinks":[],"type":"script","data":null},"site-lib/scripts/graph-render-worker.js":{"createdTime":1754243091903,"modifiedTime":1754243091903,"sourceSize":5681,"sourcePath":"","exportPath":"site-lib/scripts/graph-render-worker.js","showInTree":false,"treeOrder":0,"backlinks":[],"type":"script","data":null},"site-lib/media/favicon.png":{"createdTime":1754243123189,"modifiedTime":1754243123189,"sourceSize":1105,"sourcePath":"","exportPath":"site-lib/media/favicon.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/styles/obsidian.css":{"createdTime":1754243123409,"modifiedTime":1754243123409,"sourceSize":163819,"sourcePath":"","exportPath":"site-lib/styles/obsidian.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/global-variable-styles.css":{"createdTime":1754243123293,"modifiedTime":1754243123293,"sourceSize":305,"sourcePath":"","exportPath":"site-lib/styles/global-variable-styles.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/main-styles.css":{"createdTime":1754243091958,"modifiedTime":1754243091958,"sourceSize":19521,"sourcePath":"","exportPath":"site-lib/styles/main-styles.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/rss.xml":{"createdTime":1754243231176,"modifiedTime":1754243231176,"sourceSize":697237,"sourcePath":"","exportPath":"site-lib/rss.xml","showInTree":false,"treeOrder":0,"backlinks":[],"type":"other","data":null},"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].png":{"createdTime":1749770259593,"modifiedTime":1749770259598,"sourceSize":175427,"sourcePath":"Analytical/img/Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 2m44s].png","exportPath":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].html":{"createdTime":1749770259593,"modifiedTime":1749770259598,"sourceSize":175427,"sourcePath":"Analytical/img/Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 2m44s].png","exportPath":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].html","showInTree":true,"treeOrder":2,"backlinks":["analytical/number-system.html"],"type":"attachment","data":null},"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].png":{"createdTime":1749771235185,"modifiedTime":1749771235186,"sourceSize":227879,"sourcePath":"Analytical/img/Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 22m40s].png","exportPath":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].html":{"createdTime":1749771235185,"modifiedTime":1749771235186,"sourceSize":227879,"sourcePath":"Analytical/img/Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 22m40s].png","exportPath":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].html","showInTree":true,"treeOrder":3,"backlinks":["analytical/number-system.html"],"type":"attachment","data":null},"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].png":{"createdTime":1749773031426,"modifiedTime":1749773031428,"sourceSize":149606,"sourcePath":"Analytical/img/Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 25m30s].png","exportPath":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].html":{"createdTime":1749773031426,"modifiedTime":1749773031428,"sourceSize":149606,"sourcePath":"Analytical/img/Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 25m30s].png","exportPath":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].html","showInTree":true,"treeOrder":4,"backlinks":["analytical/number-system.html"],"type":"attachment","data":null},"analytical/analytical.html":{"createdTime":1750418498453,"modifiedTime":1754106042504,"sourceSize":973,"sourcePath":"Analytical/Analytical.canvas","exportPath":"analytical/analytical.html","showInTree":true,"treeOrder":5,"backlinks":[],"type":"canvas","data":null},"analytical/ci-and-si.html":{"createdTime":1750756088307,"modifiedTime":1750760130444,"sourceSize":8307,"sourcePath":"Analytical/CI and SI.md","exportPath":"analytical/ci-and-si.html","showInTree":true,"treeOrder":6,"backlinks":[],"type":"markdown","data":null},"analytical/factors-and-number-of-zeros.html":{"createdTime":1749802165235,"modifiedTime":1749802928661,"sourceSize":4594,"sourcePath":"Analytical/Factors and Number of Zeros.md","exportPath":"analytical/factors-and-number-of-zeros.html","showInTree":true,"treeOrder":7,"backlinks":[],"type":"markdown","data":null},"analytical/fast-calculation.html":{"createdTime":1750423945851,"modifiedTime":1750429517324,"sourceSize":3757,"sourcePath":"Analytical/Fast Calculation.md","exportPath":"analytical/fast-calculation.html","showInTree":true,"treeOrder":8,"backlinks":[],"type":"markdown","data":null},"analytical/number-system.html":{"createdTime":1749769948199,"modifiedTime":1749773041347,"sourceSize":6670,"sourcePath":"Analytical/Number System.md","exportPath":"analytical/number-system.html","showInTree":true,"treeOrder":9,"backlinks":[],"type":"markdown","data":null},"analytical/permutation&computation.html":{"createdTime":1751448056446,"modifiedTime":1754124624638,"sourceSize":6082,"sourcePath":"Analytical/permutation&computation.md","exportPath":"analytical/permutation&computation.html","showInTree":true,"treeOrder":10,"backlinks":[],"type":"markdown","data":null},"analytical/probability.html":{"createdTime":1751020633153,"modifiedTime":1751021674118,"sourceSize":10351,"sourcePath":"Analytical/Probability.md","exportPath":"analytical/probability.html","showInTree":true,"treeOrder":11,"backlinks":[],"type":"markdown","data":null},"analytical/speed-distance-time.html":{"createdTime":1750670429952,"modifiedTime":1750672025145,"sourceSize":21048,"sourcePath":"Analytical/Speed Distance Time.md","exportPath":"analytical/speed-distance-time.html","showInTree":true,"treeOrder":12,"backlinks":[],"type":"markdown","data":null},"analytical/time-and-work.html":{"createdTime":1750410115882,"modifiedTime":1750423942593,"sourceSize":4037,"sourcePath":"Analytical/Time and Work.md","exportPath":"analytical/time-and-work.html","showInTree":true,"treeOrder":13,"backlinks":[],"type":"markdown","data":null},"analytical/unit-digit.html":{"createdTime":1749773083093,"modifiedTime":1749800288197,"sourceSize":7119,"sourcePath":"Analytical/Unit Digit.md","exportPath":"analytical/unit-digit.html","showInTree":true,"treeOrder":14,"backlinks":[],"type":"markdown","data":null},"cn/img/1.png":{"createdTime":1746089047544,"modifiedTime":1746089047551,"sourceSize":117649,"sourcePath":"CN/img/1.png","exportPath":"cn/img/1.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/1.html":{"createdTime":1746089047544,"modifiedTime":1746089047551,"sourceSize":117649,"sourcePath":"CN/img/1.png","exportPath":"cn/img/1.html","showInTree":true,"treeOrder":17,"backlinks":["cn/process-to-process.html"],"type":"attachment","data":null},"cn/img/2.png":{"createdTime":1746089047553,"modifiedTime":1746089047554,"sourceSize":80108,"sourcePath":"CN/img/2.png","exportPath":"cn/img/2.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/2.html":{"createdTime":1746089047553,"modifiedTime":1746089047554,"sourceSize":80108,"sourcePath":"CN/img/2.png","exportPath":"cn/img/2.html","showInTree":true,"treeOrder":18,"backlinks":["cn/process-to-process.html"],"type":"attachment","data":null},"cn/img/3.png":{"createdTime":1746089047557,"modifiedTime":1746089047557,"sourceSize":54839,"sourcePath":"CN/img/3.png","exportPath":"cn/img/3.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/3.html":{"createdTime":1746089047557,"modifiedTime":1746089047557,"sourceSize":54839,"sourcePath":"CN/img/3.png","exportPath":"cn/img/3.html","showInTree":true,"treeOrder":19,"backlinks":["cn/process-to-process.html"],"type":"attachment","data":null},"cn/img/4.png":{"createdTime":1746089047558,"modifiedTime":1746089047559,"sourceSize":49846,"sourcePath":"CN/img/4.png","exportPath":"cn/img/4.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/4.html":{"createdTime":1746089047558,"modifiedTime":1746089047559,"sourceSize":49846,"sourcePath":"CN/img/4.png","exportPath":"cn/img/4.html","showInTree":true,"treeOrder":20,"backlinks":["cn/process-to-process.html"],"type":"attachment","data":null},"cn/img/5.png":{"createdTime":1746089763544,"modifiedTime":1746089763576,"sourceSize":62145,"sourcePath":"CN/img/5.png","exportPath":"cn/img/5.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/5.html":{"createdTime":1746089763544,"modifiedTime":1746089763576,"sourceSize":62145,"sourcePath":"CN/img/5.png","exportPath":"cn/img/5.html","showInTree":true,"treeOrder":21,"backlinks":["cn/process-to-process.html"],"type":"attachment","data":null},"cn/img/6.png":{"createdTime":1746096880867,"modifiedTime":1746096880904,"sourceSize":66354,"sourcePath":"CN/img/6.png","exportPath":"cn/img/6.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/6.html":{"createdTime":1746096880867,"modifiedTime":1746096880904,"sourceSize":66354,"sourcePath":"CN/img/6.png","exportPath":"cn/img/6.html","showInTree":true,"treeOrder":22,"backlinks":["cn/process-to-process.html"],"type":"attachment","data":null},"cn/img/7.png":{"createdTime":1746169949243,"modifiedTime":1746169949379,"sourceSize":50027,"sourcePath":"CN/img/7.png","exportPath":"cn/img/7.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/7.html":{"createdTime":1746169949243,"modifiedTime":1746169949379,"sourceSize":50027,"sourcePath":"CN/img/7.png","exportPath":"cn/img/7.html","showInTree":true,"treeOrder":23,"backlinks":["cn/process-to-process.html"],"type":"attachment","data":null},"cn/img/8.png":{"createdTime":1746169990551,"modifiedTime":1746169990573,"sourceSize":25118,"sourcePath":"CN/img/8.png","exportPath":"cn/img/8.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/8.html":{"createdTime":1746169990551,"modifiedTime":1746169990573,"sourceSize":25118,"sourcePath":"CN/img/8.png","exportPath":"cn/img/8.html","showInTree":true,"treeOrder":24,"backlinks":["cn/process-to-process.html"],"type":"attachment","data":null},"cn/img/9.png":{"createdTime":1746170195997,"modifiedTime":1746170196609,"sourceSize":82948,"sourcePath":"CN/img/9.png","exportPath":"cn/img/9.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/9.html":{"createdTime":1746170195997,"modifiedTime":1746170196609,"sourceSize":82948,"sourcePath":"CN/img/9.png","exportPath":"cn/img/9.html","showInTree":true,"treeOrder":25,"backlinks":["cn/process-to-process.html","cn/udp.html"],"type":"attachment","data":null},"cn/img/10.png":{"createdTime":1746170463905,"modifiedTime":1746170463940,"sourceSize":47541,"sourcePath":"CN/img/10.png","exportPath":"cn/img/10.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/10.html":{"createdTime":1746170463905,"modifiedTime":1746170463940,"sourceSize":47541,"sourcePath":"CN/img/10.png","exportPath":"cn/img/10.html","showInTree":true,"treeOrder":26,"backlinks":["cn/udp.html"],"type":"attachment","data":null},"cn/img/11.png":{"createdTime":1746180645376,"modifiedTime":1746180645392,"sourceSize":43335,"sourcePath":"CN/img/11.png","exportPath":"cn/img/11.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/11.html":{"createdTime":1746180645376,"modifiedTime":1746180645392,"sourceSize":43335,"sourcePath":"CN/img/11.png","exportPath":"cn/img/11.html","showInTree":true,"treeOrder":27,"backlinks":["cn/tcp.html"],"type":"attachment","data":null},"cn/img/12.png":{"createdTime":1746180916255,"modifiedTime":1746180916288,"sourceSize":74721,"sourcePath":"CN/img/12.png","exportPath":"cn/img/12.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/12.html":{"createdTime":1746180916255,"modifiedTime":1746180916288,"sourceSize":74721,"sourcePath":"CN/img/12.png","exportPath":"cn/img/12.html","showInTree":true,"treeOrder":28,"backlinks":["cn/tcp.html"],"type":"attachment","data":null},"cn/img/csma1.png":{"createdTime":1748855510081,"modifiedTime":1748855510084,"sourceSize":148533,"sourcePath":"CN/img/CSMA1.png","exportPath":"cn/img/csma1.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/csma1.html":{"createdTime":1748855510081,"modifiedTime":1748855510084,"sourceSize":148533,"sourcePath":"CN/img/CSMA1.png","exportPath":"cn/img/csma1.html","showInTree":true,"treeOrder":29,"backlinks":["cn/csma.html"],"type":"attachment","data":null},"cn/img/csma2.png":{"createdTime":1748855507660,"modifiedTime":1748855507664,"sourceSize":84682,"sourcePath":"CN/img/CSMA2.png","exportPath":"cn/img/csma2.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/csma2.html":{"createdTime":1748855507660,"modifiedTime":1748855507664,"sourceSize":84682,"sourcePath":"CN/img/CSMA2.png","exportPath":"cn/img/csma2.html","showInTree":true,"treeOrder":30,"backlinks":["cn/csma.html"],"type":"attachment","data":null},"cn/img/csma3.png":{"createdTime":1748855507670,"modifiedTime":1748855507674,"sourceSize":74308,"sourcePath":"CN/img/CSMA3.png","exportPath":"cn/img/csma3.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/csma3.html":{"createdTime":1748855507670,"modifiedTime":1748855507674,"sourceSize":74308,"sourcePath":"CN/img/CSMA3.png","exportPath":"cn/img/csma3.html","showInTree":true,"treeOrder":31,"backlinks":["cn/csma.html"],"type":"attachment","data":null},"cn/img/csma4.png":{"createdTime":1748855507680,"modifiedTime":1748855507695,"sourceSize":84810,"sourcePath":"CN/img/CSMA4.png","exportPath":"cn/img/csma4.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/csma4.html":{"createdTime":1748855507680,"modifiedTime":1748855507695,"sourceSize":84810,"sourcePath":"CN/img/CSMA4.png","exportPath":"cn/img/csma4.html","showInTree":true,"treeOrder":32,"backlinks":["cn/csma.html"],"type":"attachment","data":null},"cn/img/csmacd1.png":{"createdTime":1748855507923,"modifiedTime":1748855507926,"sourceSize":129579,"sourcePath":"CN/img/CSMACD1.png","exportPath":"cn/img/csmacd1.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/csmacd1.html":{"createdTime":1748855507923,"modifiedTime":1748855507926,"sourceSize":129579,"sourcePath":"CN/img/CSMACD1.png","exportPath":"cn/img/csmacd1.html","showInTree":true,"treeOrder":33,"backlinks":["cn/csmacd.html"],"type":"attachment","data":null},"cn/img/csmacd2.png":{"createdTime":1748855508046,"modifiedTime":1748855508047,"sourceSize":33293,"sourcePath":"CN/img/CSMACD2.png","exportPath":"cn/img/csmacd2.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/csmacd2.html":{"createdTime":1748855508046,"modifiedTime":1748855508047,"sourceSize":33293,"sourcePath":"CN/img/CSMACD2.png","exportPath":"cn/img/csmacd2.html","showInTree":true,"treeOrder":34,"backlinks":["cn/csmacd.html"],"type":"attachment","data":null},"cn/img/csmacd3.png":{"createdTime":1748855508203,"modifiedTime":1748855508207,"sourceSize":72008,"sourcePath":"CN/img/CSMACD3.png","exportPath":"cn/img/csmacd3.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/csmacd3.html":{"createdTime":1748855508203,"modifiedTime":1748855508207,"sourceSize":72008,"sourcePath":"CN/img/CSMACD3.png","exportPath":"cn/img/csmacd3.html","showInTree":true,"treeOrder":35,"backlinks":["cn/csmacd.html"],"type":"attachment","data":null},"cn/img/csmacd4.png":{"createdTime":1748855508468,"modifiedTime":1748855508471,"sourceSize":52475,"sourcePath":"CN/img/CSMACD4.png","exportPath":"cn/img/csmacd4.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/csmacd4.html":{"createdTime":1748855508468,"modifiedTime":1748855508471,"sourceSize":52475,"sourcePath":"CN/img/CSMACD4.png","exportPath":"cn/img/csmacd4.html","showInTree":true,"treeOrder":36,"backlinks":["cn/csmacd.html"],"type":"attachment","data":null},"cn/img/layeredexample.png":{"createdTime":1748855508479,"modifiedTime":1748855508480,"sourceSize":126275,"sourcePath":"CN/img/Layeredexample.png","exportPath":"cn/img/layeredexample.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/layeredexample.html":{"createdTime":1748855508479,"modifiedTime":1748855508480,"sourceSize":126275,"sourcePath":"CN/img/Layeredexample.png","exportPath":"cn/img/layeredexample.html","showInTree":true,"treeOrder":37,"backlinks":[],"type":"attachment","data":null},"cn/img/multipleaccess.png":{"createdTime":1748855508488,"modifiedTime":1748855508490,"sourceSize":86379,"sourcePath":"CN/img/MultipleAccess.png","exportPath":"cn/img/multipleaccess.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/multipleaccess.html":{"createdTime":1748855508488,"modifiedTime":1748855508490,"sourceSize":86379,"sourcePath":"CN/img/MultipleAccess.png","exportPath":"cn/img/multipleaccess.html","showInTree":true,"treeOrder":38,"backlinks":[],"type":"attachment","data":null},"cn/img/osi1.png":{"createdTime":1748855508546,"modifiedTime":1748855508638,"sourceSize":104644,"sourcePath":"CN/img/OSI1.png","exportPath":"cn/img/osi1.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi1.html":{"createdTime":1748855508546,"modifiedTime":1748855508638,"sourceSize":104644,"sourcePath":"CN/img/OSI1.png","exportPath":"cn/img/osi1.html","showInTree":true,"treeOrder":39,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/osi2.png":{"createdTime":1748855508647,"modifiedTime":1748855508721,"sourceSize":1009592,"sourcePath":"CN/img/OSI2.png","exportPath":"cn/img/osi2.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi2.html":{"createdTime":1748855508647,"modifiedTime":1748855508721,"sourceSize":1009592,"sourcePath":"CN/img/OSI2.png","exportPath":"cn/img/osi2.html","showInTree":true,"treeOrder":40,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/osi3.png":{"createdTime":1748855508795,"modifiedTime":1748855508833,"sourceSize":101244,"sourcePath":"CN/img/OSI3.png","exportPath":"cn/img/osi3.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi3.html":{"createdTime":1748855508795,"modifiedTime":1748855508833,"sourceSize":101244,"sourcePath":"CN/img/OSI3.png","exportPath":"cn/img/osi3.html","showInTree":true,"treeOrder":41,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/osi11.png":{"createdTime":1748855898203,"modifiedTime":1748855898207,"sourceSize":61318,"sourcePath":"CN/img/OSI11.png","exportPath":"cn/img/osi11.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi11.html":{"createdTime":1748855898203,"modifiedTime":1748855898207,"sourceSize":61318,"sourcePath":"CN/img/OSI11.png","exportPath":"cn/img/osi11.html","showInTree":true,"treeOrder":42,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/osi12.png":{"createdTime":1748855898662,"modifiedTime":1748855898771,"sourceSize":55342,"sourcePath":"CN/img/OSI12.png","exportPath":"cn/img/osi12.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi12.html":{"createdTime":1748855898662,"modifiedTime":1748855898771,"sourceSize":55342,"sourcePath":"CN/img/OSI12.png","exportPath":"cn/img/osi12.html","showInTree":true,"treeOrder":43,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/osi13.png":{"createdTime":1748855898861,"modifiedTime":1748855898873,"sourceSize":137971,"sourcePath":"CN/img/OSI13.png","exportPath":"cn/img/osi13.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi13.html":{"createdTime":1748855898861,"modifiedTime":1748855898873,"sourceSize":137971,"sourcePath":"CN/img/OSI13.png","exportPath":"cn/img/osi13.html","showInTree":true,"treeOrder":44,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/osi14.png":{"createdTime":1748855899386,"modifiedTime":1748855899391,"sourceSize":58460,"sourcePath":"CN/img/OSI14.png","exportPath":"cn/img/osi14.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi14.html":{"createdTime":1748855899386,"modifiedTime":1748855899391,"sourceSize":58460,"sourcePath":"CN/img/OSI14.png","exportPath":"cn/img/osi14.html","showInTree":true,"treeOrder":45,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/osi15.png":{"createdTime":1748855899475,"modifiedTime":1748855899515,"sourceSize":119572,"sourcePath":"CN/img/OSI15.png","exportPath":"cn/img/osi15.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi15.html":{"createdTime":1748855899475,"modifiedTime":1748855899515,"sourceSize":119572,"sourcePath":"CN/img/OSI15.png","exportPath":"cn/img/osi15.html","showInTree":true,"treeOrder":46,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/osi16.png":{"createdTime":1748855899948,"modifiedTime":1748855900020,"sourceSize":120656,"sourcePath":"CN/img/OSI16.png","exportPath":"cn/img/osi16.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi16.html":{"createdTime":1748855899948,"modifiedTime":1748855900020,"sourceSize":120656,"sourcePath":"CN/img/OSI16.png","exportPath":"cn/img/osi16.html","showInTree":true,"treeOrder":47,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/osi17.png":{"createdTime":1748855900147,"modifiedTime":1748855900251,"sourceSize":65748,"sourcePath":"CN/img/OSI17.png","exportPath":"cn/img/osi17.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi17.html":{"createdTime":1748855900147,"modifiedTime":1748855900251,"sourceSize":65748,"sourcePath":"CN/img/OSI17.png","exportPath":"cn/img/osi17.html","showInTree":true,"treeOrder":48,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/osi18.png":{"createdTime":1748855900927,"modifiedTime":1748855900928,"sourceSize":71607,"sourcePath":"CN/img/OSI18.png","exportPath":"cn/img/osi18.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi18.html":{"createdTime":1748855900927,"modifiedTime":1748855900928,"sourceSize":71607,"sourcePath":"CN/img/OSI18.png","exportPath":"cn/img/osi18.html","showInTree":true,"treeOrder":49,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/osi19.png":{"createdTime":1748855900968,"modifiedTime":1748855900977,"sourceSize":55919,"sourcePath":"CN/img/OSI19.png","exportPath":"cn/img/osi19.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi19.html":{"createdTime":1748855900968,"modifiedTime":1748855900977,"sourceSize":55919,"sourcePath":"CN/img/OSI19.png","exportPath":"cn/img/osi19.html","showInTree":true,"treeOrder":50,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/osi20.png":{"createdTime":1748855901073,"modifiedTime":1748855901186,"sourceSize":98000,"sourcePath":"CN/img/OSI20.png","exportPath":"cn/img/osi20.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi20.html":{"createdTime":1748855901073,"modifiedTime":1748855901186,"sourceSize":98000,"sourcePath":"CN/img/OSI20.png","exportPath":"cn/img/osi20.html","showInTree":true,"treeOrder":51,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/osi21.png":{"createdTime":1748855898081,"modifiedTime":1748855898091,"sourceSize":155560,"sourcePath":"CN/img/OSI21.png","exportPath":"cn/img/osi21.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/osi21.html":{"createdTime":1748855898081,"modifiedTime":1748855898091,"sourceSize":155560,"sourcePath":"CN/img/OSI21.png","exportPath":"cn/img/osi21.html","showInTree":true,"treeOrder":52,"backlinks":["cn/osi.html"],"type":"attachment","data":null},"cn/img/pasted-image-20250222185456.png":{"createdTime":1748855508840,"modifiedTime":1748855508842,"sourceSize":26301,"sourcePath":"CN/img/Pasted image 20250222185456.png","exportPath":"cn/img/pasted-image-20250222185456.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/pasted-image-20250222185456.html":{"createdTime":1748855508840,"modifiedTime":1748855508842,"sourceSize":26301,"sourcePath":"CN/img/Pasted image 20250222185456.png","exportPath":"cn/img/pasted-image-20250222185456.html","showInTree":true,"treeOrder":53,"backlinks":[],"type":"attachment","data":null},"cn/img/pasted-image-20250223092151.png":{"createdTime":1748855508977,"modifiedTime":1748855509026,"sourceSize":52216,"sourcePath":"CN/img/Pasted image 20250223092151.png","exportPath":"cn/img/pasted-image-20250223092151.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/pasted-image-20250223092151.html":{"createdTime":1748855508977,"modifiedTime":1748855509026,"sourceSize":52216,"sourcePath":"CN/img/Pasted image 20250223092151.png","exportPath":"cn/img/pasted-image-20250223092151.html","showInTree":true,"treeOrder":54,"backlinks":[],"type":"attachment","data":null},"cn/img/pasted-image-20250228090351.png":{"createdTime":1748855509087,"modifiedTime":1748855509094,"sourceSize":369940,"sourcePath":"CN/img/Pasted image 20250228090351.png","exportPath":"cn/img/pasted-image-20250228090351.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/pasted-image-20250228090351.html":{"createdTime":1748855509087,"modifiedTime":1748855509094,"sourceSize":369940,"sourcePath":"CN/img/Pasted image 20250228090351.png","exportPath":"cn/img/pasted-image-20250228090351.html","showInTree":true,"treeOrder":55,"backlinks":[],"type":"attachment","data":null},"cn/img/purealoha1.png":{"createdTime":1748855509657,"modifiedTime":1748855509659,"sourceSize":111650,"sourcePath":"CN/img/PureALOHA1.png","exportPath":"cn/img/purealoha1.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/purealoha1.html":{"createdTime":1748855509657,"modifiedTime":1748855509659,"sourceSize":111650,"sourcePath":"CN/img/PureALOHA1.png","exportPath":"cn/img/purealoha1.html","showInTree":true,"treeOrder":56,"backlinks":["cn/purealoha.html"],"type":"attachment","data":null},"cn/img/purealoha2.png":{"createdTime":1748855509673,"modifiedTime":1748855509675,"sourceSize":119391,"sourcePath":"CN/img/PureALOHA2.png","exportPath":"cn/img/purealoha2.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/purealoha2.html":{"createdTime":1748855509673,"modifiedTime":1748855509675,"sourceSize":119391,"sourcePath":"CN/img/PureALOHA2.png","exportPath":"cn/img/purealoha2.html","showInTree":true,"treeOrder":57,"backlinks":["cn/purealoha.html"],"type":"attachment","data":null},"cn/img/screenshot-2025-02-23-091952.png":{"createdTime":1748855509688,"modifiedTime":1748855509691,"sourceSize":52216,"sourcePath":"CN/img/Screenshot 2025-02-23 091952.png","exportPath":"cn/img/screenshot-2025-02-23-091952.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/screenshot-2025-02-23-091952.html":{"createdTime":1748855509688,"modifiedTime":1748855509691,"sourceSize":52216,"sourcePath":"CN/img/Screenshot 2025-02-23 091952.png","exportPath":"cn/img/screenshot-2025-02-23-091952.html","showInTree":true,"treeOrder":58,"backlinks":[],"type":"attachment","data":null},"cn/img/screenshot-2025-02-23-092436.png":{"createdTime":1748855509921,"modifiedTime":1748855509924,"sourceSize":327141,"sourcePath":"CN/img/Screenshot 2025-02-23 092436.png","exportPath":"cn/img/screenshot-2025-02-23-092436.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/screenshot-2025-02-23-092436.html":{"createdTime":1748855509921,"modifiedTime":1748855509924,"sourceSize":327141,"sourcePath":"CN/img/Screenshot 2025-02-23 092436.png","exportPath":"cn/img/screenshot-2025-02-23-092436.html","showInTree":true,"treeOrder":59,"backlinks":[],"type":"attachment","data":null},"cn/img/slottedaloha1.png":{"createdTime":1748855509936,"modifiedTime":1748855509939,"sourceSize":116724,"sourcePath":"CN/img/SlottedALOHA1.png","exportPath":"cn/img/slottedaloha1.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/slottedaloha1.html":{"createdTime":1748855509936,"modifiedTime":1748855509939,"sourceSize":116724,"sourcePath":"CN/img/SlottedALOHA1.png","exportPath":"cn/img/slottedaloha1.html","showInTree":true,"treeOrder":60,"backlinks":["cn/slottedaloha.html"],"type":"attachment","data":null},"cn/img/slottedaloha2.png":{"createdTime":1748855509949,"modifiedTime":1748855509951,"sourceSize":51209,"sourcePath":"CN/img/SlottedALOHA2.png","exportPath":"cn/img/slottedaloha2.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/slottedaloha2.html":{"createdTime":1748855509949,"modifiedTime":1748855509951,"sourceSize":51209,"sourcePath":"CN/img/SlottedALOHA2.png","exportPath":"cn/img/slottedaloha2.html","showInTree":true,"treeOrder":61,"backlinks":["cn/slottedaloha.html"],"type":"attachment","data":null},"cn/img/tcpheader.png":{"createdTime":1748795978487,"modifiedTime":1748795978488,"sourceSize":68690,"sourcePath":"CN/img/TCPHeader.png","exportPath":"cn/img/tcpheader.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/tcpheader.html":{"createdTime":1748795978487,"modifiedTime":1748795978488,"sourceSize":68690,"sourcePath":"CN/img/TCPHeader.png","exportPath":"cn/img/tcpheader.html","showInTree":true,"treeOrder":62,"backlinks":["cn/tcp.html"],"type":"attachment","data":null},"cn/img/tcpheaderflags.png":{"createdTime":1748795933313,"modifiedTime":1748795933315,"sourceSize":79402,"sourcePath":"CN/img/TCPHeaderFlags.png","exportPath":"cn/img/tcpheaderflags.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/tcpheaderflags.html":{"createdTime":1748795933313,"modifiedTime":1748795933315,"sourceSize":79402,"sourcePath":"CN/img/TCPHeaderFlags.png","exportPath":"cn/img/tcpheaderflags.html","showInTree":true,"treeOrder":63,"backlinks":["cn/tcp.html"],"type":"attachment","data":null},"cn/img/tcpsegmentflow.png":{"createdTime":1748794548336,"modifiedTime":1748794548338,"sourceSize":104878,"sourcePath":"CN/img/TCPsegmentflow.png","exportPath":"cn/img/tcpsegmentflow.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/tcpsegmentflow.html":{"createdTime":1748794548336,"modifiedTime":1748794548338,"sourceSize":104878,"sourcePath":"CN/img/TCPsegmentflow.png","exportPath":"cn/img/tcpsegmentflow.html","showInTree":true,"treeOrder":64,"backlinks":["cn/tcp.html"],"type":"attachment","data":null},"cn/img/topologies.jpg":{"createdTime":1748855510007,"modifiedTime":1748855510008,"sourceSize":295888,"sourcePath":"CN/img/Topologies.jpg","exportPath":"cn/img/topologies.jpg","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/img/topologies.html":{"createdTime":1748855510007,"modifiedTime":1748855510008,"sourceSize":295888,"sourcePath":"CN/img/Topologies.jpg","exportPath":"cn/img/topologies.html","showInTree":true,"treeOrder":65,"backlinks":["cn/topologies.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/emailaddress.png":{"createdTime":1748759921408,"modifiedTime":1748759921410,"sourceSize":24764,"sourcePath":"CN/Standard Clint Service Protocols/img/Emailaddress.png","exportPath":"cn/standard-clint-service-protocols/img/emailaddress.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/emailaddress.html":{"createdTime":1748759921408,"modifiedTime":1748759921410,"sourceSize":24764,"sourcePath":"CN/Standard Clint Service Protocols/img/Emailaddress.png","exportPath":"cn/standard-clint-service-protocols/img/emailaddress.html","showInTree":true,"treeOrder":68,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/emailarct.png":{"createdTime":1748759718923,"modifiedTime":1748759718925,"sourceSize":123780,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailArct.png","exportPath":"cn/standard-clint-service-protocols/img/emailarct.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/emailarct.html":{"createdTime":1748759718923,"modifiedTime":1748759718925,"sourceSize":123780,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailArct.png","exportPath":"cn/standard-clint-service-protocols/img/emailarct.html","showInTree":true,"treeOrder":69,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/emaileg1.png":{"createdTime":1748760514501,"modifiedTime":1748760514502,"sourceSize":62550,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailEg1.png","exportPath":"cn/standard-clint-service-protocols/img/emaileg1.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/emaileg1.html":{"createdTime":1748760514501,"modifiedTime":1748760514502,"sourceSize":62550,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailEg1.png","exportPath":"cn/standard-clint-service-protocols/img/emaileg1.html","showInTree":true,"treeOrder":70,"backlinks":[],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/emaileg2.png":{"createdTime":1748760440346,"modifiedTime":1748760440348,"sourceSize":75694,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailEg2.png","exportPath":"cn/standard-clint-service-protocols/img/emaileg2.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/emaileg2.html":{"createdTime":1748760440346,"modifiedTime":1748760440348,"sourceSize":75694,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailEg2.png","exportPath":"cn/standard-clint-service-protocols/img/emaileg2.html","showInTree":true,"treeOrder":71,"backlinks":[],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/emailegcookie.png":{"createdTime":1748753849050,"modifiedTime":1748753849052,"sourceSize":76775,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailEgcookie.png","exportPath":"cn/standard-clint-service-protocols/img/emailegcookie.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/emailegcookie.html":{"createdTime":1748753849050,"modifiedTime":1748753849052,"sourceSize":76775,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailEgcookie.png","exportPath":"cn/standard-clint-service-protocols/img/emailegcookie.html","showInTree":true,"treeOrder":72,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/emailmessagestruct.png":{"createdTime":1748759742602,"modifiedTime":1748759742603,"sourceSize":192065,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailMessageStruct.png","exportPath":"cn/standard-clint-service-protocols/img/emailmessagestruct.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/emailmessagestruct.html":{"createdTime":1748759742602,"modifiedTime":1748759742603,"sourceSize":192065,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailMessageStruct.png","exportPath":"cn/standard-clint-service-protocols/img/emailmessagestruct.html","showInTree":true,"treeOrder":73,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/emailnonpersistent.png":{"createdTime":1748749722009,"modifiedTime":1748749722010,"sourceSize":128179,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailNONPersistent.png","exportPath":"cn/standard-clint-service-protocols/img/emailnonpersistent.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/emailnonpersistent.html":{"createdTime":1748749722009,"modifiedTime":1748749722010,"sourceSize":128179,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailNONPersistent.png","exportPath":"cn/standard-clint-service-protocols/img/emailnonpersistent.html","showInTree":true,"treeOrder":74,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/emailpersistent.png":{"createdTime":1748749789259,"modifiedTime":1748749789260,"sourceSize":134418,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailPersistent.png","exportPath":"cn/standard-clint-service-protocols/img/emailpersistent.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/emailpersistent.html":{"createdTime":1748749789259,"modifiedTime":1748749789260,"sourceSize":134418,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailPersistent.png","exportPath":"cn/standard-clint-service-protocols/img/emailpersistent.html","showInTree":true,"treeOrder":75,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/emailprotocol.png":{"createdTime":1748759951899,"modifiedTime":1748759951900,"sourceSize":70711,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailProtocol.png","exportPath":"cn/standard-clint-service-protocols/img/emailprotocol.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/emailprotocol.html":{"createdTime":1748759951899,"modifiedTime":1748759951900,"sourceSize":70711,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailProtocol.png","exportPath":"cn/standard-clint-service-protocols/img/emailprotocol.html","showInTree":true,"treeOrder":76,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/emailuseragent.png":{"createdTime":1748759810978,"modifiedTime":1748759810979,"sourceSize":13368,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailUserAgent.png","exportPath":"cn/standard-clint-service-protocols/img/emailuseragent.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/emailuseragent.html":{"createdTime":1748759810978,"modifiedTime":1748759810979,"sourceSize":13368,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailUserAgent.png","exportPath":"cn/standard-clint-service-protocols/img/emailuseragent.html","showInTree":true,"treeOrder":77,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/emailworkingbrowser.png":{"createdTime":1748751511082,"modifiedTime":1748751511083,"sourceSize":44893,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailWorkingBrowser.png","exportPath":"cn/standard-clint-service-protocols/img/emailworkingbrowser.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/emailworkingbrowser.html":{"createdTime":1748751511082,"modifiedTime":1748751511083,"sourceSize":44893,"sourcePath":"CN/Standard Clint Service Protocols/img/EmailWorkingBrowser.png","exportPath":"cn/standard-clint-service-protocols/img/emailworkingbrowser.html","showInTree":true,"treeOrder":78,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/ftp.png":{"createdTime":1748757456109,"modifiedTime":1748757456110,"sourceSize":70634,"sourcePath":"CN/Standard Clint Service Protocols/img/FTP.png","exportPath":"cn/standard-clint-service-protocols/img/ftp.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/ftp.html":{"createdTime":1748757456109,"modifiedTime":1748757456110,"sourceSize":70634,"sourcePath":"CN/Standard Clint Service Protocols/img/FTP.png","exportPath":"cn/standard-clint-service-protocols/img/ftp.html","showInTree":true,"treeOrder":79,"backlinks":["cn/standard-clint-service-protocols/ftp.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/ftpcmd.png":{"createdTime":1748758855550,"modifiedTime":1748758855552,"sourceSize":467299,"sourcePath":"CN/Standard Clint Service Protocols/img/FTPcmd.png","exportPath":"cn/standard-clint-service-protocols/img/ftpcmd.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/ftpcmd.html":{"createdTime":1748758855550,"modifiedTime":1748758855552,"sourceSize":467299,"sourcePath":"CN/Standard Clint Service Protocols/img/FTPcmd.png","exportPath":"cn/standard-clint-service-protocols/img/ftpcmd.html","showInTree":true,"treeOrder":80,"backlinks":["cn/standard-clint-service-protocols/ftp.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/ftpeg.png":{"createdTime":1748758808425,"modifiedTime":1748758808426,"sourceSize":87240,"sourcePath":"CN/Standard Clint Service Protocols/img/FTPEg.png","exportPath":"cn/standard-clint-service-protocols/img/ftpeg.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/ftpeg.html":{"createdTime":1748758808425,"modifiedTime":1748758808426,"sourceSize":87240,"sourcePath":"CN/Standard Clint Service Protocols/img/FTPEg.png","exportPath":"cn/standard-clint-service-protocols/img/ftpeg.html","showInTree":true,"treeOrder":81,"backlinks":["cn/standard-clint-service-protocols/ftp.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/httpeg1.png":{"createdTime":1748753400465,"modifiedTime":1748753400466,"sourceSize":91198,"sourcePath":"CN/Standard Clint Service Protocols/img/HTTPEg1.png","exportPath":"cn/standard-clint-service-protocols/img/httpeg1.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/httpeg1.html":{"createdTime":1748753400465,"modifiedTime":1748753400466,"sourceSize":91198,"sourcePath":"CN/Standard Clint Service Protocols/img/HTTPEg1.png","exportPath":"cn/standard-clint-service-protocols/img/httpeg1.html","showInTree":true,"treeOrder":82,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/httpeg2.png":{"createdTime":1748753181968,"modifiedTime":1748753181969,"sourceSize":85121,"sourcePath":"CN/Standard Clint Service Protocols/img/HTTPEg2.png","exportPath":"cn/standard-clint-service-protocols/img/httpeg2.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/httpeg2.html":{"createdTime":1748753181968,"modifiedTime":1748753181969,"sourceSize":85121,"sourcePath":"CN/Standard Clint Service Protocols/img/HTTPEg2.png","exportPath":"cn/standard-clint-service-protocols/img/httpeg2.html","showInTree":true,"treeOrder":83,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/httpproxy.png":{"createdTime":1748753978003,"modifiedTime":1748753978004,"sourceSize":58813,"sourcePath":"CN/Standard Clint Service Protocols/img/HTTPProxy.png","exportPath":"cn/standard-clint-service-protocols/img/httpproxy.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/httpproxy.html":{"createdTime":1748753978003,"modifiedTime":1748753978004,"sourceSize":58813,"sourcePath":"CN/Standard Clint Service Protocols/img/HTTPProxy.png","exportPath":"cn/standard-clint-service-protocols/img/httpproxy.html","showInTree":true,"treeOrder":84,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/httpstruct.png":{"createdTime":1748752134892,"modifiedTime":1748752134894,"sourceSize":108080,"sourcePath":"CN/Standard Clint Service Protocols/img/HTTPstruct.png","exportPath":"cn/standard-clint-service-protocols/img/httpstruct.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/httpstruct.html":{"createdTime":1748752134892,"modifiedTime":1748752134894,"sourceSize":108080,"sourcePath":"CN/Standard Clint Service Protocols/img/HTTPstruct.png","exportPath":"cn/standard-clint-service-protocols/img/httpstruct.html","showInTree":true,"treeOrder":85,"backlinks":["cn/standard-clint-service-protocols/httpstructureexp.html","cn/standard-clint-service-protocols/www-http.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/mime5.png":{"createdTime":1748760540595,"modifiedTime":1748760540598,"sourceSize":39081,"sourcePath":"CN/Standard Clint Service Protocols/img/MIME5.png","exportPath":"cn/standard-clint-service-protocols/img/mime5.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/mime5.html":{"createdTime":1748760540595,"modifiedTime":1748760540598,"sourceSize":39081,"sourcePath":"CN/Standard Clint Service Protocols/img/MIME5.png","exportPath":"cn/standard-clint-service-protocols/img/mime5.html","showInTree":true,"treeOrder":86,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/mims1.png":{"createdTime":1748761097753,"modifiedTime":1748761097753,"sourceSize":84030,"sourcePath":"CN/Standard Clint Service Protocols/img/MIMS1.png","exportPath":"cn/standard-clint-service-protocols/img/mims1.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/mims1.html":{"createdTime":1748761097753,"modifiedTime":1748761097753,"sourceSize":84030,"sourcePath":"CN/Standard Clint Service Protocols/img/MIMS1.png","exportPath":"cn/standard-clint-service-protocols/img/mims1.html","showInTree":true,"treeOrder":87,"backlinks":[],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/mims2.png":{"createdTime":1748761093015,"modifiedTime":1748761093016,"sourceSize":335759,"sourcePath":"CN/Standard Clint Service Protocols/img/MIMS2.png","exportPath":"cn/standard-clint-service-protocols/img/mims2.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/mims2.html":{"createdTime":1748761093015,"modifiedTime":1748761093016,"sourceSize":335759,"sourcePath":"CN/Standard Clint Service Protocols/img/MIMS2.png","exportPath":"cn/standard-clint-service-protocols/img/mims2.html","showInTree":true,"treeOrder":88,"backlinks":[],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/mims3.png":{"createdTime":1748761087448,"modifiedTime":1748761087449,"sourceSize":108165,"sourcePath":"CN/Standard Clint Service Protocols/img/MIMS3.png","exportPath":"cn/standard-clint-service-protocols/img/mims3.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/mims3.html":{"createdTime":1748761087448,"modifiedTime":1748761087449,"sourceSize":108165,"sourcePath":"CN/Standard Clint Service Protocols/img/MIMS3.png","exportPath":"cn/standard-clint-service-protocols/img/mims3.html","showInTree":true,"treeOrder":89,"backlinks":[],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/mims4.png":{"createdTime":1748761081203,"modifiedTime":1748761081203,"sourceSize":46212,"sourcePath":"CN/Standard Clint Service Protocols/img/MIMS4.png","exportPath":"cn/standard-clint-service-protocols/img/mims4.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/mims4.html":{"createdTime":1748761081203,"modifiedTime":1748761081203,"sourceSize":46212,"sourcePath":"CN/Standard Clint Service Protocols/img/MIMS4.png","exportPath":"cn/standard-clint-service-protocols/img/mims4.html","showInTree":true,"treeOrder":90,"backlinks":[],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/telnet.png":{"createdTime":1748765274948,"modifiedTime":1748765274950,"sourceSize":88985,"sourcePath":"CN/Standard Clint Service Protocols/img/Telnet.png","exportPath":"cn/standard-clint-service-protocols/img/telnet.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/telnet.html":{"createdTime":1748765274948,"modifiedTime":1748765274950,"sourceSize":88985,"sourcePath":"CN/Standard Clint Service Protocols/img/Telnet.png","exportPath":"cn/standard-clint-service-protocols/img/telnet.html","showInTree":true,"treeOrder":91,"backlinks":["cn/standard-clint-service-protocols/telnet.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/telnet_nvt.png":{"createdTime":1748765335427,"modifiedTime":1748765335431,"sourceSize":70573,"sourcePath":"CN/Standard Clint Service Protocols/img/Telnet_NVT.png","exportPath":"cn/standard-clint-service-protocols/img/telnet_nvt.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/telnet_nvt.html":{"createdTime":1748765335427,"modifiedTime":1748765335431,"sourceSize":70573,"sourcePath":"CN/Standard Clint Service Protocols/img/Telnet_NVT.png","exportPath":"cn/standard-clint-service-protocols/img/telnet_nvt.html","showInTree":true,"treeOrder":92,"backlinks":["cn/standard-clint-service-protocols/telnet.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/img/webemail.png":{"createdTime":1748761164216,"modifiedTime":1748761164217,"sourceSize":162793,"sourcePath":"CN/Standard Clint Service Protocols/img/WebEmail.png","exportPath":"cn/standard-clint-service-protocols/img/webemail.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/standard-clint-service-protocols/img/webemail.html":{"createdTime":1748761164216,"modifiedTime":1748761164217,"sourceSize":162793,"sourcePath":"CN/Standard Clint Service Protocols/img/WebEmail.png","exportPath":"cn/standard-clint-service-protocols/img/webemail.html","showInTree":true,"treeOrder":93,"backlinks":["cn/standard-clint-service-protocols/email.html"],"type":"attachment","data":null},"cn/standard-clint-service-protocols/email.html":{"createdTime":1748761399569,"modifiedTime":1748770205220,"sourceSize":16125,"sourcePath":"CN/Standard Clint Service Protocols/Email.md","exportPath":"cn/standard-clint-service-protocols/email.html","showInTree":true,"treeOrder":94,"backlinks":[],"type":"markdown","data":null},"cn/standard-clint-service-protocols/ftp.html":{"createdTime":1748761299809,"modifiedTime":1749740409438,"sourceSize":11827,"sourcePath":"CN/Standard Clint Service Protocols/FTP.md","exportPath":"cn/standard-clint-service-protocols/ftp.html","showInTree":true,"treeOrder":95,"backlinks":[],"type":"markdown","data":null},"cn/standard-clint-service-protocols/httpstructureexp.html":{"createdTime":1748752245385,"modifiedTime":1748752465382,"sourceSize":2561,"sourcePath":"CN/Standard Clint Service Protocols/HTTPstructureexp.md","exportPath":"cn/standard-clint-service-protocols/httpstructureexp.html","showInTree":true,"treeOrder":96,"backlinks":["cn/standard-clint-service-protocols/www-http.html"],"type":"markdown","data":null},"cn/standard-clint-service-protocols/telnet.html":{"createdTime":1748765143016,"modifiedTime":1748765474273,"sourceSize":4088,"sourcePath":"CN/Standard Clint Service Protocols/Telnet.md","exportPath":"cn/standard-clint-service-protocols/telnet.html","showInTree":true,"treeOrder":97,"backlinks":[],"type":"markdown","data":null},"cn/standard-clint-service-protocols/www-http.html":{"createdTime":1748761239994,"modifiedTime":1749740409506,"sourceSize":15575,"sourcePath":"CN/Standard Clint Service Protocols/WWW HTTP.md","exportPath":"cn/standard-clint-service-protocols/www-http.html","showInTree":true,"treeOrder":98,"backlinks":[],"type":"markdown","data":null},"cn/untitled/01-uploaded-chapter-1-introduction.ppt":{"createdTime":1744323340238,"modifiedTime":1741186693019,"sourceSize":440320,"sourcePath":"CN/Untitled/01 UPLOADED Chapter 1- Introduction.ppt","exportPath":"cn/untitled/01-uploaded-chapter-1-introduction.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/2standards-and-protocols.ppt":{"createdTime":1744323340270,"modifiedTime":1741186691192,"sourceSize":2401280,"sourcePath":"CN/Untitled/2standards-and-protocols.ppt","exportPath":"cn/untitled/2standards-and-protocols.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.mp4":{"createdTime":1744323199408,"modifiedTime":1744323185637,"sourceSize":80460334,"sourcePath":"CN/Untitled/3.6 Dijkstra Algorithm - Single Source Shortest Path - Greedy Method.mp4","exportPath":"cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.mp4","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.html":{"createdTime":1744323199408,"modifiedTime":1744323185637,"sourceSize":80460334,"sourcePath":"CN/Untitled/3.6 Dijkstra Algorithm - Single Source Shortest Path - Greedy Method.mp4","exportPath":"cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.html","showInTree":true,"treeOrder":102,"backlinks":[],"type":"attachment","data":null},"cn/untitled/20-22-network-layer-design-issues-upload.ppt":{"createdTime":1744323205281,"modifiedTime":1744323201151,"sourceSize":3023872,"sourcePath":"CN/Untitled/20-22 Network Layer Design Issues - upload.ppt","exportPath":"cn/untitled/20-22-network-layer-design-issues-upload.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/audio-video-compression.ppt":{"createdTime":1748610356401,"modifiedTime":1748610351128,"sourceSize":3233280,"sourcePath":"CN/Untitled/audio video compression.ppt","exportPath":"cn/untitled/audio-video-compression.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/ch21-upload.ppt":{"createdTime":1744323192681,"modifiedTime":1744323187661,"sourceSize":1217536,"sourcePath":"CN/Untitled/ch21 upload.ppt","exportPath":"cn/untitled/ch21-upload.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/connecting-lans-upload.ppt":{"createdTime":1744323226186,"modifiedTime":1744323219913,"sourceSize":802816,"sourcePath":"CN/Untitled/Connecting LANs UPLOAD.ppt","exportPath":"cn/untitled/connecting-lans-upload.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].pdf":{"createdTime":1748739620737,"modifiedTime":1746941739221,"sourceSize":11370452,"sourcePath":"CN/Untitled/Data Communications and Networking – Behrouz A. Forouzan.fourth edition[A4].pdf","exportPath":"cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].pdf","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].html":{"createdTime":1748739620737,"modifiedTime":1746941739221,"sourceSize":11370452,"sourcePath":"CN/Untitled/Data Communications and Networking – Behrouz A. Forouzan.fourth edition[A4].pdf","exportPath":"cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].html","showInTree":true,"treeOrder":107,"backlinks":[],"type":"attachment","data":null},"cn/untitled/distance-vector-routing-part-2.mp4":{"createdTime":1744323195915,"modifiedTime":1744323186577,"sourceSize":34304142,"sourcePath":"CN/Untitled/DISTANCE VECTOR ROUTING - PART-2.mp4","exportPath":"cn/untitled/distance-vector-routing-part-2.mp4","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"cn/untitled/distance-vector-routing-part-2.html":{"createdTime":1744323195915,"modifiedTime":1744323186577,"sourceSize":34304142,"sourcePath":"CN/Untitled/DISTANCE VECTOR ROUTING - PART-2.mp4","exportPath":"cn/untitled/distance-vector-routing-part-2.html","showInTree":true,"treeOrder":108,"backlinks":[],"type":"attachment","data":null},"cn/untitled/frmcoursesyllabusipdownload.pdf":{"createdTime":1748739120926,"modifiedTime":1746089047670,"sourceSize":146656,"sourcePath":"CN/Untitled/frmCourseSyllabusIPDownload.pdf","exportPath":"cn/untitled/frmcoursesyllabusipdownload.pdf","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/frmcoursesyllabusipdownload.html":{"createdTime":1748739120926,"modifiedTime":1746089047670,"sourceSize":146656,"sourcePath":"CN/Untitled/frmCourseSyllabusIPDownload.pdf","exportPath":"cn/untitled/frmcoursesyllabusipdownload.html","showInTree":true,"treeOrder":109,"backlinks":[],"type":"attachment","data":null},"cn/untitled/icmp-upload.pdf":{"createdTime":1744323214730,"modifiedTime":1744323208206,"sourceSize":376279,"sourcePath":"CN/Untitled/ICMP upload.pdf","exportPath":"cn/untitled/icmp-upload.pdf","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/icmp-upload.html":{"createdTime":1744323214730,"modifiedTime":1744323208206,"sourceSize":376279,"sourcePath":"CN/Untitled/ICMP upload.pdf","exportPath":"cn/untitled/icmp-upload.html","showInTree":true,"treeOrder":110,"backlinks":[],"type":"attachment","data":null},"cn/untitled/lect-5-chapt-2-transmission-media-upload.ppt":{"createdTime":1744323340435,"modifiedTime":1741186683692,"sourceSize":2054144,"sourcePath":"CN/Untitled/lect 5 chapt 2 transmission media upload.ppt","exportPath":"cn/untitled/lect-5-chapt-2-transmission-media-upload.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/lecture-6-chapter-2-line-coding-upload.pptx":{"createdTime":1744323340699,"modifiedTime":1741186684697,"sourceSize":1390258,"sourcePath":"CN/Untitled/lecture 6 chapter 2 line coding upload.pptx","exportPath":"cn/untitled/lecture-6-chapter-2-line-coding-upload.pptx","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/lecture-16-[autosaved]upload.ppt":{"createdTime":1744323210874,"modifiedTime":1744323206754,"sourceSize":2551296,"sourcePath":"CN/Untitled/lecture 16 [Autosaved]upload.ppt","exportPath":"cn/untitled/lecture-16-[autosaved]upload.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/lecture-multiple-access-upload-14.2.2021.ppt":{"createdTime":1744323222866,"modifiedTime":1744323219923,"sourceSize":1267200,"sourcePath":"CN/Untitled/lecture Multiple Access upload 14.2.2021.ppt","exportPath":"cn/untitled/lecture-multiple-access-upload-14.2.2021.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/updated-22a-(process-to-process-delivery-(udp-and-tcp))-121-slides.ppt":{"createdTime":1744323177149,"modifiedTime":1744270249235,"sourceSize":2358272,"sourcePath":"CN/Untitled/updated 22a (Process to process delivery (UDP and TCP)) 121 slides.ppt","exportPath":"cn/untitled/updated-22a-(process-to-process-delivery-(udp-and-tcp))-121-slides.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/upload-03-analog-and-digital-transmission.ppt":{"createdTime":1744323341046,"modifiedTime":1741186686196,"sourceSize":1733632,"sourcePath":"CN/Untitled/upload 03 Analog and Digital Transmission.ppt","exportPath":"cn/untitled/upload-03-analog-and-digital-transmission.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/upload-04-layered-architecture-of-computer-networks-osi-and-tcpip-model-lecture-5.ppt":{"createdTime":1744323341585,"modifiedTime":1741186687014,"sourceSize":1722368,"sourcePath":"CN/Untitled/upload 04 Layered Architecture of Computer Networks OSI and TCPIP Model Lecture 5.ppt","exportPath":"cn/untitled/upload-04-layered-architecture-of-computer-networks-osi-and-tcpip-model-lecture-5.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/upload-26-(smtp-and-ftp)-76-slides.ppt":{"createdTime":1748610345638,"modifiedTime":1748610340026,"sourceSize":1176064,"sourcePath":"CN/Untitled/UPLOAD 26 (SMTP and FTP) 76 slides.ppt","exportPath":"cn/untitled/upload-26-(smtp-and-ftp)-76-slides.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/upload-ch26-updated.ppt":{"createdTime":1748610333818,"modifiedTime":1748610315079,"sourceSize":9571840,"sourcePath":"CN/Untitled/UPLOAD ch26 UPDATED.ppt","exportPath":"cn/untitled/upload-ch26-updated.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/zerolecture-ece416.pdf":{"createdTime":1744323342186,"modifiedTime":1741186690455,"sourceSize":3595767,"sourcePath":"CN/Untitled/zerolecture ECE416.pdf","exportPath":"cn/untitled/zerolecture-ece416.pdf","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"cn/untitled/zerolecture-ece416.html":{"createdTime":1744323342186,"modifiedTime":1741186690455,"sourceSize":3595767,"sourcePath":"CN/Untitled/zerolecture ECE416.pdf","exportPath":"cn/untitled/zerolecture-ece416.html","showInTree":true,"treeOrder":120,"backlinks":[],"type":"attachment","data":null},"cn/csma.html":{"createdTime":1748855492871,"modifiedTime":1748855492876,"sourceSize":4741,"sourcePath":"CN/CSMA.md","exportPath":"cn/csma.html","showInTree":true,"treeOrder":121,"backlinks":["cn/randomaccess.html"],"type":"markdown","data":null},"cn/csmacd.html":{"createdTime":1748855490937,"modifiedTime":1748855490947,"sourceSize":5710,"sourcePath":"CN/CSMACD.md","exportPath":"cn/csmacd.html","showInTree":true,"treeOrder":122,"backlinks":["cn/randomaccess.html"],"type":"markdown","data":null},"cn/datacommunication.html":{"createdTime":1748855438445,"modifiedTime":1749740409155,"sourceSize":4186,"sourcePath":"CN/DataCommunication.md","exportPath":"cn/datacommunication.html","showInTree":true,"treeOrder":123,"backlinks":[],"type":"markdown","data":null},"cn/osi.html":{"createdTime":1748855948279,"modifiedTime":1749740409241,"sourceSize":12418,"sourcePath":"CN/OSI.md","exportPath":"cn/osi.html","showInTree":true,"treeOrder":124,"backlinks":["cn/topologies.html"],"type":"markdown","data":null},"cn/process-to-process.html":{"createdTime":1748770685667,"modifiedTime":1749740409317,"sourceSize":10440,"sourcePath":"CN/Process-To-Process.md","exportPath":"cn/process-to-process.html","showInTree":true,"treeOrder":125,"backlinks":[],"type":"markdown","data":null},"cn/purealoha.html":{"createdTime":1748856159072,"modifiedTime":1748856159078,"sourceSize":4083,"sourcePath":"CN/PureALOHA.md","exportPath":"cn/purealoha.html","showInTree":true,"treeOrder":126,"backlinks":["cn/randomaccess.html"],"type":"markdown","data":null},"cn/randomaccess.html":{"createdTime":1748856040261,"modifiedTime":1749740409360,"sourceSize":4252,"sourcePath":"CN/RandomAccess.md","exportPath":"cn/randomaccess.html","showInTree":true,"treeOrder":127,"backlinks":[],"type":"markdown","data":null},"cn/slottedaloha.html":{"createdTime":1748856206903,"modifiedTime":1748856206909,"sourceSize":3681,"sourcePath":"CN/SlottedALOHA.md","exportPath":"cn/slottedaloha.html","showInTree":true,"treeOrder":128,"backlinks":["cn/randomaccess.html"],"type":"markdown","data":null},"cn/tcp.html":{"createdTime":1748771288035,"modifiedTime":1749740409557,"sourceSize":16754,"sourcePath":"CN/TCP.md","exportPath":"cn/tcp.html","showInTree":true,"treeOrder":129,"backlinks":["cn/standard-clint-service-protocols/ftp.html"],"type":"markdown","data":null},"cn/tcp-ip.html":{"createdTime":1748856020276,"modifiedTime":1748856020277,"sourceSize":10201,"sourcePath":"CN/TCP IP.md","exportPath":"cn/tcp-ip.html","showInTree":true,"treeOrder":130,"backlinks":["cn/osi.html"],"type":"markdown","data":null},"cn/topologies.html":{"createdTime":1748855462942,"modifiedTime":1749740409627,"sourceSize":9999,"sourcePath":"CN/Topologies.md","exportPath":"cn/topologies.html","showInTree":true,"treeOrder":131,"backlinks":["cn/datacommunication.html"],"type":"markdown","data":null},"cn/udp.html":{"createdTime":1748771318641,"modifiedTime":1749740409695,"sourceSize":2808,"sourcePath":"CN/UDP.md","exportPath":"cn/udp.html","showInTree":true,"treeOrder":132,"backlinks":["cn/standard-clint-service-protocols/ftp.html"],"type":"markdown","data":null},"cn/untitled.html":{"createdTime":1748853032910,"modifiedTime":1752027272218,"sourceSize":2895,"sourcePath":"CN/Untitled.canvas","exportPath":"cn/untitled.html","showInTree":true,"treeOrder":133,"backlinks":[],"type":"canvas","data":null},"cn/untitled-1.html":{"createdTime":1748855387036,"modifiedTime":1752027274458,"sourceSize":10872,"sourcePath":"CN/Untitled 1.canvas","exportPath":"cn/untitled-1.html","showInTree":true,"treeOrder":134,"backlinks":[],"type":"canvas","data":null},"d3,js/untitled.html":{"createdTime":1751045990758,"modifiedTime":1751045990758,"sourceSize":0,"sourcePath":"D3,js/Untitled.md","exportPath":"d3,js/untitled.html","showInTree":true,"treeOrder":136,"backlinks":[],"type":"markdown","data":null},"eng/narration.html":{"createdTime":1750323788641,"modifiedTime":1750352540047,"sourceSize":0,"sourcePath":"Eng/Narration.md","exportPath":"eng/narration.html","showInTree":true,"treeOrder":138,"backlinks":[],"type":"markdown","data":null},"eng/para-jumbles.html":{"createdTime":1750414477024,"modifiedTime":1750415139943,"sourceSize":3273,"sourcePath":"Eng/Para Jumbles.md","exportPath":"eng/para-jumbles.html","showInTree":true,"treeOrder":139,"backlinks":[],"type":"markdown","data":null},"exercise/exercise.html":{"createdTime":1749833095645,"modifiedTime":1749882503194,"sourceSize":1959,"sourcePath":"Exercise/Exercise.md","exportPath":"exercise/exercise.html","showInTree":true,"treeOrder":141,"backlinks":[],"type":"markdown","data":null},"exercise/fat.html":{"createdTime":1752945200365,"modifiedTime":1754242661276,"sourceSize":5974,"sourcePath":"Exercise/fat.md","exportPath":"exercise/fat.html","showInTree":true,"treeOrder":142,"backlinks":[],"type":"markdown","data":null},"exercise/lifestyle.html":{"createdTime":1751985148709,"modifiedTime":1751987751379,"sourceSize":3685,"sourcePath":"Exercise/LifeStyle.md","exportPath":"exercise/lifestyle.html","showInTree":true,"treeOrder":143,"backlinks":[],"type":"markdown","data":null},"java/new-folder/03.-variables-and-data-types-(1).pptx":{"createdTime":1744111177560,"modifiedTime":1738935210251,"sourceSize":176122,"sourcePath":"Java/New folder/03. Variables and Data Types (1).pptx","exportPath":"java/new-folder/03.-variables-and-data-types-(1).pptx","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/04.-operators.pptx":{"createdTime":1744111166622,"modifiedTime":1738935209993,"sourceSize":394062,"sourcePath":"Java/New folder/04. Operators.pptx","exportPath":"java/new-folder/04.-operators.pptx","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/05.-control-structures.ppt":{"createdTime":1744111226814,"modifiedTime":1740393258729,"sourceSize":379392,"sourcePath":"Java/New folder/05. Control Structures.ppt","exportPath":"java/new-folder/05.-control-structures.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/07.-array-and-enum.ppt":{"createdTime":1744111173638,"modifiedTime":1740393257339,"sourceSize":681984,"sourcePath":"Java/New folder/07. Array and Enum.ppt","exportPath":"java/new-folder/07.-array-and-enum.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/09.-arraylist.ppt":{"createdTime":1744111246926,"modifiedTime":1744111244091,"sourceSize":337408,"sourcePath":"Java/New folder/09. ArrayList.ppt","exportPath":"java/new-folder/09.-arraylist.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/10.-methods-and-constructors.ppt":{"createdTime":1744111253106,"modifiedTime":1742965848111,"sourceSize":352256,"sourcePath":"Java/New folder/10. Methods and Constructors.ppt","exportPath":"java/new-folder/10.-methods-and-constructors.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/11.-this,-final,-super-and-static-keywords.ppt":{"createdTime":1744111236399,"modifiedTime":1748363266916,"sourceSize":650752,"sourcePath":"Java/New folder/11. this, final, super and static keywords.ppt","exportPath":"java/new-folder/11.-this,-final,-super-and-static-keywords.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/12.-abstract-class-and-interface.ppt":{"createdTime":1744111271311,"modifiedTime":1748363251239,"sourceSize":695296,"sourcePath":"Java/New folder/12. Abstract Class and Interface.ppt","exportPath":"java/new-folder/12.-abstract-class-and-interface.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/13.-string-handling(string-class).pptx":{"createdTime":1744111232861,"modifiedTime":1740547878933,"sourceSize":196976,"sourcePath":"Java/New folder/13. String Handling(String Class).pptx","exportPath":"java/new-folder/13.-string-handling(string-class).pptx","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/assertion.ppt":{"createdTime":1748014794408,"modifiedTime":1747918731291,"sourceSize":617984,"sourcePath":"Java/New folder/Assertion.ppt","exportPath":"java/new-folder/assertion.ppt","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/exception-handling.pptx":{"createdTime":1747938719767,"modifiedTime":1747918727142,"sourceSize":311706,"sourcePath":"Java/New folder/Exception Handling.pptx","exportPath":"java/new-folder/exception-handling.pptx","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/frmcoursesyllabusipdownload.pdf":{"createdTime":1748082333668,"modifiedTime":1748082340714,"sourceSize":196575,"sourcePath":"Java/New folder/frmCourseSyllabusIPDownload.pdf","exportPath":"java/new-folder/frmcoursesyllabusipdownload.pdf","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/frmcoursesyllabusipdownload.html":{"createdTime":1748082333668,"modifiedTime":1748082340714,"sourceSize":196575,"sourcePath":"Java/New folder/frmCourseSyllabusIPDownload.pdf","exportPath":"java/new-folder/frmcoursesyllabusipdownload.html","showInTree":true,"treeOrder":157,"backlinks":[],"type":"attachment","data":null},"java/new-folder/inheritance.pptx":{"createdTime":1744111267358,"modifiedTime":1748363252596,"sourceSize":1099909,"sourcePath":"Java/New folder/Inheritance.pptx","exportPath":"java/new-folder/inheritance.pptx","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/java-practise-qns.pdf":{"createdTime":1748417177184,"modifiedTime":1748443888935,"sourceSize":366194,"sourcePath":"Java/New folder/Java practise qns.pdf","exportPath":"java/new-folder/java-practise-qns.pdf","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/java-practise-qns.html":{"createdTime":1748417177184,"modifiedTime":1748443888935,"sourceSize":366194,"sourcePath":"Java/New folder/Java practise qns.pdf","exportPath":"java/new-folder/java-practise-qns.html","showInTree":true,"treeOrder":159,"backlinks":[],"type":"attachment","data":null},"java/new-folder/lect_2.pptx":{"createdTime":1744111184034,"modifiedTime":1737521493862,"sourceSize":636993,"sourcePath":"Java/New folder/lect_2.pptx","exportPath":"java/new-folder/lect_2.pptx","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/polymorphism-in-java.pptx":{"createdTime":1748063809949,"modifiedTime":1747918728974,"sourceSize":71490,"sourcePath":"Java/New folder/Polymorphism in java.pptx","exportPath":"java/new-folder/polymorphism-in-java.pptx","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/new-folder/zerolect_cse380.pptx":{"createdTime":1744111170445,"modifiedTime":1738935210100,"sourceSize":633790,"sourcePath":"Java/New folder/zeroLect_CSE380.pptx","exportPath":"java/new-folder/zerolect_cse380.pptx","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"java/arraylength.html":{"createdTime":1752134139951,"modifiedTime":1752134144177,"sourceSize":2739,"sourcePath":"Java/arrayLength.md","exportPath":"java/arraylength.html","showInTree":true,"treeOrder":163,"backlinks":[],"type":"markdown","data":null},"java/arrays.html":{"createdTime":1748443233334,"modifiedTime":1748443233338,"sourceSize":5170,"sourcePath":"Java/Arrays.md","exportPath":"java/arrays.html","showInTree":true,"treeOrder":164,"backlinks":[],"type":"markdown","data":null},"java/assertion.html":{"createdTime":1748016213311,"modifiedTime":1748362312487,"sourceSize":4742,"sourcePath":"Java/Assertion.md","exportPath":"java/assertion.html","showInTree":true,"treeOrder":165,"backlinks":[],"type":"markdown","data":null},"java/classes.html":{"createdTime":1748441320569,"modifiedTime":1749740357812,"sourceSize":5719,"sourcePath":"Java/Classes.md","exportPath":"java/classes.html","showInTree":true,"treeOrder":166,"backlinks":[],"type":"markdown","data":null},"java/constructor.html":{"createdTime":1748441912752,"modifiedTime":1748441912753,"sourceSize":6847,"sourcePath":"Java/Constructor.md","exportPath":"java/constructor.html","showInTree":true,"treeOrder":167,"backlinks":[],"type":"markdown","data":null},"java/contructorchainingwithsuper.html":{"createdTime":1748443332801,"modifiedTime":1748443332804,"sourceSize":3837,"sourcePath":"Java/ContructorChainingWithSuper.md","exportPath":"java/contructorchainingwithsuper.html","showInTree":true,"treeOrder":168,"backlinks":["java/superkeyword.html"],"type":"markdown","data":null},"java/contructorchainingwiththis.html":{"createdTime":1748443303984,"modifiedTime":1748443303990,"sourceSize":2374,"sourcePath":"Java/ContructorChainingWithThis.md","exportPath":"java/contructorchainingwiththis.html","showInTree":true,"treeOrder":169,"backlinks":["java/thiskeyword.html"],"type":"markdown","data":null},"java/default-values.html":{"createdTime":1748441320634,"modifiedTime":1748441320635,"sourceSize":2559,"sourcePath":"Java/Default values.md","exportPath":"java/default-values.html","showInTree":true,"treeOrder":170,"backlinks":[],"type":"markdown","data":null},"java/enums.html":{"createdTime":1748443253304,"modifiedTime":1749740357869,"sourceSize":3732,"sourcePath":"Java/Enums.md","exportPath":"java/enums.html","showInTree":true,"treeOrder":171,"backlinks":[],"type":"markdown","data":null},"java/enumsscope.html":{"createdTime":1748443273026,"modifiedTime":1748443273032,"sourceSize":3038,"sourcePath":"Java/EnumsScope.md","exportPath":"java/enumsscope.html","showInTree":true,"treeOrder":172,"backlinks":["java/enums.html"],"type":"markdown","data":null},"java/exception-and-assertion-mcqs.html":{"createdTime":1748021791852,"modifiedTime":1748237980649,"sourceSize":11158,"sourcePath":"Java/Exception and Assertion MCQs.md","exportPath":"java/exception-and-assertion-mcqs.html","showInTree":true,"treeOrder":173,"backlinks":[],"type":"markdown","data":null},"java/exception-handeling.html":{"createdTime":1747917513676,"modifiedTime":1748361350170,"sourceSize":15438,"sourcePath":"Java/Exception Handeling.md","exportPath":"java/exception-handeling.html","showInTree":true,"treeOrder":174,"backlinks":[],"type":"markdown","data":null},"java/finalkeyword.html":{"createdTime":1748443430239,"modifiedTime":1748443430240,"sourceSize":3428,"sourcePath":"Java/FinalKeyword.md","exportPath":"java/finalkeyword.html","showInTree":true,"treeOrder":175,"backlinks":[],"type":"markdown","data":null},"java/functionpassingvalues.html":{"createdTime":1752134852440,"modifiedTime":1752134855807,"sourceSize":4508,"sourcePath":"Java/functionPassingValues.md","exportPath":"java/functionpassingvalues.html","showInTree":true,"treeOrder":176,"backlinks":[],"type":"markdown","data":null},"java/instanceof.html":{"createdTime":1748441960393,"modifiedTime":1748442787540,"sourceSize":7016,"sourcePath":"Java/Instanceof.md","exportPath":"java/instanceof.html","showInTree":true,"treeOrder":177,"backlinks":["java/classes.html"],"type":"markdown","data":null},"java/interfaces.html":{"createdTime":1748441931557,"modifiedTime":1748441931561,"sourceSize":6383,"sourcePath":"Java/Interfaces.md","exportPath":"java/interfaces.html","showInTree":true,"treeOrder":178,"backlinks":[],"type":"markdown","data":null},"java/interfaces-and-lambda.html":{"createdTime":1748364418871,"modifiedTime":1748416203234,"sourceSize":8185,"sourcePath":"Java/Interfaces and Lambda.md","exportPath":"java/interfaces-and-lambda.html","showInTree":true,"treeOrder":179,"backlinks":[],"type":"markdown","data":null},"java/introduction-to-java.html":{"createdTime":1748441320691,"modifiedTime":1748441320694,"sourceSize":3781,"sourcePath":"Java/Introduction To Java.md","exportPath":"java/introduction-to-java.html","showInTree":true,"treeOrder":180,"backlinks":[],"type":"markdown","data":null},"java/java-io.html":{"createdTime":1748074743292,"modifiedTime":1748361278793,"sourceSize":6021,"sourcePath":"Java/Java IO.md","exportPath":"java/java-io.html","showInTree":true,"treeOrder":181,"backlinks":[],"type":"markdown","data":null},"java/java-syntax.html":{"createdTime":1748441320765,"modifiedTime":1748441320768,"sourceSize":1548,"sourcePath":"Java/Java Syntax.md","exportPath":"java/java-syntax.html","showInTree":true,"treeOrder":182,"backlinks":[],"type":"markdown","data":null},"java/javaa.html":{"createdTime":1748441320911,"modifiedTime":1754243170955,"sourceSize":34593,"sourcePath":"Java/Javaa.canvas","exportPath":"java/javaa.html","showInTree":true,"treeOrder":183,"backlinks":[],"type":"canvas","data":null},"java/loops.html":{"createdTime":1748441776463,"modifiedTime":1748441792472,"sourceSize":8743,"sourcePath":"Java/Loops.md","exportPath":"java/loops.html","showInTree":true,"treeOrder":184,"backlinks":[],"type":"markdown","data":null},"java/mcq_string.png":{"createdTime":1748441320458,"modifiedTime":1748441320460,"sourceSize":25359,"sourcePath":"Java/mcq_string.png","exportPath":"java/mcq_string.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"java/mcq_string.html":{"createdTime":1748441320458,"modifiedTime":1748441320460,"sourceSize":25359,"sourcePath":"Java/mcq_string.png","exportPath":"java/mcq_string.html","showInTree":true,"treeOrder":185,"backlinks":[],"type":"attachment","data":null},"java/methods.html":{"createdTime":1748441833220,"modifiedTime":1748441833223,"sourceSize":4914,"sourcePath":"Java/Methods.md","exportPath":"java/methods.html","showInTree":true,"treeOrder":186,"backlinks":[],"type":"markdown","data":null},"java/more-about-static.html":{"createdTime":1748441321095,"modifiedTime":1748441321346,"sourceSize":1148,"sourcePath":"Java/more about static.md","exportPath":"java/more-about-static.html","showInTree":true,"treeOrder":187,"backlinks":["java/java-syntax.html"],"type":"markdown","data":null},"java/operators-and-precedence.html":{"createdTime":1748441321404,"modifiedTime":1749740357895,"sourceSize":2138,"sourcePath":"Java/Operators and Precedence.md","exportPath":"java/operators-and-precedence.html","showInTree":true,"treeOrder":188,"backlinks":[],"type":"markdown","data":null},"java/polymorphism.html":{"createdTime":1748064361314,"modifiedTime":1748365445972,"sourceSize":4866,"sourcePath":"Java/Polymorphism.md","exportPath":"java/polymorphism.html","showInTree":true,"treeOrder":189,"backlinks":[],"type":"markdown","data":null},"java/shortcircuitlogicaloperators.html":{"createdTime":1748441748323,"modifiedTime":1748441762369,"sourceSize":2852,"sourcePath":"Java/ShortCircuitLogicalOperators.md","exportPath":"java/shortcircuitlogicaloperators.html","showInTree":true,"treeOrder":190,"backlinks":["java/operators-and-precedence.html"],"type":"markdown","data":null},"java/statickeyword.html":{"createdTime":1748443439860,"modifiedTime":1748443439861,"sourceSize":3711,"sourcePath":"Java/StaticKeyword.md","exportPath":"java/statickeyword.html","showInTree":true,"treeOrder":191,"backlinks":[],"type":"markdown","data":null},"java/stringcompareto().html":{"createdTime":1748443143426,"modifiedTime":1748443143432,"sourceSize":5611,"sourcePath":"Java/StringcompareTo().md","exportPath":"java/stringcompareto().html","showInTree":true,"treeOrder":192,"backlinks":["java/stringmethods.html"],"type":"markdown","data":null},"java/stringconcat.html":{"createdTime":1748443034821,"modifiedTime":1748443041946,"sourceSize":1520,"sourcePath":"Java/StringConcat.md","exportPath":"java/stringconcat.html","showInTree":true,"treeOrder":193,"backlinks":[],"type":"markdown","data":null},"java/stringconstructor.html":{"createdTime":1748443012679,"modifiedTime":1748443012680,"sourceSize":3145,"sourcePath":"Java/StringConstructor.md","exportPath":"java/stringconstructor.html","showInTree":true,"treeOrder":194,"backlinks":[],"type":"markdown","data":null},"java/stringgetchars().html":{"createdTime":1748443089156,"modifiedTime":1748443089189,"sourceSize":3892,"sourcePath":"Java/StringgetChars().md","exportPath":"java/stringgetchars().html","showInTree":true,"treeOrder":195,"backlinks":["java/stringmethods.html"],"type":"markdown","data":null},"java/stringmethods.html":{"createdTime":1748443187960,"modifiedTime":1749740357927,"sourceSize":4112,"sourcePath":"Java/StringMethods.md","exportPath":"java/stringmethods.html","showInTree":true,"treeOrder":196,"backlinks":[],"type":"markdown","data":null},"java/strings.html":{"createdTime":1748442989117,"modifiedTime":1748442989120,"sourceSize":3492,"sourcePath":"Java/Strings.md","exportPath":"java/strings.html","showInTree":true,"treeOrder":197,"backlinks":[],"type":"markdown","data":null},"java/stringsplit().html":{"createdTime":1748443103630,"modifiedTime":1748443103632,"sourceSize":2279,"sourcePath":"Java/Stringsplit().md","exportPath":"java/stringsplit().html","showInTree":true,"treeOrder":198,"backlinks":["java/stringmethods.html"],"type":"markdown","data":null},"java/superkeyword.html":{"createdTime":1748443393706,"modifiedTime":1749740357974,"sourceSize":5021,"sourcePath":"Java/SuperKeyword.md","exportPath":"java/superkeyword.html","showInTree":true,"treeOrder":199,"backlinks":[],"type":"markdown","data":null},"java/taking-input.html":{"createdTime":1748441320507,"modifiedTime":1748490876051,"sourceSize":6503,"sourcePath":"Java/Taking Input.md","exportPath":"java/taking-input.html","showInTree":true,"treeOrder":200,"backlinks":[],"type":"markdown","data":null},"java/takinginput_scanner_methods.png":{"createdTime":1748441321545,"modifiedTime":1748441321547,"sourceSize":297814,"sourcePath":"Java/TakingInput_scanner_methods.png","exportPath":"java/takinginput_scanner_methods.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"java/takinginput_scanner_methods.html":{"createdTime":1748441321545,"modifiedTime":1748441321547,"sourceSize":297814,"sourcePath":"Java/TakingInput_scanner_methods.png","exportPath":"java/takinginput_scanner_methods.html","showInTree":true,"treeOrder":201,"backlinks":["java/taking-input.html"],"type":"attachment","data":null},"java/thiskeyword.html":{"createdTime":1748443348163,"modifiedTime":1749740358013,"sourceSize":3604,"sourcePath":"Java/ThisKeyword.md","exportPath":"java/thiskeyword.html","showInTree":true,"treeOrder":202,"backlinks":[],"type":"markdown","data":null},"maths/gaphs.pdf":{"createdTime":1747886851470,"modifiedTime":1747901454422,"sourceSize":10769694,"sourcePath":"maths/gaphs.pdf","exportPath":"maths/gaphs.pdf","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"maths/gaphs.html":{"createdTime":1747886851470,"modifiedTime":1747901454422,"sourceSize":10769694,"sourcePath":"maths/gaphs.pdf","exportPath":"maths/gaphs.html","showInTree":true,"treeOrder":204,"backlinks":[],"type":"attachment","data":null},"maths/index.html":{"createdTime":1749093616843,"modifiedTime":1748500329161,"sourceSize":36,"sourcePath":"maths/index.md","exportPath":"maths/index.html","showInTree":true,"treeOrder":205,"backlinks":[],"type":"markdown","data":null},"maths/mth_unit-iv_mcq.pdf":{"createdTime":1747887000814,"modifiedTime":1747914291516,"sourceSize":1341652,"sourcePath":"maths/MTH_Unit IV_mcq.pdf","exportPath":"maths/mth_unit-iv_mcq.pdf","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"maths/mth_unit-iv_mcq.html":{"createdTime":1747887000814,"modifiedTime":1747914291516,"sourceSize":1341652,"sourcePath":"maths/MTH_Unit IV_mcq.pdf","exportPath":"maths/mth_unit-iv_mcq.html","showInTree":true,"treeOrder":206,"backlinks":[],"type":"attachment","data":null},"maths/rosen_discrete_mathematics_and_its_applications_7th_edition.pdf":{"createdTime":1747886886321,"modifiedTime":1747455680637,"sourceSize":37978234,"sourcePath":"maths/Rosen_Discrete_Mathematics_and_Its_Applications_7th_Edition.pdf","exportPath":"maths/rosen_discrete_mathematics_and_its_applications_7th_edition.pdf","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"maths/rosen_discrete_mathematics_and_its_applications_7th_edition.html":{"createdTime":1747886886321,"modifiedTime":1747455680637,"sourceSize":37978234,"sourcePath":"maths/Rosen_Discrete_Mathematics_and_Its_Applications_7th_Edition.pdf","exportPath":"maths/rosen_discrete_mathematics_and_its_applications_7th_edition.html","showInTree":true,"treeOrder":207,"backlinks":[],"type":"attachment","data":null},"maths/trees.pdf":{"createdTime":1747895080284,"modifiedTime":1747895654483,"sourceSize":3531884,"sourcePath":"maths/trees.pdf","exportPath":"maths/trees.pdf","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"maths/trees.html":{"createdTime":1747895080284,"modifiedTime":1747895654483,"sourceSize":3531884,"sourcePath":"maths/trees.pdf","exportPath":"maths/trees.html","showInTree":true,"treeOrder":208,"backlinks":[],"type":"attachment","data":null},"maths/untitled.html":{"createdTime":1747992133966,"modifiedTime":1748019845507,"sourceSize":0,"sourcePath":"maths/Untitled.md","exportPath":"maths/untitled.html","showInTree":true,"treeOrder":209,"backlinks":[],"type":"markdown","data":null},"maths/wi.pdf":{"createdTime":1747892661151,"modifiedTime":1747892661175,"sourceSize":218664,"sourcePath":"maths/wi.pdf","exportPath":"maths/wi.pdf","showInTree":true,"treeOrder":0,"backlinks":[],"type":"other","data":null},"maths/wi.html":{"createdTime":1747892661151,"modifiedTime":1747892661175,"sourceSize":218664,"sourcePath":"maths/wi.pdf","exportPath":"maths/wi.html","showInTree":true,"treeOrder":210,"backlinks":[],"type":"attachment","data":null},"index.html":{"createdTime":1752027308637,"modifiedTime":1752027308637,"sourceSize":0,"sourcePath":"Index.md","exportPath":"index.html","showInTree":true,"treeOrder":211,"backlinks":[],"type":"markdown","data":null}},"sourceToTarget":{"":"site-lib/rss.xml","Analytical/img/Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 2m44s].png":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-2m44s].html","Analytical/img/Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 22m40s].png":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-22m40s].html","Analytical/img/Study Roof - Numbers System (Part 1) 🔴Classification of numbers 🔴Conversion of decimal to fraction Shortcut Trick [3NcDbKkTEmY - 1006x566 - 25m30s].png":"analytical/img/study-roof-numbers-system-(part-1)-🔴classification-of-numbers-🔴conversion-of-decimal-to-fraction-shortcut-trick-[3ncdbkktemy-1006x566-25m30s].html","Analytical/Analytical.canvas":"analytical/analytical.html","Analytical/CI and SI.md":"analytical/ci-and-si.html","Analytical/Factors and Number of Zeros.md":"analytical/factors-and-number-of-zeros.html","Analytical/Fast Calculation.md":"analytical/fast-calculation.html","Analytical/Number System.md":"analytical/number-system.html","Analytical/permutation&computation.md":"analytical/permutation&computation.html","Analytical/Probability.md":"analytical/probability.html","Analytical/Speed Distance Time.md":"analytical/speed-distance-time.html","Analytical/Time and Work.md":"analytical/time-and-work.html","Analytical/Unit Digit.md":"analytical/unit-digit.html","CN/img/1.png":"cn/img/1.html","CN/img/2.png":"cn/img/2.html","CN/img/3.png":"cn/img/3.html","CN/img/4.png":"cn/img/4.html","CN/img/5.png":"cn/img/5.html","CN/img/6.png":"cn/img/6.html","CN/img/7.png":"cn/img/7.html","CN/img/8.png":"cn/img/8.html","CN/img/9.png":"cn/img/9.html","CN/img/10.png":"cn/img/10.html","CN/img/11.png":"cn/img/11.html","CN/img/12.png":"cn/img/12.html","CN/img/CSMA1.png":"cn/img/csma1.html","CN/img/CSMA2.png":"cn/img/csma2.html","CN/img/CSMA3.png":"cn/img/csma3.html","CN/img/CSMA4.png":"cn/img/csma4.html","CN/img/CSMACD1.png":"cn/img/csmacd1.html","CN/img/CSMACD2.png":"cn/img/csmacd2.html","CN/img/CSMACD3.png":"cn/img/csmacd3.html","CN/img/CSMACD4.png":"cn/img/csmacd4.html","CN/img/Layeredexample.png":"cn/img/layeredexample.html","CN/img/MultipleAccess.png":"cn/img/multipleaccess.html","CN/img/OSI1.png":"cn/img/osi1.html","CN/img/OSI2.png":"cn/img/osi2.html","CN/img/OSI3.png":"cn/img/osi3.html","CN/img/OSI11.png":"cn/img/osi11.html","CN/img/OSI12.png":"cn/img/osi12.html","CN/img/OSI13.png":"cn/img/osi13.html","CN/img/OSI14.png":"cn/img/osi14.html","CN/img/OSI15.png":"cn/img/osi15.html","CN/img/OSI16.png":"cn/img/osi16.html","CN/img/OSI17.png":"cn/img/osi17.html","CN/img/OSI18.png":"cn/img/osi18.html","CN/img/OSI19.png":"cn/img/osi19.html","CN/img/OSI20.png":"cn/img/osi20.html","CN/img/OSI21.png":"cn/img/osi21.html","CN/img/Pasted image 20250222185456.png":"cn/img/pasted-image-20250222185456.html","CN/img/Pasted image 20250223092151.png":"cn/img/pasted-image-20250223092151.html","CN/img/Pasted image 20250228090351.png":"cn/img/pasted-image-20250228090351.html","CN/img/PureALOHA1.png":"cn/img/purealoha1.html","CN/img/PureALOHA2.png":"cn/img/purealoha2.html","CN/img/Screenshot 2025-02-23 091952.png":"cn/img/screenshot-2025-02-23-091952.html","CN/img/Screenshot 2025-02-23 092436.png":"cn/img/screenshot-2025-02-23-092436.html","CN/img/SlottedALOHA1.png":"cn/img/slottedaloha1.html","CN/img/SlottedALOHA2.png":"cn/img/slottedaloha2.html","CN/img/TCPHeader.png":"cn/img/tcpheader.html","CN/img/TCPHeaderFlags.png":"cn/img/tcpheaderflags.html","CN/img/TCPsegmentflow.png":"cn/img/tcpsegmentflow.html","CN/img/Topologies.jpg":"cn/img/topologies.html","CN/Standard Clint Service Protocols/img/Emailaddress.png":"cn/standard-clint-service-protocols/img/emailaddress.html","CN/Standard Clint Service Protocols/img/EmailArct.png":"cn/standard-clint-service-protocols/img/emailarct.html","CN/Standard Clint Service Protocols/img/EmailEg1.png":"cn/standard-clint-service-protocols/img/emaileg1.html","CN/Standard Clint Service Protocols/img/EmailEg2.png":"cn/standard-clint-service-protocols/img/emaileg2.html","CN/Standard Clint Service Protocols/img/EmailEgcookie.png":"cn/standard-clint-service-protocols/img/emailegcookie.html","CN/Standard Clint Service Protocols/img/EmailMessageStruct.png":"cn/standard-clint-service-protocols/img/emailmessagestruct.html","CN/Standard Clint Service Protocols/img/EmailNONPersistent.png":"cn/standard-clint-service-protocols/img/emailnonpersistent.html","CN/Standard Clint Service Protocols/img/EmailPersistent.png":"cn/standard-clint-service-protocols/img/emailpersistent.html","CN/Standard Clint Service Protocols/img/EmailProtocol.png":"cn/standard-clint-service-protocols/img/emailprotocol.html","CN/Standard Clint Service Protocols/img/EmailUserAgent.png":"cn/standard-clint-service-protocols/img/emailuseragent.html","CN/Standard Clint Service Protocols/img/EmailWorkingBrowser.png":"cn/standard-clint-service-protocols/img/emailworkingbrowser.html","CN/Standard Clint Service Protocols/img/FTP.png":"cn/standard-clint-service-protocols/img/ftp.html","CN/Standard Clint Service Protocols/img/FTPcmd.png":"cn/standard-clint-service-protocols/img/ftpcmd.html","CN/Standard Clint Service Protocols/img/FTPEg.png":"cn/standard-clint-service-protocols/img/ftpeg.html","CN/Standard Clint Service Protocols/img/HTTPEg1.png":"cn/standard-clint-service-protocols/img/httpeg1.html","CN/Standard Clint Service Protocols/img/HTTPEg2.png":"cn/standard-clint-service-protocols/img/httpeg2.html","CN/Standard Clint Service Protocols/img/HTTPProxy.png":"cn/standard-clint-service-protocols/img/httpproxy.html","CN/Standard Clint Service Protocols/img/HTTPstruct.png":"cn/standard-clint-service-protocols/img/httpstruct.html","CN/Standard Clint Service Protocols/img/MIME5.png":"cn/standard-clint-service-protocols/img/mime5.html","CN/Standard Clint Service Protocols/img/MIMS1.png":"cn/standard-clint-service-protocols/img/mims1.html","CN/Standard Clint Service Protocols/img/MIMS2.png":"cn/standard-clint-service-protocols/img/mims2.html","CN/Standard Clint Service Protocols/img/MIMS3.png":"cn/standard-clint-service-protocols/img/mims3.html","CN/Standard Clint Service Protocols/img/MIMS4.png":"cn/standard-clint-service-protocols/img/mims4.html","CN/Standard Clint Service Protocols/img/Telnet.png":"cn/standard-clint-service-protocols/img/telnet.html","CN/Standard Clint Service Protocols/img/Telnet_NVT.png":"cn/standard-clint-service-protocols/img/telnet_nvt.html","CN/Standard Clint Service Protocols/img/WebEmail.png":"cn/standard-clint-service-protocols/img/webemail.html","CN/Standard Clint Service Protocols/Email.md":"cn/standard-clint-service-protocols/email.html","CN/Standard Clint Service Protocols/FTP.md":"cn/standard-clint-service-protocols/ftp.html","CN/Standard Clint Service Protocols/HTTPstructureexp.md":"cn/standard-clint-service-protocols/httpstructureexp.html","CN/Standard Clint Service Protocols/Telnet.md":"cn/standard-clint-service-protocols/telnet.html","CN/Standard Clint Service Protocols/WWW HTTP.md":"cn/standard-clint-service-protocols/www-http.html","CN/Untitled/01 UPLOADED Chapter 1- Introduction.ppt":"cn/untitled/01-uploaded-chapter-1-introduction.ppt","CN/Untitled/2standards-and-protocols.ppt":"cn/untitled/2standards-and-protocols.ppt","CN/Untitled/3.6 Dijkstra Algorithm - Single Source Shortest Path - Greedy Method.mp4":"cn/untitled/3.6-dijkstra-algorithm-single-source-shortest-path-greedy-method.html","CN/Untitled/20-22 Network Layer Design Issues - upload.ppt":"cn/untitled/20-22-network-layer-design-issues-upload.ppt","CN/Untitled/audio video compression.ppt":"cn/untitled/audio-video-compression.ppt","CN/Untitled/ch21 upload.ppt":"cn/untitled/ch21-upload.ppt","CN/Untitled/Connecting LANs UPLOAD.ppt":"cn/untitled/connecting-lans-upload.ppt","CN/Untitled/Data Communications and Networking – Behrouz A. Forouzan.fourth edition[A4].pdf":"cn/untitled/data-communications-and-networking-–-behrouz-a.-forouzan.fourth-edition[a4].html","CN/Untitled/DISTANCE VECTOR ROUTING - PART-2.mp4":"cn/untitled/distance-vector-routing-part-2.html","CN/Untitled/frmCourseSyllabusIPDownload.pdf":"cn/untitled/frmcoursesyllabusipdownload.html","CN/Untitled/ICMP upload.pdf":"cn/untitled/icmp-upload.html","CN/Untitled/lect 5 chapt 2 transmission media upload.ppt":"cn/untitled/lect-5-chapt-2-transmission-media-upload.ppt","CN/Untitled/lecture 6 chapter 2 line coding upload.pptx":"cn/untitled/lecture-6-chapter-2-line-coding-upload.pptx","CN/Untitled/lecture 16 [Autosaved]upload.ppt":"cn/untitled/lecture-16-[autosaved]upload.ppt","CN/Untitled/lecture Multiple Access upload 14.2.2021.ppt":"cn/untitled/lecture-multiple-access-upload-14.2.2021.ppt","CN/Untitled/updated 22a (Process to process delivery (UDP and TCP)) 121 slides.ppt":"cn/untitled/updated-22a-(process-to-process-delivery-(udp-and-tcp))-121-slides.ppt","CN/Untitled/upload 03 Analog and Digital Transmission.ppt":"cn/untitled/upload-03-analog-and-digital-transmission.ppt","CN/Untitled/upload 04 Layered Architecture of Computer Networks OSI and TCPIP Model Lecture 5.ppt":"cn/untitled/upload-04-layered-architecture-of-computer-networks-osi-and-tcpip-model-lecture-5.ppt","CN/Untitled/UPLOAD 26 (SMTP and FTP) 76 slides.ppt":"cn/untitled/upload-26-(smtp-and-ftp)-76-slides.ppt","CN/Untitled/UPLOAD ch26 UPDATED.ppt":"cn/untitled/upload-ch26-updated.ppt","CN/Untitled/zerolecture ECE416.pdf":"cn/untitled/zerolecture-ece416.html","CN/CSMA.md":"cn/csma.html","CN/CSMACD.md":"cn/csmacd.html","CN/DataCommunication.md":"cn/datacommunication.html","CN/OSI.md":"cn/osi.html","CN/Process-To-Process.md":"cn/process-to-process.html","CN/PureALOHA.md":"cn/purealoha.html","CN/RandomAccess.md":"cn/randomaccess.html","CN/SlottedALOHA.md":"cn/slottedaloha.html","CN/TCP.md":"cn/tcp.html","CN/TCP IP.md":"cn/tcp-ip.html","CN/Topologies.md":"cn/topologies.html","CN/UDP.md":"cn/udp.html","CN/Untitled.canvas":"cn/untitled.html","CN/Untitled 1.canvas":"cn/untitled-1.html","D3,js/Untitled.md":"d3,js/untitled.html","Eng/Narration.md":"eng/narration.html","Eng/Para Jumbles.md":"eng/para-jumbles.html","Exercise/Exercise.md":"exercise/exercise.html","Exercise/fat.md":"exercise/fat.html","Exercise/LifeStyle.md":"exercise/lifestyle.html","Java/New folder/03. Variables and Data Types (1).pptx":"java/new-folder/03.-variables-and-data-types-(1).pptx","Java/New folder/04. Operators.pptx":"java/new-folder/04.-operators.pptx","Java/New folder/05. Control Structures.ppt":"java/new-folder/05.-control-structures.ppt","Java/New folder/07. Array and Enum.ppt":"java/new-folder/07.-array-and-enum.ppt","Java/New folder/09. ArrayList.ppt":"java/new-folder/09.-arraylist.ppt","Java/New folder/10. Methods and Constructors.ppt":"java/new-folder/10.-methods-and-constructors.ppt","Java/New folder/11. this, final, super and static keywords.ppt":"java/new-folder/11.-this,-final,-super-and-static-keywords.ppt","Java/New folder/12. Abstract Class and Interface.ppt":"java/new-folder/12.-abstract-class-and-interface.ppt","Java/New folder/13. String Handling(String Class).pptx":"java/new-folder/13.-string-handling(string-class).pptx","Java/New folder/Assertion.ppt":"java/new-folder/assertion.ppt","Java/New folder/Exception Handling.pptx":"java/new-folder/exception-handling.pptx","Java/New folder/frmCourseSyllabusIPDownload.pdf":"java/new-folder/frmcoursesyllabusipdownload.html","Java/New folder/Inheritance.pptx":"java/new-folder/inheritance.pptx","Java/New folder/Java practise qns.pdf":"java/new-folder/java-practise-qns.html","Java/New folder/lect_2.pptx":"java/new-folder/lect_2.pptx","Java/New folder/Polymorphism in java.pptx":"java/new-folder/polymorphism-in-java.pptx","Java/New folder/zeroLect_CSE380.pptx":"java/new-folder/zerolect_cse380.pptx","Java/arrayLength.md":"java/arraylength.html","Java/Arrays.md":"java/arrays.html","Java/Assertion.md":"java/assertion.html","Java/Classes.md":"java/classes.html","Java/Constructor.md":"java/constructor.html","Java/ContructorChainingWithSuper.md":"java/contructorchainingwithsuper.html","Java/ContructorChainingWithThis.md":"java/contructorchainingwiththis.html","Java/Default values.md":"java/default-values.html","Java/Enums.md":"java/enums.html","Java/EnumsScope.md":"java/enumsscope.html","Java/Exception and Assertion MCQs.md":"java/exception-and-assertion-mcqs.html","Java/Exception Handeling.md":"java/exception-handeling.html","Java/FinalKeyword.md":"java/finalkeyword.html","Java/functionPassingValues.md":"java/functionpassingvalues.html","Java/Instanceof.md":"java/instanceof.html","Java/Interfaces.md":"java/interfaces.html","Java/Interfaces and Lambda.md":"java/interfaces-and-lambda.html","Java/Introduction To Java.md":"java/introduction-to-java.html","Java/Java IO.md":"java/java-io.html","Java/Java Syntax.md":"java/java-syntax.html","Java/Javaa.canvas":"java/javaa.html","Java/Loops.md":"java/loops.html","Java/mcq_string.png":"java/mcq_string.html","Java/Methods.md":"java/methods.html","Java/more about static.md":"java/more-about-static.html","Java/Operators and Precedence.md":"java/operators-and-precedence.html","Java/Polymorphism.md":"java/polymorphism.html","Java/ShortCircuitLogicalOperators.md":"java/shortcircuitlogicaloperators.html","Java/StaticKeyword.md":"java/statickeyword.html","Java/StringcompareTo().md":"java/stringcompareto().html","Java/StringConcat.md":"java/stringconcat.html","Java/StringConstructor.md":"java/stringconstructor.html","Java/StringgetChars().md":"java/stringgetchars().html","Java/StringMethods.md":"java/stringmethods.html","Java/Strings.md":"java/strings.html","Java/Stringsplit().md":"java/stringsplit().html","Java/SuperKeyword.md":"java/superkeyword.html","Java/Taking Input.md":"java/taking-input.html","Java/TakingInput_scanner_methods.png":"java/takinginput_scanner_methods.html","Java/ThisKeyword.md":"java/thiskeyword.html","maths/gaphs.pdf":"maths/gaphs.html","maths/index.md":"maths/index.html","maths/MTH_Unit IV_mcq.pdf":"maths/mth_unit-iv_mcq.html","maths/Rosen_Discrete_Mathematics_and_Its_Applications_7th_Edition.pdf":"maths/rosen_discrete_mathematics_and_its_applications_7th_edition.html","maths/trees.pdf":"maths/trees.html","maths/Untitled.md":"maths/untitled.html","maths/wi.pdf":"maths/wi.html","Index.md":"index.html"},"featureOptions":{"backlinks":{"featureId":"backlinks","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":".footer","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Backlinks","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""}},"tags":{"featureId":"tags","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":".header .data-bar","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"showInlineTags":true,"showFrontmatterTags":true,"info_showInlineTags":{"show":true,"name":"","description":"Show tags defined inside the document at the top of the page.","placeholder":""},"info_showFrontmatterTags":{"show":true,"name":"","description":"Show tags defined in the frontmatter of the document at the top of the page.","placeholder":""}},"alias":{"featureId":"aliases","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":".header .data-bar","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Aliases","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""}},"properties":{"featureId":"properties","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":".header","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Properties","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"info_hideProperties":{"show":true,"name":"","description":"A list of properties to hide from the properties view","placeholder":""}},"fileNavigation":{"featureId":"file-navigation","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#left-sidebar-content","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"info_includePath":{"show":false,"name":"","description":"","placeholder":""},"showCustomIcons":false,"showDefaultFolderIcons":false,"showDefaultFileIcons":false,"defaultFolderIcon":"lucide//folder","defaultFileIcon":"lucide//file","defaultMediaIcon":"lucide//file-image","exposeStartingPath":true,"info_showCustomIcons":{"show":true,"name":"","description":"Show custom icons for files and folders","placeholder":""},"info_showDefaultFolderIcons":{"show":true,"name":"","description":"Show a default icon of a folder for every folder in the tree","placeholder":""},"info_showDefaultFileIcons":{"show":true,"name":"","description":"Show a default icon of a file for every file in the tree","placeholder":""},"info_defaultFolderIcon":{"show":true,"name":"","description":"The icon to use for folders. Prefix with 'lucide//' to use a Lucide icon","placeholder":""},"info_defaultFileIcon":{"show":true,"name":"","description":"The icon to use for files. Prefix with 'lucide//' to use a Lucide icon","placeholder":""},"info_defaultMediaIcon":{"show":true,"name":"","description":"The icon to use for media files. Prefix with 'lucide//' to use a Lucide icon","placeholder":""},"info_exposeStartingPath":{"show":true,"name":"","description":"Whether or not to show the current file in the file tree when the page is first loaded","placeholder":""},"includePath":"site-lib/html/file-tree.html"},"search":{"featureId":"search","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#left-sidebar .topbar-content","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Search...","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""}},"outline":{"featureId":"outline","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#right-sidebar-content","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Outline","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"startCollapsed":false,"minCollapseDepth":0,"info_startCollapsed":{"show":true,"name":"","description":"Should the outline start collapsed?","placeholder":""},"info_minCollapseDepth":{"show":true,"name":"","description":"Only allow outline items to be collapsed if they are at least this many levels deep in the tree.","placeholder":"","dropdownOptions":{"1":1,"2":2,"No Collapse":100}}},"themeToggle":{"featureId":"theme-toggle","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#right-sidebar .topbar-content","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""}},"graphView":{"featureId":"graph-view","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#right-sidebar-content","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Graph View","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"showOrphanNodes":true,"showAttachments":false,"allowGlobalGraph":true,"allowExpand":true,"attractionForce":1,"linkLength":15,"repulsionForce":80,"centralForce":2,"edgePruning":100,"minNodeRadius":3,"maxNodeRadius":7,"info_showOrphanNodes":{"show":true,"name":"","description":"Show nodes that are not connected to any other nodes.","placeholder":""},"info_showAttachments":{"show":true,"name":"","description":"Show attachments like images and PDFs as nodes in the graph.","placeholder":""},"info_allowGlobalGraph":{"show":true,"name":"","description":"Allow the user to view the global graph of all nodes.","placeholder":""},"info_allowExpand":{"show":true,"name":"","description":"Allow the user to pop-out the graph view to take up the whole screen","placeholder":""},"info_attractionForce":{"show":true,"name":"","description":"How much should linked nodes attract each other? This will make the graph appear more clustered.","placeholder":""},"info_linkLength":{"show":true,"name":"","description":"How long should the links between nodes be? The shorter the links the more connected nodes will cluster together.","placeholder":""},"info_repulsionForce":{"show":true,"name":"","description":"How much should nodes repel each other? This will make disconnected parts more spread out.","placeholder":""},"info_centralForce":{"show":true,"name":"","description":"How much should nodes be attracted to the center? This will make the graph appear more dense and circular.","placeholder":""},"info_edgePruning":{"show":true,"name":"","description":"Edges with a length above this threshold will not be rendered, however they will still contribute to the simulation. This can help large tangled graphs look more organised. Hovering over a node will still display these links.","placeholder":""},"info_minNodeRadius":{"show":true,"name":"","description":"How small should the smallest nodes be? The smaller a node is the less it will attract other nodes.","placeholder":""},"info_maxNodeRadius":{"show":true,"name":"","description":"How large should the largest nodes be? Nodes are sized by how many links they have. The larger a node is the more it will attract other nodes. This can be used to create a good grouping around the most important nodes.","placeholder":""}},"sidebar":{"featureId":"sidebar","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"allowResizing":true,"allowCollapsing":true,"rightDefaultWidth":"20em","leftDefaultWidth":"20em","info_allowResizing":{"show":true,"name":"","description":"Whether or not to allow the sidebars to be resized","placeholder":""},"info_allowCollapsing":{"show":true,"name":"","description":"Whether or not to allow the sidebars to be collapsed","placeholder":""},"info_rightDefaultWidth":{"show":true,"name":"","description":"The default width of the right sidebar","placeholder":""},"info_leftDefaultWidth":{"show":true,"name":"","description":"The default width of the left sidebar","placeholder":""}},"customHead":{"featureId":"custom-head","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"head","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"info_includePath":{"show":false,"name":"","description":"","placeholder":""},"sourcePath":"","info_sourcePath":{"show":true,"name":"","description":"The local path to the source .html file which will be included.","placeholder":"","fileInputOptions":{"makeRelativeToVault":true,"browseButton":true}},"includePath":"site-lib/html/custom-head.html"},"document":{"featureId":"obsidian-document","enabled":true,"unavailable":false,"alwaysEnabled":true,"hideSettingsButton":false,"allowFoldingLists":true,"allowFoldingHeadings":true,"documentWidth":"40em","info_allowFoldingLists":{"show":true,"name":"","description":"Whether or not to allow lists to be folded","placeholder":""},"info_allowFoldingHeadings":{"show":true,"name":"","description":"Whether or not to allow headings to be folded","placeholder":""},"info_documentWidth":{"show":true,"name":"","description":"The width of the document","placeholder":""}},"rss":{"featureId":"rss","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"siteUrl":"","authorName":"","info_siteUrl":{"show":true,"name":"","description":"The url that this site will be hosted at","placeholder":"https://example.com/mysite"},"info_authorName":{"show":true,"name":"","description":"The name of the author of the site","placeholder":""}},"linkPreview":{"featureId":"link-preview","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":true}},"modifiedTime":1754243123418,"siteName":"complete","vaultName":"complete","exportRoot":"","baseURL":"","pluginVersion":"1.9.2","themeName":"","bodyClasses":"publish css-settings-manager show-inline-title show-ribbon is-focused","hasFavicon":false}